<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1510" onload="init(evt)" viewBox="0 0 1200 1510" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1510" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1493.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1493.00"> </text><svg id="frames" x="10" width="1180" total_samples="416"><g><title>__set_task_comm (1 samples, 0.24%)</title><rect x="0.0000%" y="1333" width="0.2404%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1343.50"></text></g><g><title>strscpy_pad (1 samples, 0.24%)</title><rect x="0.0000%" y="1317" width="0.2404%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1327.50"></text></g><g><title>strscpy (1 samples, 0.24%)</title><rect x="0.0000%" y="1301" width="0.2404%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1311.50"></text></g><g><title>perf-exec (5 samples, 1.20%)</title><rect x="0.0000%" y="1445" width="1.2019%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1455.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 1.20%)</title><rect x="0.0000%" y="1429" width="1.2019%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1439.50"></text></g><g><title>do_syscall_64 (5 samples, 1.20%)</title><rect x="0.0000%" y="1413" width="1.2019%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1423.50"></text></g><g><title>__x64_sys_execve (5 samples, 1.20%)</title><rect x="0.0000%" y="1397" width="1.2019%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1407.50"></text></g><g><title>bprm_execve (5 samples, 1.20%)</title><rect x="0.0000%" y="1381" width="1.2019%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1391.50"></text></g><g><title>load_elf_binary (5 samples, 1.20%)</title><rect x="0.0000%" y="1365" width="1.2019%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1375.50"></text></g><g><title>begin_new_exec (5 samples, 1.20%)</title><rect x="0.0000%" y="1349" width="1.2019%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1359.50"></text></g><g><title>perf_event_exec (4 samples, 0.96%)</title><rect x="0.2404%" y="1333" width="0.9615%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="4"/><text x="0.4904%" y="1343.50"></text></g><g><title>ctx_resched (4 samples, 0.96%)</title><rect x="0.2404%" y="1317" width="0.9615%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="4"/><text x="0.4904%" y="1327.50"></text></g><g><title>ctx_sched_in (4 samples, 0.96%)</title><rect x="0.2404%" y="1301" width="0.9615%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="4"/><text x="0.4904%" y="1311.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (4 samples, 0.96%)</title><rect x="0.2404%" y="1285" width="0.9615%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="4"/><text x="0.4904%" y="1295.50"></text></g><g><title>merge_sched_in (4 samples, 0.96%)</title><rect x="0.2404%" y="1269" width="0.9615%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="4"/><text x="0.4904%" y="1279.50"></text></g><g><title>event_sched_in (4 samples, 0.96%)</title><rect x="0.2404%" y="1253" width="0.9615%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="4"/><text x="0.4904%" y="1263.50"></text></g><g><title>perf_ibs_add (4 samples, 0.96%)</title><rect x="0.2404%" y="1237" width="0.9615%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="4"/><text x="0.4904%" y="1247.50"></text></g><g><title>perf_event_update_userpage (4 samples, 0.96%)</title><rect x="0.2404%" y="1221" width="0.9615%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="4"/><text x="0.4904%" y="1231.50"></text></g><g><title>calc_timer_values (4 samples, 0.96%)</title><rect x="0.2404%" y="1205" width="0.9615%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="4"/><text x="0.4904%" y="1215.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.24%)</title><rect x="1.2019%" y="1413" width="0.2404%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="1"/><text x="1.4519%" y="1423.50"></text></g><g><title>[[heap]] (2 samples, 0.48%)</title><rect x="1.2019%" y="1429" width="0.4808%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="2"/><text x="1.4519%" y="1439.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (1 samples, 0.24%)</title><rect x="1.4423%" y="1413" width="0.2404%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="1"/><text x="1.6923%" y="1423.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (1 samples, 0.24%)</title><rect x="1.4423%" y="1397" width="0.2404%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="1.6923%" y="1407.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (1 samples, 0.24%)</title><rect x="1.4423%" y="1381" width="0.2404%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="1.6923%" y="1391.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.24%)</title><rect x="1.4423%" y="1365" width="0.2404%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="1.6923%" y="1375.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.24%)</title><rect x="1.4423%" y="1349" width="0.2404%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="1.6923%" y="1359.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.24%)</title><rect x="1.4423%" y="1333" width="0.2404%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="1"/><text x="1.6923%" y="1343.50"></text></g><g><title>[anon] (1 samples, 0.24%)</title><rect x="1.6827%" y="1429" width="0.2404%" height="15" fill="rgb(238,160,17)" fg:x="7" fg:w="1"/><text x="1.9327%" y="1439.50"></text></g><g><title>std::io::default_read_to_string (1 samples, 0.24%)</title><rect x="1.6827%" y="1413" width="0.2404%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="1"/><text x="1.9327%" y="1423.50"></text></g><g><title>[libc.so.6] (1 samples, 0.24%)</title><rect x="1.9231%" y="1397" width="0.2404%" height="15" fill="rgb(232,36,49)" fg:x="8" fg:w="1"/><text x="2.1731%" y="1407.50"></text></g><g><title>[libc.so.6] (1 samples, 0.24%)</title><rect x="1.9231%" y="1381" width="0.2404%" height="15" fill="rgb(209,103,24)" fg:x="8" fg:w="1"/><text x="2.1731%" y="1391.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.24%)</title><rect x="1.9231%" y="1365" width="0.2404%" height="15" fill="rgb(229,88,8)" fg:x="8" fg:w="1"/><text x="2.1731%" y="1375.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.24%)</title><rect x="2.1635%" y="1221" width="0.2404%" height="15" fill="rgb(213,181,19)" fg:x="9" fg:w="1"/><text x="2.4135%" y="1231.50"></text></g><g><title>down_read (5 samples, 1.20%)</title><rect x="2.1635%" y="1317" width="1.2019%" height="15" fill="rgb(254,191,54)" fg:x="9" fg:w="5"/><text x="2.4135%" y="1327.50"></text></g><g><title>rwsem_down_read_slowpath (5 samples, 1.20%)</title><rect x="2.1635%" y="1301" width="1.2019%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="5"/><text x="2.4135%" y="1311.50"></text></g><g><title>schedule_preempt_disabled (5 samples, 1.20%)</title><rect x="2.1635%" y="1285" width="1.2019%" height="15" fill="rgb(233,36,39)" fg:x="9" fg:w="5"/><text x="2.4135%" y="1295.50"></text></g><g><title>__schedule (5 samples, 1.20%)</title><rect x="2.1635%" y="1269" width="1.2019%" height="15" fill="rgb(226,3,54)" fg:x="9" fg:w="5"/><text x="2.4135%" y="1279.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 1.20%)</title><rect x="2.1635%" y="1253" width="1.2019%" height="15" fill="rgb(245,192,40)" fg:x="9" fg:w="5"/><text x="2.4135%" y="1263.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 1.20%)</title><rect x="2.1635%" y="1237" width="1.2019%" height="15" fill="rgb(238,167,29)" fg:x="9" fg:w="5"/><text x="2.4135%" y="1247.50"></text></g><g><title>ctx_sched_in (4 samples, 0.96%)</title><rect x="2.4038%" y="1221" width="0.9615%" height="15" fill="rgb(232,182,51)" fg:x="10" fg:w="4"/><text x="2.6538%" y="1231.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (4 samples, 0.96%)</title><rect x="2.4038%" y="1205" width="0.9615%" height="15" fill="rgb(231,60,39)" fg:x="10" fg:w="4"/><text x="2.6538%" y="1215.50"></text></g><g><title>merge_sched_in (4 samples, 0.96%)</title><rect x="2.4038%" y="1189" width="0.9615%" height="15" fill="rgb(208,69,12)" fg:x="10" fg:w="4"/><text x="2.6538%" y="1199.50"></text></g><g><title>__madvise (6 samples, 1.44%)</title><rect x="2.1635%" y="1397" width="1.4423%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="6"/><text x="2.4135%" y="1407.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 1.44%)</title><rect x="2.1635%" y="1381" width="1.4423%" height="15" fill="rgb(213,116,39)" fg:x="9" fg:w="6"/><text x="2.4135%" y="1391.50"></text></g><g><title>do_syscall_64 (6 samples, 1.44%)</title><rect x="2.1635%" y="1365" width="1.4423%" height="15" fill="rgb(222,207,29)" fg:x="9" fg:w="6"/><text x="2.4135%" y="1375.50"></text></g><g><title>__x64_sys_madvise (6 samples, 1.44%)</title><rect x="2.1635%" y="1349" width="1.4423%" height="15" fill="rgb(206,96,30)" fg:x="9" fg:w="6"/><text x="2.4135%" y="1359.50"></text></g><g><title>do_madvise (6 samples, 1.44%)</title><rect x="2.1635%" y="1333" width="1.4423%" height="15" fill="rgb(218,138,4)" fg:x="9" fg:w="6"/><text x="2.4135%" y="1343.50"></text></g><g><title>find_vma (1 samples, 0.24%)</title><rect x="3.3654%" y="1317" width="0.2404%" height="15" fill="rgb(250,191,14)" fg:x="14" fg:w="1"/><text x="3.6154%" y="1327.50"></text></g><g><title>mt_find (1 samples, 0.24%)</title><rect x="3.3654%" y="1301" width="0.2404%" height="15" fill="rgb(239,60,40)" fg:x="14" fg:w="1"/><text x="3.6154%" y="1311.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.24%)</title><rect x="3.3654%" y="1285" width="0.2404%" height="15" fill="rgb(206,27,48)" fg:x="14" fg:w="1"/><text x="3.6154%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::handle::Handle&gt; (1 samples, 0.24%)</title><rect x="3.6058%" y="1205" width="0.2404%" height="15" fill="rgb(225,35,8)" fg:x="15" fg:w="1"/><text x="3.8558%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::Handle&gt; (1 samples, 0.24%)</title><rect x="3.6058%" y="1189" width="0.2404%" height="15" fill="rgb(250,213,24)" fg:x="15" fg:w="1"/><text x="3.8558%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt; (1 samples, 0.24%)</title><rect x="3.6058%" y="1173" width="0.2404%" height="15" fill="rgb(247,123,22)" fg:x="15" fg:w="1"/><text x="3.8558%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.24%)</title><rect x="3.6058%" y="1157" width="0.2404%" height="15" fill="rgb(231,138,38)" fg:x="15" fg:w="1"/><text x="3.8558%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.24%)</title><rect x="3.6058%" y="1141" width="0.2404%" height="15" fill="rgb(231,145,46)" fg:x="15" fg:w="1"/><text x="3.8558%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt; (1 samples, 0.24%)</title><rect x="3.6058%" y="1125" width="0.2404%" height="15" fill="rgb(251,118,11)" fg:x="15" fg:w="1"/><text x="3.8558%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::driver::Handle&gt; (1 samples, 0.24%)</title><rect x="3.6058%" y="1109" width="0.2404%" height="15" fill="rgb(217,147,25)" fg:x="15" fg:w="1"/><text x="3.8558%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::driver::IoHandle&gt; (1 samples, 0.24%)</title><rect x="3.6058%" y="1093" width="0.2404%" height="15" fill="rgb(247,81,37)" fg:x="15" fg:w="1"/><text x="3.8558%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::Handle&gt; (1 samples, 0.24%)</title><rect x="3.6058%" y="1077" width="0.2404%" height="15" fill="rgb(209,12,38)" fg:x="15" fg:w="1"/><text x="3.8558%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;mio::poll::Registry&gt; (1 samples, 0.24%)</title><rect x="3.6058%" y="1061" width="0.2404%" height="15" fill="rgb(227,1,9)" fg:x="15" fg:w="1"/><text x="3.8558%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;mio::sys::unix::selector::epoll::Selector&gt; (1 samples, 0.24%)</title><rect x="3.6058%" y="1045" width="0.2404%" height="15" fill="rgb(248,47,43)" fg:x="15" fg:w="1"/><text x="3.8558%" y="1055.50"></text></g><g><title>&lt;mio::sys::unix::selector::epoll::Selector as core::ops::drop::Drop&gt;::drop (1 samples, 0.24%)</title><rect x="3.6058%" y="1029" width="0.2404%" height="15" fill="rgb(221,10,30)" fg:x="15" fg:w="1"/><text x="3.8558%" y="1039.50"></text></g><g><title>__close (1 samples, 0.24%)</title><rect x="3.6058%" y="1013" width="0.2404%" height="15" fill="rgb(210,229,1)" fg:x="15" fg:w="1"/><text x="3.8558%" y="1023.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.24%)</title><rect x="3.6058%" y="997" width="0.2404%" height="15" fill="rgb(222,148,37)" fg:x="15" fg:w="1"/><text x="3.8558%" y="1007.50"></text></g><g><title>do_syscall_64 (1 samples, 0.24%)</title><rect x="3.6058%" y="981" width="0.2404%" height="15" fill="rgb(234,67,33)" fg:x="15" fg:w="1"/><text x="3.8558%" y="991.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.24%)</title><rect x="3.6058%" y="965" width="0.2404%" height="15" fill="rgb(247,98,35)" fg:x="15" fg:w="1"/><text x="3.8558%" y="975.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.24%)</title><rect x="3.6058%" y="949" width="0.2404%" height="15" fill="rgb(247,138,52)" fg:x="15" fg:w="1"/><text x="3.8558%" y="959.50"></text></g><g><title>task_work_run (1 samples, 0.24%)</title><rect x="3.6058%" y="933" width="0.2404%" height="15" fill="rgb(213,79,30)" fg:x="15" fg:w="1"/><text x="3.8558%" y="943.50"></text></g><g><title>__fput (1 samples, 0.24%)</title><rect x="3.6058%" y="917" width="0.2404%" height="15" fill="rgb(246,177,23)" fg:x="15" fg:w="1"/><text x="3.8558%" y="927.50"></text></g><g><title>mntput (1 samples, 0.24%)</title><rect x="3.6058%" y="901" width="0.2404%" height="15" fill="rgb(230,62,27)" fg:x="15" fg:w="1"/><text x="3.8558%" y="911.50"></text></g><g><title>core::mem::drop (1 samples, 0.24%)</title><rect x="3.8462%" y="1189" width="0.2404%" height="15" fill="rgb(216,154,8)" fg:x="16" fg:w="1"/><text x="4.0962%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::blocking::pool::Shared&gt;&gt; (1 samples, 0.24%)</title><rect x="3.8462%" y="1173" width="0.2404%" height="15" fill="rgb(244,35,45)" fg:x="16" fg:w="1"/><text x="4.0962%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::blocking::pool::Shared&gt;&gt; (1 samples, 0.24%)</title><rect x="3.8462%" y="1157" width="0.2404%" height="15" fill="rgb(251,115,12)" fg:x="16" fg:w="1"/><text x="4.0962%" y="1167.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.24%)</title><rect x="3.8462%" y="1141" width="0.2404%" height="15" fill="rgb(240,54,50)" fg:x="16" fg:w="1"/><text x="4.0962%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.24%)</title><rect x="3.8462%" y="1125" width="0.2404%" height="15" fill="rgb(233,84,52)" fg:x="16" fg:w="1"/><text x="4.0962%" y="1135.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (1 samples, 0.24%)</title><rect x="3.8462%" y="1109" width="0.2404%" height="15" fill="rgb(207,117,47)" fg:x="16" fg:w="1"/><text x="4.0962%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (1 samples, 0.24%)</title><rect x="3.8462%" y="1093" width="0.2404%" height="15" fill="rgb(249,43,39)" fg:x="16" fg:w="1"/><text x="4.0962%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (1 samples, 0.24%)</title><rect x="3.8462%" y="1077" width="0.2404%" height="15" fill="rgb(209,38,44)" fg:x="16" fg:w="1"/><text x="4.0962%" y="1087.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.24%)</title><rect x="3.8462%" y="1061" width="0.2404%" height="15" fill="rgb(236,212,23)" fg:x="16" fg:w="1"/><text x="4.0962%" y="1071.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.24%)</title><rect x="3.8462%" y="1045" width="0.2404%" height="15" fill="rgb(242,79,21)" fg:x="16" fg:w="1"/><text x="4.0962%" y="1055.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.24%)</title><rect x="3.8462%" y="1029" width="0.2404%" height="15" fill="rgb(211,96,35)" fg:x="16" fg:w="1"/><text x="4.0962%" y="1039.50"></text></g><g><title>clock_gettime (1 samples, 0.24%)</title><rect x="3.8462%" y="1013" width="0.2404%" height="15" fill="rgb(253,215,40)" fg:x="16" fg:w="1"/><text x="4.0962%" y="1023.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.24%)</title><rect x="3.8462%" y="997" width="0.2404%" height="15" fill="rgb(211,81,21)" fg:x="16" fg:w="1"/><text x="4.0962%" y="1007.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.24%)</title><rect x="3.8462%" y="981" width="0.2404%" height="15" fill="rgb(208,190,38)" fg:x="16" fg:w="1"/><text x="4.0962%" y="991.50"></text></g><g><title>do_syscall_64 (1 samples, 0.24%)</title><rect x="3.8462%" y="965" width="0.2404%" height="15" fill="rgb(235,213,38)" fg:x="16" fg:w="1"/><text x="4.0962%" y="975.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.24%)</title><rect x="3.8462%" y="949" width="0.2404%" height="15" fill="rgb(237,122,38)" fg:x="16" fg:w="1"/><text x="4.0962%" y="959.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.24%)</title><rect x="3.8462%" y="933" width="0.2404%" height="15" fill="rgb(244,218,35)" fg:x="16" fg:w="1"/><text x="4.0962%" y="943.50"></text></g><g><title>merge_sched_in (3 samples, 0.72%)</title><rect x="4.3269%" y="853" width="0.7212%" height="15" fill="rgb(240,68,47)" fg:x="18" fg:w="3"/><text x="4.5769%" y="863.50"></text></g><g><title>event_sched_in (3 samples, 0.72%)</title><rect x="4.3269%" y="837" width="0.7212%" height="15" fill="rgb(210,16,53)" fg:x="18" fg:w="3"/><text x="4.5769%" y="847.50"></text></g><g><title>perf_ibs_add (2 samples, 0.48%)</title><rect x="4.5673%" y="821" width="0.4808%" height="15" fill="rgb(235,124,12)" fg:x="19" fg:w="2"/><text x="4.8173%" y="831.50"></text></g><g><title>perf_ibs_start (2 samples, 0.48%)</title><rect x="4.5673%" y="805" width="0.4808%" height="15" fill="rgb(224,169,11)" fg:x="19" fg:w="2"/><text x="4.8173%" y="815.50"></text></g><g><title>native_write_msr (2 samples, 0.48%)</title><rect x="4.5673%" y="789" width="0.4808%" height="15" fill="rgb(250,166,2)" fg:x="19" fg:w="2"/><text x="4.8173%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 1.20%)</title><rect x="4.0865%" y="1141" width="1.2019%" height="15" fill="rgb(242,216,29)" fg:x="17" fg:w="5"/><text x="4.3365%" y="1151.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (5 samples, 1.20%)</title><rect x="4.0865%" y="1125" width="1.2019%" height="15" fill="rgb(230,116,27)" fg:x="17" fg:w="5"/><text x="4.3365%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::park (4 samples, 0.96%)</title><rect x="4.3269%" y="1109" width="0.9615%" height="15" fill="rgb(228,99,48)" fg:x="18" fg:w="4"/><text x="4.5769%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (4 samples, 0.96%)</title><rect x="4.3269%" y="1093" width="0.9615%" height="15" fill="rgb(253,11,6)" fg:x="18" fg:w="4"/><text x="4.5769%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (4 samples, 0.96%)</title><rect x="4.3269%" y="1077" width="0.9615%" height="15" fill="rgb(247,143,39)" fg:x="18" fg:w="4"/><text x="4.5769%" y="1087.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (4 samples, 0.96%)</title><rect x="4.3269%" y="1061" width="0.9615%" height="15" fill="rgb(236,97,10)" fg:x="18" fg:w="4"/><text x="4.5769%" y="1071.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (4 samples, 0.96%)</title><rect x="4.3269%" y="1045" width="0.9615%" height="15" fill="rgb(233,208,19)" fg:x="18" fg:w="4"/><text x="4.5769%" y="1055.50"></text></g><g><title>syscall (4 samples, 0.96%)</title><rect x="4.3269%" y="1029" width="0.9615%" height="15" fill="rgb(216,164,2)" fg:x="18" fg:w="4"/><text x="4.5769%" y="1039.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.96%)</title><rect x="4.3269%" y="1013" width="0.9615%" height="15" fill="rgb(220,129,5)" fg:x="18" fg:w="4"/><text x="4.5769%" y="1023.50"></text></g><g><title>do_syscall_64 (4 samples, 0.96%)</title><rect x="4.3269%" y="997" width="0.9615%" height="15" fill="rgb(242,17,10)" fg:x="18" fg:w="4"/><text x="4.5769%" y="1007.50"></text></g><g><title>__x64_sys_futex (4 samples, 0.96%)</title><rect x="4.3269%" y="981" width="0.9615%" height="15" fill="rgb(242,107,0)" fg:x="18" fg:w="4"/><text x="4.5769%" y="991.50"></text></g><g><title>futex_wait (4 samples, 0.96%)</title><rect x="4.3269%" y="965" width="0.9615%" height="15" fill="rgb(251,28,31)" fg:x="18" fg:w="4"/><text x="4.5769%" y="975.50"></text></g><g><title>schedule (4 samples, 0.96%)</title><rect x="4.3269%" y="949" width="0.9615%" height="15" fill="rgb(233,223,10)" fg:x="18" fg:w="4"/><text x="4.5769%" y="959.50"></text></g><g><title>__schedule (4 samples, 0.96%)</title><rect x="4.3269%" y="933" width="0.9615%" height="15" fill="rgb(215,21,27)" fg:x="18" fg:w="4"/><text x="4.5769%" y="943.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.96%)</title><rect x="4.3269%" y="917" width="0.9615%" height="15" fill="rgb(232,23,21)" fg:x="18" fg:w="4"/><text x="4.5769%" y="927.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.96%)</title><rect x="4.3269%" y="901" width="0.9615%" height="15" fill="rgb(244,5,23)" fg:x="18" fg:w="4"/><text x="4.5769%" y="911.50"></text></g><g><title>ctx_sched_in (4 samples, 0.96%)</title><rect x="4.3269%" y="885" width="0.9615%" height="15" fill="rgb(226,81,46)" fg:x="18" fg:w="4"/><text x="4.5769%" y="895.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (4 samples, 0.96%)</title><rect x="4.3269%" y="869" width="0.9615%" height="15" fill="rgb(247,70,30)" fg:x="18" fg:w="4"/><text x="4.5769%" y="879.50"></text></g><g><title>rb_next (1 samples, 0.24%)</title><rect x="5.0481%" y="853" width="0.2404%" height="15" fill="rgb(212,68,19)" fg:x="21" fg:w="1"/><text x="5.2981%" y="863.50"></text></g><g><title>hrtimer_cancel (2 samples, 0.48%)</title><rect x="5.2885%" y="981" width="0.4808%" height="15" fill="rgb(240,187,13)" fg:x="22" fg:w="2"/><text x="5.5385%" y="991.50"></text></g><g><title>hrtimer_try_to_cancel (2 samples, 0.48%)</title><rect x="5.2885%" y="965" width="0.4808%" height="15" fill="rgb(223,113,26)" fg:x="22" fg:w="2"/><text x="5.5385%" y="975.50"></text></g><g><title>timerqueue_del (1 samples, 0.24%)</title><rect x="5.5288%" y="949" width="0.2404%" height="15" fill="rgb(206,192,2)" fg:x="23" fg:w="1"/><text x="5.7788%" y="959.50"></text></g><g><title>rb_erase (1 samples, 0.24%)</title><rect x="5.5288%" y="933" width="0.2404%" height="15" fill="rgb(241,108,4)" fg:x="23" fg:w="1"/><text x="5.7788%" y="943.50"></text></g><g><title>merge_sched_in (4 samples, 0.96%)</title><rect x="7.9327%" y="885" width="0.9615%" height="15" fill="rgb(247,173,49)" fg:x="33" fg:w="4"/><text x="8.1827%" y="895.50"></text></g><g><title>__list_add_valid (4 samples, 0.96%)</title><rect x="7.9327%" y="869" width="0.9615%" height="15" fill="rgb(224,114,35)" fg:x="33" fg:w="4"/><text x="8.1827%" y="879.50"></text></g><g><title>__perf_event_task_sched_in (7 samples, 1.68%)</title><rect x="7.6923%" y="933" width="1.6827%" height="15" fill="rgb(245,159,27)" fg:x="32" fg:w="7"/><text x="7.9423%" y="943.50"></text></g><g><title>ctx_sched_in (7 samples, 1.68%)</title><rect x="7.6923%" y="917" width="1.6827%" height="15" fill="rgb(245,172,44)" fg:x="32" fg:w="7"/><text x="7.9423%" y="927.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (6 samples, 1.44%)</title><rect x="7.9327%" y="901" width="1.4423%" height="15" fill="rgb(236,23,11)" fg:x="33" fg:w="6"/><text x="8.1827%" y="911.50"></text></g><g><title>rb_next (2 samples, 0.48%)</title><rect x="8.8942%" y="885" width="0.4808%" height="15" fill="rgb(205,117,38)" fg:x="37" fg:w="2"/><text x="9.1442%" y="895.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait_timeout (23 samples, 5.53%)</title><rect x="4.0865%" y="1189" width="5.5288%" height="15" fill="rgb(237,72,25)" fg:x="17" fg:w="23"/><text x="4.3365%" y="1199.50">tokio::..</text></g><g><title>parking_lot::condvar::Condvar::wait_for (23 samples, 5.53%)</title><rect x="4.0865%" y="1173" width="5.5288%" height="15" fill="rgb(244,70,9)" fg:x="17" fg:w="23"/><text x="4.3365%" y="1183.50">parking..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (23 samples, 5.53%)</title><rect x="4.0865%" y="1157" width="5.5288%" height="15" fill="rgb(217,125,39)" fg:x="17" fg:w="23"/><text x="4.3365%" y="1167.50">parking..</text></g><g><title>parking_lot_core::parking_lot::park (18 samples, 4.33%)</title><rect x="5.2885%" y="1141" width="4.3269%" height="15" fill="rgb(235,36,10)" fg:x="22" fg:w="18"/><text x="5.5385%" y="1151.50">parki..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (18 samples, 4.33%)</title><rect x="5.2885%" y="1125" width="4.3269%" height="15" fill="rgb(251,123,47)" fg:x="22" fg:w="18"/><text x="5.5385%" y="1135.50">parki..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (18 samples, 4.33%)</title><rect x="5.2885%" y="1109" width="4.3269%" height="15" fill="rgb(221,13,13)" fg:x="22" fg:w="18"/><text x="5.5385%" y="1119.50">parki..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (18 samples, 4.33%)</title><rect x="5.2885%" y="1093" width="4.3269%" height="15" fill="rgb(238,131,9)" fg:x="22" fg:w="18"/><text x="5.5385%" y="1103.50">&lt;park..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (18 samples, 4.33%)</title><rect x="5.2885%" y="1077" width="4.3269%" height="15" fill="rgb(211,50,8)" fg:x="22" fg:w="18"/><text x="5.5385%" y="1087.50">parki..</text></g><g><title>syscall (18 samples, 4.33%)</title><rect x="5.2885%" y="1061" width="4.3269%" height="15" fill="rgb(245,182,24)" fg:x="22" fg:w="18"/><text x="5.5385%" y="1071.50">sysca..</text></g><g><title>entry_SYSCALL_64 (18 samples, 4.33%)</title><rect x="5.2885%" y="1045" width="4.3269%" height="15" fill="rgb(242,14,37)" fg:x="22" fg:w="18"/><text x="5.5385%" y="1055.50">entry..</text></g><g><title>do_syscall_64 (18 samples, 4.33%)</title><rect x="5.2885%" y="1029" width="4.3269%" height="15" fill="rgb(246,228,12)" fg:x="22" fg:w="18"/><text x="5.5385%" y="1039.50">do_sy..</text></g><g><title>__x64_sys_futex (18 samples, 4.33%)</title><rect x="5.2885%" y="1013" width="4.3269%" height="15" fill="rgb(213,55,15)" fg:x="22" fg:w="18"/><text x="5.5385%" y="1023.50">__x64..</text></g><g><title>futex_wait (18 samples, 4.33%)</title><rect x="5.2885%" y="997" width="4.3269%" height="15" fill="rgb(209,9,3)" fg:x="22" fg:w="18"/><text x="5.5385%" y="1007.50">futex..</text></g><g><title>schedule (16 samples, 3.85%)</title><rect x="5.7692%" y="981" width="3.8462%" height="15" fill="rgb(230,59,30)" fg:x="24" fg:w="16"/><text x="6.0192%" y="991.50">sche..</text></g><g><title>__schedule (16 samples, 3.85%)</title><rect x="5.7692%" y="965" width="3.8462%" height="15" fill="rgb(209,121,21)" fg:x="24" fg:w="16"/><text x="6.0192%" y="975.50">__sc..</text></g><g><title>finish_task_switch.isra.0 (12 samples, 2.88%)</title><rect x="6.7308%" y="949" width="2.8846%" height="15" fill="rgb(220,109,13)" fg:x="28" fg:w="12"/><text x="6.9808%" y="959.50">fi..</text></g><g><title>asm_sysvec_irq_work (1 samples, 0.24%)</title><rect x="9.3750%" y="933" width="0.2404%" height="15" fill="rgb(232,18,1)" fg:x="39" fg:w="1"/><text x="9.6250%" y="943.50"></text></g><g><title>__perf_event_task_sched_in (8 samples, 1.92%)</title><rect x="10.5769%" y="917" width="1.9231%" height="15" fill="rgb(215,41,42)" fg:x="44" fg:w="8"/><text x="10.8269%" y="927.50">_..</text></g><g><title>ctx_sched_in (8 samples, 1.92%)</title><rect x="10.5769%" y="901" width="1.9231%" height="15" fill="rgb(224,123,36)" fg:x="44" fg:w="8"/><text x="10.8269%" y="911.50">c..</text></g><g><title>visit_groups_merge.constprop.0.isra.0 (7 samples, 1.68%)</title><rect x="10.8173%" y="885" width="1.6827%" height="15" fill="rgb(240,125,3)" fg:x="45" fg:w="7"/><text x="11.0673%" y="895.50"></text></g><g><title>merge_sched_in (4 samples, 0.96%)</title><rect x="11.5385%" y="869" width="0.9615%" height="15" fill="rgb(205,98,50)" fg:x="48" fg:w="4"/><text x="11.7885%" y="879.50"></text></g><g><title>__x64_sys_futex (14 samples, 3.37%)</title><rect x="9.6154%" y="997" width="3.3654%" height="15" fill="rgb(205,185,37)" fg:x="40" fg:w="14"/><text x="9.8654%" y="1007.50">__x..</text></g><g><title>futex_wait (14 samples, 3.37%)</title><rect x="9.6154%" y="981" width="3.3654%" height="15" fill="rgb(238,207,15)" fg:x="40" fg:w="14"/><text x="9.8654%" y="991.50">fut..</text></g><g><title>schedule (12 samples, 2.88%)</title><rect x="10.0962%" y="965" width="2.8846%" height="15" fill="rgb(213,199,42)" fg:x="42" fg:w="12"/><text x="10.3462%" y="975.50">sc..</text></g><g><title>__schedule (12 samples, 2.88%)</title><rect x="10.0962%" y="949" width="2.8846%" height="15" fill="rgb(235,201,11)" fg:x="42" fg:w="12"/><text x="10.3462%" y="959.50">__..</text></g><g><title>finish_task_switch.isra.0 (12 samples, 2.88%)</title><rect x="10.0962%" y="933" width="2.8846%" height="15" fill="rgb(207,46,11)" fg:x="42" fg:w="12"/><text x="10.3462%" y="943.50">fi..</text></g><g><title>_raw_spin_unlock (2 samples, 0.48%)</title><rect x="12.5000%" y="917" width="0.4808%" height="15" fill="rgb(241,35,35)" fg:x="52" fg:w="2"/><text x="12.7500%" y="927.50"></text></g><g><title>__rseq_handle_notify_resume (1 samples, 0.24%)</title><rect x="13.2212%" y="965" width="0.2404%" height="15" fill="rgb(243,32,47)" fg:x="55" fg:w="1"/><text x="13.4712%" y="975.50"></text></g><g><title>__put_user_8 (1 samples, 0.24%)</title><rect x="13.2212%" y="949" width="0.2404%" height="15" fill="rgb(247,202,23)" fg:x="55" fg:w="1"/><text x="13.4712%" y="959.50"></text></g><g><title>mem_cgroup_handle_over_high (1 samples, 0.24%)</title><rect x="13.4615%" y="965" width="0.2404%" height="15" fill="rgb(219,102,11)" fg:x="56" fg:w="1"/><text x="13.7115%" y="975.50"></text></g><g><title>entry_SYSCALL_64 (18 samples, 4.33%)</title><rect x="9.6154%" y="1029" width="4.3269%" height="15" fill="rgb(243,110,44)" fg:x="40" fg:w="18"/><text x="9.8654%" y="1039.50">entry..</text></g><g><title>do_syscall_64 (18 samples, 4.33%)</title><rect x="9.6154%" y="1013" width="4.3269%" height="15" fill="rgb(222,74,54)" fg:x="40" fg:w="18"/><text x="9.8654%" y="1023.50">do_sy..</text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.96%)</title><rect x="12.9808%" y="997" width="0.9615%" height="15" fill="rgb(216,99,12)" fg:x="54" fg:w="4"/><text x="13.2308%" y="1007.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.96%)</title><rect x="12.9808%" y="981" width="0.9615%" height="15" fill="rgb(226,22,26)" fg:x="54" fg:w="4"/><text x="13.2308%" y="991.50"></text></g><g><title>switch_fpu_return (1 samples, 0.24%)</title><rect x="13.7019%" y="965" width="0.2404%" height="15" fill="rgb(217,163,10)" fg:x="57" fg:w="1"/><text x="13.9519%" y="975.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.24%)</title><rect x="13.7019%" y="949" width="0.2404%" height="15" fill="rgb(213,25,53)" fg:x="57" fg:w="1"/><text x="13.9519%" y="959.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (19 samples, 4.57%)</title><rect x="9.6154%" y="1189" width="4.5673%" height="15" fill="rgb(252,105,26)" fg:x="40" fg:w="19"/><text x="9.8654%" y="1199.50">tokio..</text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (19 samples, 4.57%)</title><rect x="9.6154%" y="1173" width="4.5673%" height="15" fill="rgb(220,39,43)" fg:x="40" fg:w="19"/><text x="9.8654%" y="1183.50">lock_..</text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (19 samples, 4.57%)</title><rect x="9.6154%" y="1157" width="4.5673%" height="15" fill="rgb(229,68,48)" fg:x="40" fg:w="19"/><text x="9.8654%" y="1167.50">&lt;park..</text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (19 samples, 4.57%)</title><rect x="9.6154%" y="1141" width="4.5673%" height="15" fill="rgb(252,8,32)" fg:x="40" fg:w="19"/><text x="9.8654%" y="1151.50">parki..</text></g><g><title>parking_lot_core::parking_lot::park (19 samples, 4.57%)</title><rect x="9.6154%" y="1125" width="4.5673%" height="15" fill="rgb(223,20,43)" fg:x="40" fg:w="19"/><text x="9.8654%" y="1135.50">parki..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (19 samples, 4.57%)</title><rect x="9.6154%" y="1109" width="4.5673%" height="15" fill="rgb(229,81,49)" fg:x="40" fg:w="19"/><text x="9.8654%" y="1119.50">parki..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (19 samples, 4.57%)</title><rect x="9.6154%" y="1093" width="4.5673%" height="15" fill="rgb(236,28,36)" fg:x="40" fg:w="19"/><text x="9.8654%" y="1103.50">parki..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (19 samples, 4.57%)</title><rect x="9.6154%" y="1077" width="4.5673%" height="15" fill="rgb(249,185,26)" fg:x="40" fg:w="19"/><text x="9.8654%" y="1087.50">&lt;park..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (19 samples, 4.57%)</title><rect x="9.6154%" y="1061" width="4.5673%" height="15" fill="rgb(249,174,33)" fg:x="40" fg:w="19"/><text x="9.8654%" y="1071.50">parki..</text></g><g><title>syscall (19 samples, 4.57%)</title><rect x="9.6154%" y="1045" width="4.5673%" height="15" fill="rgb(233,201,37)" fg:x="40" fg:w="19"/><text x="9.8654%" y="1055.50">sysca..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.24%)</title><rect x="13.9423%" y="1029" width="0.2404%" height="15" fill="rgb(221,78,26)" fg:x="58" fg:w="1"/><text x="14.1923%" y="1039.50"></text></g><g><title>futex_unqueue (1 samples, 0.24%)</title><rect x="14.1827%" y="581" width="0.2404%" height="15" fill="rgb(250,127,30)" fg:x="59" fg:w="1"/><text x="14.4327%" y="591.50"></text></g><g><title>perf_event_update_userpage (4 samples, 0.96%)</title><rect x="16.3462%" y="437" width="0.9615%" height="15" fill="rgb(230,49,44)" fg:x="68" fg:w="4"/><text x="16.5962%" y="447.50"></text></g><g><title>perf_ibs_start (6 samples, 1.44%)</title><rect x="17.3077%" y="437" width="1.4423%" height="15" fill="rgb(229,67,23)" fg:x="72" fg:w="6"/><text x="17.5577%" y="447.50"></text></g><g><title>native_write_msr (6 samples, 1.44%)</title><rect x="17.3077%" y="421" width="1.4423%" height="15" fill="rgb(249,83,47)" fg:x="72" fg:w="6"/><text x="17.5577%" y="431.50"></text></g><g><title>merge_sched_in (15 samples, 3.61%)</title><rect x="15.6250%" y="485" width="3.6058%" height="15" fill="rgb(215,43,3)" fg:x="65" fg:w="15"/><text x="15.8750%" y="495.50">merg..</text></g><g><title>event_sched_in (13 samples, 3.12%)</title><rect x="16.1058%" y="469" width="3.1250%" height="15" fill="rgb(238,154,13)" fg:x="67" fg:w="13"/><text x="16.3558%" y="479.50">eve..</text></g><g><title>perf_ibs_add (12 samples, 2.88%)</title><rect x="16.3462%" y="453" width="2.8846%" height="15" fill="rgb(219,56,2)" fg:x="68" fg:w="12"/><text x="16.5962%" y="463.50">pe..</text></g><g><title>zen_untrain_ret (2 samples, 0.48%)</title><rect x="18.7500%" y="437" width="0.4808%" height="15" fill="rgb(233,0,4)" fg:x="78" fg:w="2"/><text x="19.0000%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (20 samples, 4.81%)</title><rect x="14.6635%" y="533" width="4.8077%" height="15" fill="rgb(235,30,7)" fg:x="61" fg:w="20"/><text x="14.9135%" y="543.50">__perf..</text></g><g><title>ctx_sched_in (20 samples, 4.81%)</title><rect x="14.6635%" y="517" width="4.8077%" height="15" fill="rgb(250,79,13)" fg:x="61" fg:w="20"/><text x="14.9135%" y="527.50">ctx_sc..</text></g><g><title>visit_groups_merge.constprop.0.isra.0 (20 samples, 4.81%)</title><rect x="14.6635%" y="501" width="4.8077%" height="15" fill="rgb(211,146,34)" fg:x="61" fg:w="20"/><text x="14.9135%" y="511.50">visit_..</text></g><g><title>zen_untrain_ret (1 samples, 0.24%)</title><rect x="19.2308%" y="485" width="0.2404%" height="15" fill="rgb(228,22,38)" fg:x="80" fg:w="1"/><text x="19.4808%" y="495.50"></text></g><g><title>__x64_sys_futex (23 samples, 5.53%)</title><rect x="14.1827%" y="613" width="5.5288%" height="15" fill="rgb(235,168,5)" fg:x="59" fg:w="23"/><text x="14.4327%" y="623.50">__x64_s..</text></g><g><title>futex_wait (23 samples, 5.53%)</title><rect x="14.1827%" y="597" width="5.5288%" height="15" fill="rgb(221,155,16)" fg:x="59" fg:w="23"/><text x="14.4327%" y="607.50">futex_w..</text></g><g><title>schedule (22 samples, 5.29%)</title><rect x="14.4231%" y="581" width="5.2885%" height="15" fill="rgb(215,215,53)" fg:x="60" fg:w="22"/><text x="14.6731%" y="591.50">schedu..</text></g><g><title>__schedule (22 samples, 5.29%)</title><rect x="14.4231%" y="565" width="5.2885%" height="15" fill="rgb(223,4,10)" fg:x="60" fg:w="22"/><text x="14.6731%" y="575.50">__sche..</text></g><g><title>finish_task_switch.isra.0 (22 samples, 5.29%)</title><rect x="14.4231%" y="549" width="5.2885%" height="15" fill="rgb(234,103,6)" fg:x="60" fg:w="22"/><text x="14.6731%" y="559.50">finish..</text></g><g><title>asm_sysvec_irq_work (1 samples, 0.24%)</title><rect x="19.4712%" y="533" width="0.2404%" height="15" fill="rgb(227,97,0)" fg:x="81" fg:w="1"/><text x="19.7212%" y="543.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.24%)</title><rect x="19.4712%" y="517" width="0.2404%" height="15" fill="rgb(234,150,53)" fg:x="81" fg:w="1"/><text x="19.7212%" y="527.50"></text></g><g><title>irq_enter_rcu (1 samples, 0.24%)</title><rect x="19.4712%" y="501" width="0.2404%" height="15" fill="rgb(228,201,54)" fg:x="81" fg:w="1"/><text x="19.7212%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (27 samples, 6.49%)</title><rect x="14.1827%" y="837" width="6.4904%" height="15" fill="rgb(222,22,37)" fg:x="59" fg:w="27"/><text x="14.4327%" y="847.50">tokio::ru..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (27 samples, 6.49%)</title><rect x="14.1827%" y="821" width="6.4904%" height="15" fill="rgb(237,53,32)" fg:x="59" fg:w="27"/><text x="14.4327%" y="831.50">tokio::ru..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (27 samples, 6.49%)</title><rect x="14.1827%" y="805" width="6.4904%" height="15" fill="rgb(233,25,53)" fg:x="59" fg:w="27"/><text x="14.4327%" y="815.50">tokio::ru..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (27 samples, 6.49%)</title><rect x="14.1827%" y="789" width="6.4904%" height="15" fill="rgb(210,40,34)" fg:x="59" fg:w="27"/><text x="14.4327%" y="799.50">tokio::lo..</text></g><g><title>parking_lot::condvar::Condvar::wait (27 samples, 6.49%)</title><rect x="14.1827%" y="773" width="6.4904%" height="15" fill="rgb(241,220,44)" fg:x="59" fg:w="27"/><text x="14.4327%" y="783.50">parking_l..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (27 samples, 6.49%)</title><rect x="14.1827%" y="757" width="6.4904%" height="15" fill="rgb(235,28,35)" fg:x="59" fg:w="27"/><text x="14.4327%" y="767.50">parking_l..</text></g><g><title>parking_lot_core::parking_lot::park (27 samples, 6.49%)</title><rect x="14.1827%" y="741" width="6.4904%" height="15" fill="rgb(210,56,17)" fg:x="59" fg:w="27"/><text x="14.4327%" y="751.50">parking_l..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (27 samples, 6.49%)</title><rect x="14.1827%" y="725" width="6.4904%" height="15" fill="rgb(224,130,29)" fg:x="59" fg:w="27"/><text x="14.4327%" y="735.50">parking_l..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (27 samples, 6.49%)</title><rect x="14.1827%" y="709" width="6.4904%" height="15" fill="rgb(235,212,8)" fg:x="59" fg:w="27"/><text x="14.4327%" y="719.50">parking_l..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (27 samples, 6.49%)</title><rect x="14.1827%" y="693" width="6.4904%" height="15" fill="rgb(223,33,50)" fg:x="59" fg:w="27"/><text x="14.4327%" y="703.50">&lt;parking_..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (27 samples, 6.49%)</title><rect x="14.1827%" y="677" width="6.4904%" height="15" fill="rgb(219,149,13)" fg:x="59" fg:w="27"/><text x="14.4327%" y="687.50">parking_l..</text></g><g><title>syscall (27 samples, 6.49%)</title><rect x="14.1827%" y="661" width="6.4904%" height="15" fill="rgb(250,156,29)" fg:x="59" fg:w="27"/><text x="14.4327%" y="671.50">syscall</text></g><g><title>entry_SYSCALL_64 (27 samples, 6.49%)</title><rect x="14.1827%" y="645" width="6.4904%" height="15" fill="rgb(216,193,19)" fg:x="59" fg:w="27"/><text x="14.4327%" y="655.50">entry_SYS..</text></g><g><title>do_syscall_64 (27 samples, 6.49%)</title><rect x="14.1827%" y="629" width="6.4904%" height="15" fill="rgb(216,135,14)" fg:x="59" fg:w="27"/><text x="14.4327%" y="639.50">do_syscal..</text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.96%)</title><rect x="19.7115%" y="613" width="0.9615%" height="15" fill="rgb(241,47,5)" fg:x="82" fg:w="4"/><text x="19.9615%" y="623.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.96%)</title><rect x="19.7115%" y="597" width="0.9615%" height="15" fill="rgb(233,42,35)" fg:x="82" fg:w="4"/><text x="19.9615%" y="607.50"></text></g><g><title>switch_fpu_return (3 samples, 0.72%)</title><rect x="19.9519%" y="581" width="0.7212%" height="15" fill="rgb(231,13,6)" fg:x="83" fg:w="3"/><text x="20.2019%" y="591.50"></text></g><g><title>restore_fpregs_from_fpstate (3 samples, 0.72%)</title><rect x="19.9519%" y="565" width="0.7212%" height="15" fill="rgb(207,181,40)" fg:x="83" fg:w="3"/><text x="20.2019%" y="575.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (28 samples, 6.73%)</title><rect x="14.1827%" y="869" width="6.7308%" height="15" fill="rgb(254,173,49)" fg:x="59" fg:w="28"/><text x="14.4327%" y="879.50">tokio::ru..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (28 samples, 6.73%)</title><rect x="14.1827%" y="853" width="6.7308%" height="15" fill="rgb(221,1,38)" fg:x="59" fg:w="28"/><text x="14.4327%" y="863.50">tokio::ru..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::wake_deferred_tasks (1 samples, 0.24%)</title><rect x="20.6731%" y="837" width="0.2404%" height="15" fill="rgb(206,124,46)" fg:x="86" fg:w="1"/><text x="20.9231%" y="847.50"></text></g><g><title>tokio::runtime::context::with_defer (1 samples, 0.24%)</title><rect x="20.6731%" y="821" width="0.2404%" height="15" fill="rgb(249,21,11)" fg:x="86" fg:w="1"/><text x="20.9231%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.24%)</title><rect x="20.6731%" y="805" width="0.2404%" height="15" fill="rgb(222,201,40)" fg:x="86" fg:w="1"/><text x="20.9231%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.24%)</title><rect x="20.6731%" y="789" width="0.2404%" height="15" fill="rgb(235,61,29)" fg:x="86" fg:w="1"/><text x="20.9231%" y="799.50"></text></g><g><title>syscall (1 samples, 0.24%)</title><rect x="20.6731%" y="773" width="0.2404%" height="15" fill="rgb(219,207,3)" fg:x="86" fg:w="1"/><text x="20.9231%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1 samples, 0.24%)</title><rect x="20.9135%" y="757" width="0.2404%" height="15" fill="rgb(222,56,46)" fg:x="87" fg:w="1"/><text x="21.1635%" y="767.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.24%)</title><rect x="20.9135%" y="741" width="0.2404%" height="15" fill="rgb(239,76,54)" fg:x="87" fg:w="1"/><text x="21.1635%" y="751.50"></text></g><g><title>std::panicking::try (1 samples, 0.24%)</title><rect x="20.9135%" y="725" width="0.2404%" height="15" fill="rgb(231,124,27)" fg:x="87" fg:w="1"/><text x="21.1635%" y="735.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.24%)</title><rect x="20.9135%" y="709" width="0.2404%" height="15" fill="rgb(249,195,6)" fg:x="87" fg:w="1"/><text x="21.1635%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.24%)</title><rect x="20.9135%" y="693" width="0.2404%" height="15" fill="rgb(237,174,47)" fg:x="87" fg:w="1"/><text x="21.1635%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.24%)</title><rect x="20.9135%" y="677" width="0.2404%" height="15" fill="rgb(206,201,31)" fg:x="87" fg:w="1"/><text x="21.1635%" y="687.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete::{{closure}} (1 samples, 0.24%)</title><rect x="20.9135%" y="661" width="0.2404%" height="15" fill="rgb(231,57,52)" fg:x="87" fg:w="1"/><text x="21.1635%" y="671.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join (1 samples, 0.24%)</title><rect x="20.9135%" y="645" width="0.2404%" height="15" fill="rgb(248,177,22)" fg:x="87" fg:w="1"/><text x="21.1635%" y="655.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (1 samples, 0.24%)</title><rect x="20.9135%" y="629" width="0.2404%" height="15" fill="rgb(215,211,37)" fg:x="87" fg:w="1"/><text x="21.1635%" y="639.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join::{{closure}} (1 samples, 0.24%)</title><rect x="20.9135%" y="613" width="0.2404%" height="15" fill="rgb(241,128,51)" fg:x="87" fg:w="1"/><text x="21.1635%" y="623.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (1 samples, 0.24%)</title><rect x="20.9135%" y="597" width="0.2404%" height="15" fill="rgb(227,165,31)" fg:x="87" fg:w="1"/><text x="21.1635%" y="607.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (1 samples, 0.24%)</title><rect x="20.9135%" y="581" width="0.2404%" height="15" fill="rgb(228,167,24)" fg:x="87" fg:w="1"/><text x="21.1635%" y="591.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (1 samples, 0.24%)</title><rect x="20.9135%" y="565" width="0.2404%" height="15" fill="rgb(228,143,12)" fg:x="87" fg:w="1"/><text x="21.1635%" y="575.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (1 samples, 0.24%)</title><rect x="20.9135%" y="549" width="0.2404%" height="15" fill="rgb(249,149,8)" fg:x="87" fg:w="1"/><text x="21.1635%" y="559.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.24%)</title><rect x="20.9135%" y="533" width="0.2404%" height="15" fill="rgb(243,35,44)" fg:x="87" fg:w="1"/><text x="21.1635%" y="543.50"></text></g><g><title>tokio::runtime::park::wake (1 samples, 0.24%)</title><rect x="20.9135%" y="517" width="0.2404%" height="15" fill="rgb(246,89,9)" fg:x="87" fg:w="1"/><text x="21.1635%" y="527.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (1 samples, 0.24%)</title><rect x="20.9135%" y="501" width="0.2404%" height="15" fill="rgb(233,213,13)" fg:x="87" fg:w="1"/><text x="21.1635%" y="511.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (1 samples, 0.24%)</title><rect x="20.9135%" y="485" width="0.2404%" height="15" fill="rgb(233,141,41)" fg:x="87" fg:w="1"/><text x="21.1635%" y="495.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (1 samples, 0.24%)</title><rect x="20.9135%" y="469" width="0.2404%" height="15" fill="rgb(239,167,4)" fg:x="87" fg:w="1"/><text x="21.1635%" y="479.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.24%)</title><rect x="20.9135%" y="453" width="0.2404%" height="15" fill="rgb(209,217,16)" fg:x="87" fg:w="1"/><text x="21.1635%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;&gt; (1 samples, 0.24%)</title><rect x="21.1538%" y="533" width="0.2404%" height="15" fill="rgb(219,88,35)" fg:x="88" fg:w="1"/><text x="21.4038%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (1 samples, 0.24%)</title><rect x="21.1538%" y="517" width="0.2404%" height="15" fill="rgb(220,193,23)" fg:x="88" fg:w="1"/><text x="21.4038%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (1 samples, 0.24%)</title><rect x="21.1538%" y="501" width="0.2404%" height="15" fill="rgb(230,90,52)" fg:x="88" fg:w="1"/><text x="21.4038%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (1 samples, 0.24%)</title><rect x="21.1538%" y="485" width="0.2404%" height="15" fill="rgb(252,106,19)" fg:x="88" fg:w="1"/><text x="21.4038%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1 samples, 0.24%)</title><rect x="21.1538%" y="469" width="0.2404%" height="15" fill="rgb(206,74,20)" fg:x="88" fg:w="1"/><text x="21.4038%" y="479.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1 samples, 0.24%)</title><rect x="21.1538%" y="453" width="0.2404%" height="15" fill="rgb(230,138,44)" fg:x="88" fg:w="1"/><text x="21.4038%" y="463.50"></text></g><g><title>__close (1 samples, 0.24%)</title><rect x="21.1538%" y="437" width="0.2404%" height="15" fill="rgb(235,182,43)" fg:x="88" fg:w="1"/><text x="21.4038%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.24%)</title><rect x="21.1538%" y="421" width="0.2404%" height="15" fill="rgb(242,16,51)" fg:x="88" fg:w="1"/><text x="21.4038%" y="431.50"></text></g><g><title>do_syscall_64 (1 samples, 0.24%)</title><rect x="21.1538%" y="405" width="0.2404%" height="15" fill="rgb(248,9,4)" fg:x="88" fg:w="1"/><text x="21.4038%" y="415.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.24%)</title><rect x="21.1538%" y="389" width="0.2404%" height="15" fill="rgb(210,31,22)" fg:x="88" fg:w="1"/><text x="21.4038%" y="399.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.24%)</title><rect x="21.1538%" y="373" width="0.2404%" height="15" fill="rgb(239,54,39)" fg:x="88" fg:w="1"/><text x="21.4038%" y="383.50"></text></g><g><title>task_work_run (1 samples, 0.24%)</title><rect x="21.1538%" y="357" width="0.2404%" height="15" fill="rgb(230,99,41)" fg:x="88" fg:w="1"/><text x="21.4038%" y="367.50"></text></g><g><title>__fput (1 samples, 0.24%)</title><rect x="21.1538%" y="341" width="0.2404%" height="15" fill="rgb(253,106,12)" fg:x="88" fg:w="1"/><text x="21.4038%" y="351.50"></text></g><g><title>kmem_cache_free (1 samples, 0.24%)</title><rect x="21.1538%" y="325" width="0.2404%" height="15" fill="rgb(213,46,41)" fg:x="88" fg:w="1"/><text x="21.4038%" y="335.50"></text></g><g><title>__show_smap (1 samples, 0.24%)</title><rect x="25.9615%" y="245" width="0.2404%" height="15" fill="rgb(215,133,35)" fg:x="108" fg:w="1"/><text x="26.2115%" y="255.50"></text></g><g><title>mas_find (1 samples, 0.24%)</title><rect x="26.2019%" y="245" width="0.2404%" height="15" fill="rgb(213,28,5)" fg:x="109" fg:w="1"/><text x="26.4519%" y="255.50"></text></g><g><title>mas_walk (1 samples, 0.24%)</title><rect x="26.2019%" y="229" width="0.2404%" height="15" fill="rgb(215,77,49)" fg:x="109" fg:w="1"/><text x="26.4519%" y="239.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.24%)</title><rect x="26.2019%" y="213" width="0.2404%" height="15" fill="rgb(248,100,22)" fg:x="109" fg:w="1"/><text x="26.4519%" y="223.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.24%)</title><rect x="26.2019%" y="197" width="0.2404%" height="15" fill="rgb(208,67,9)" fg:x="109" fg:w="1"/><text x="26.4519%" y="207.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.24%)</title><rect x="26.2019%" y="181" width="0.2404%" height="15" fill="rgb(219,133,21)" fg:x="109" fg:w="1"/><text x="26.4519%" y="191.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.24%)</title><rect x="26.2019%" y="165" width="0.2404%" height="15" fill="rgb(246,46,29)" fg:x="109" fg:w="1"/><text x="26.4519%" y="175.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.24%)</title><rect x="26.2019%" y="149" width="0.2404%" height="15" fill="rgb(246,185,52)" fg:x="109" fg:w="1"/><text x="26.4519%" y="159.50"></text></g><g><title>tick_sched_timer (1 samples, 0.24%)</title><rect x="26.2019%" y="133" width="0.2404%" height="15" fill="rgb(252,136,11)" fg:x="109" fg:w="1"/><text x="26.4519%" y="143.50"></text></g><g><title>mas_next_entry (7 samples, 1.68%)</title><rect x="26.4423%" y="245" width="1.6827%" height="15" fill="rgb(219,138,53)" fg:x="110" fg:w="7"/><text x="26.6923%" y="255.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.72%)</title><rect x="35.3365%" y="181" width="0.7212%" height="15" fill="rgb(211,51,23)" fg:x="147" fg:w="3"/><text x="35.5865%" y="191.50"></text></g><g><title>smaps_account (144 samples, 34.62%)</title><rect x="36.0577%" y="181" width="34.6154%" height="15" fill="rgb(247,221,28)" fg:x="150" fg:w="144"/><text x="36.3077%" y="191.50">smaps_account</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.24%)</title><rect x="70.4327%" y="165" width="0.2404%" height="15" fill="rgb(251,222,45)" fg:x="293" fg:w="1"/><text x="70.6827%" y="175.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.24%)</title><rect x="70.4327%" y="149" width="0.2404%" height="15" fill="rgb(217,162,53)" fg:x="293" fg:w="1"/><text x="70.6827%" y="159.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.24%)</title><rect x="70.4327%" y="133" width="0.2404%" height="15" fill="rgb(229,93,14)" fg:x="293" fg:w="1"/><text x="70.6827%" y="143.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.24%)</title><rect x="70.4327%" y="117" width="0.2404%" height="15" fill="rgb(209,67,49)" fg:x="293" fg:w="1"/><text x="70.6827%" y="127.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.24%)</title><rect x="70.4327%" y="101" width="0.2404%" height="15" fill="rgb(213,87,29)" fg:x="293" fg:w="1"/><text x="70.6827%" y="111.50"></text></g><g><title>tick_sched_timer (1 samples, 0.24%)</title><rect x="70.4327%" y="85" width="0.2404%" height="15" fill="rgb(205,151,52)" fg:x="293" fg:w="1"/><text x="70.6827%" y="95.50"></text></g><g><title>update_process_times (1 samples, 0.24%)</title><rect x="70.4327%" y="69" width="0.2404%" height="15" fill="rgb(253,215,39)" fg:x="293" fg:w="1"/><text x="70.6827%" y="79.50"></text></g><g><title>scheduler_tick (1 samples, 0.24%)</title><rect x="70.4327%" y="53" width="0.2404%" height="15" fill="rgb(221,220,41)" fg:x="293" fg:w="1"/><text x="70.6827%" y="63.50"></text></g><g><title>calc_global_load_tick (1 samples, 0.24%)</title><rect x="70.4327%" y="37" width="0.2404%" height="15" fill="rgb(218,133,21)" fg:x="293" fg:w="1"/><text x="70.6827%" y="47.50"></text></g><g><title>_raw_spin_lock (8 samples, 1.92%)</title><rect x="70.9135%" y="165" width="1.9231%" height="15" fill="rgb(221,193,43)" fg:x="295" fg:w="8"/><text x="71.1635%" y="175.50">_..</text></g><g><title>native_queued_spin_lock_slowpath (7 samples, 1.68%)</title><rect x="71.1538%" y="149" width="1.6827%" height="15" fill="rgb(240,128,52)" fg:x="296" fg:w="7"/><text x="71.4038%" y="159.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.24%)</title><rect x="72.8365%" y="165" width="0.2404%" height="15" fill="rgb(253,114,12)" fg:x="303" fg:w="1"/><text x="73.0865%" y="175.50"></text></g><g><title>swp_swapcount (16 samples, 3.85%)</title><rect x="70.6731%" y="181" width="3.8462%" height="15" fill="rgb(215,223,47)" fg:x="294" fg:w="16"/><text x="70.9231%" y="191.50">swp_..</text></g><g><title>_swap_info_get (6 samples, 1.44%)</title><rect x="73.0769%" y="165" width="1.4423%" height="15" fill="rgb(248,225,23)" fg:x="304" fg:w="6"/><text x="73.3269%" y="175.50"></text></g><g><title>zmem::memory::ProcessMemoryStats::update (224 samples, 53.85%)</title><rect x="21.1538%" y="549" width="53.8462%" height="15" fill="rgb(250,108,0)" fg:x="88" fg:w="224"/><text x="21.4038%" y="559.50">zmem::memory::ProcessMemoryStats::update</text></g><g><title>std::io::BufRead::read_line (223 samples, 53.61%)</title><rect x="21.3942%" y="533" width="53.6058%" height="15" fill="rgb(228,208,7)" fg:x="89" fg:w="223"/><text x="21.6442%" y="543.50">std::io::BufRead::read_line</text></g><g><title>std::io::append_to_string (223 samples, 53.61%)</title><rect x="21.3942%" y="517" width="53.6058%" height="15" fill="rgb(244,45,10)" fg:x="89" fg:w="223"/><text x="21.6442%" y="527.50">std::io::append_to_string</text></g><g><title>std::io::BufRead::read_line::{{closure}} (223 samples, 53.61%)</title><rect x="21.3942%" y="501" width="53.6058%" height="15" fill="rgb(207,125,25)" fg:x="89" fg:w="223"/><text x="21.6442%" y="511.50">std::io::BufRead::read_line::{{closure}}</text></g><g><title>std::io::read_until (223 samples, 53.61%)</title><rect x="21.3942%" y="485" width="53.6058%" height="15" fill="rgb(210,195,18)" fg:x="89" fg:w="223"/><text x="21.6442%" y="495.50">std::io::read_until</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (223 samples, 53.61%)</title><rect x="21.3942%" y="469" width="53.6058%" height="15" fill="rgb(249,80,12)" fg:x="89" fg:w="223"/><text x="21.6442%" y="479.50">&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf</text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (223 samples, 53.61%)</title><rect x="21.3942%" y="453" width="53.6058%" height="15" fill="rgb(221,65,9)" fg:x="89" fg:w="223"/><text x="21.6442%" y="463.50">std::io::buffered::bufreader::buffer::Buffer::fill_buf</text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (223 samples, 53.61%)</title><rect x="21.3942%" y="437" width="53.6058%" height="15" fill="rgb(235,49,36)" fg:x="89" fg:w="223"/><text x="21.6442%" y="447.50">std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (223 samples, 53.61%)</title><rect x="21.3942%" y="421" width="53.6058%" height="15" fill="rgb(225,32,20)" fg:x="89" fg:w="223"/><text x="21.6442%" y="431.50">&lt;std::fs::File as std::io::Read&gt;::read_buf</text></g><g><title>std::sys::unix::fs::File::read_buf (223 samples, 53.61%)</title><rect x="21.3942%" y="405" width="53.6058%" height="15" fill="rgb(215,141,46)" fg:x="89" fg:w="223"/><text x="21.6442%" y="415.50">std::sys::unix::fs::File::read_buf</text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (223 samples, 53.61%)</title><rect x="21.3942%" y="389" width="53.6058%" height="15" fill="rgb(250,160,47)" fg:x="89" fg:w="223"/><text x="21.6442%" y="399.50">std::sys::unix::fd::FileDesc::read_buf</text></g><g><title>read (223 samples, 53.61%)</title><rect x="21.3942%" y="373" width="53.6058%" height="15" fill="rgb(216,222,40)" fg:x="89" fg:w="223"/><text x="21.6442%" y="383.50">read</text></g><g><title>entry_SYSCALL_64 (223 samples, 53.61%)</title><rect x="21.3942%" y="357" width="53.6058%" height="15" fill="rgb(234,217,39)" fg:x="89" fg:w="223"/><text x="21.6442%" y="367.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (223 samples, 53.61%)</title><rect x="21.3942%" y="341" width="53.6058%" height="15" fill="rgb(207,178,40)" fg:x="89" fg:w="223"/><text x="21.6442%" y="351.50">do_syscall_64</text></g><g><title>__x64_sys_read (223 samples, 53.61%)</title><rect x="21.3942%" y="325" width="53.6058%" height="15" fill="rgb(221,136,13)" fg:x="89" fg:w="223"/><text x="21.6442%" y="335.50">__x64_sys_read</text></g><g><title>vfs_read (223 samples, 53.61%)</title><rect x="21.3942%" y="309" width="53.6058%" height="15" fill="rgb(249,199,10)" fg:x="89" fg:w="223"/><text x="21.6442%" y="319.50">vfs_read</text></g><g><title>seq_read (223 samples, 53.61%)</title><rect x="21.3942%" y="293" width="53.6058%" height="15" fill="rgb(249,222,13)" fg:x="89" fg:w="223"/><text x="21.6442%" y="303.50">seq_read</text></g><g><title>seq_read_iter (223 samples, 53.61%)</title><rect x="21.3942%" y="277" width="53.6058%" height="15" fill="rgb(244,185,38)" fg:x="89" fg:w="223"/><text x="21.6442%" y="287.50">seq_read_iter</text></g><g><title>show_smaps_rollup (223 samples, 53.61%)</title><rect x="21.3942%" y="261" width="53.6058%" height="15" fill="rgb(236,202,9)" fg:x="89" fg:w="223"/><text x="21.6442%" y="271.50">show_smaps_rollup</text></g><g><title>walk_page_vma (195 samples, 46.88%)</title><rect x="28.1250%" y="245" width="46.8750%" height="15" fill="rgb(250,229,37)" fg:x="117" fg:w="195"/><text x="28.3750%" y="255.50">walk_page_vma</text></g><g><title>__walk_page_range (195 samples, 46.88%)</title><rect x="28.1250%" y="229" width="46.8750%" height="15" fill="rgb(206,174,23)" fg:x="117" fg:w="195"/><text x="28.3750%" y="239.50">__walk_page_range</text></g><g><title>walk_pgd_range (195 samples, 46.88%)</title><rect x="28.1250%" y="213" width="46.8750%" height="15" fill="rgb(211,33,43)" fg:x="117" fg:w="195"/><text x="28.3750%" y="223.50">walk_pgd_range</text></g><g><title>smaps_pte_range (192 samples, 46.15%)</title><rect x="28.8462%" y="197" width="46.1538%" height="15" fill="rgb(245,58,50)" fg:x="120" fg:w="192"/><text x="29.0962%" y="207.50">smaps_pte_range</text></g><g><title>vm_normal_page (2 samples, 0.48%)</title><rect x="74.5192%" y="181" width="0.4808%" height="15" fill="rgb(244,68,36)" fg:x="310" fg:w="2"/><text x="74.7692%" y="191.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (1 samples, 0.24%)</title><rect x="75.0000%" y="533" width="0.2404%" height="15" fill="rgb(232,229,15)" fg:x="312" fg:w="1"/><text x="75.2500%" y="543.50"></text></g><g><title>std::fs::buffer_capacity_required (1 samples, 0.24%)</title><rect x="75.0000%" y="517" width="0.2404%" height="15" fill="rgb(254,30,23)" fg:x="312" fg:w="1"/><text x="75.2500%" y="527.50"></text></g><g><title>std::io::Seek::stream_position (1 samples, 0.24%)</title><rect x="75.0000%" y="501" width="0.2404%" height="15" fill="rgb(235,160,14)" fg:x="312" fg:w="1"/><text x="75.2500%" y="511.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Seek&gt;::seek (1 samples, 0.24%)</title><rect x="75.0000%" y="485" width="0.2404%" height="15" fill="rgb(212,155,44)" fg:x="312" fg:w="1"/><text x="75.2500%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::seek (1 samples, 0.24%)</title><rect x="75.0000%" y="469" width="0.2404%" height="15" fill="rgb(226,2,50)" fg:x="312" fg:w="1"/><text x="75.2500%" y="479.50"></text></g><g><title>llseek (1 samples, 0.24%)</title><rect x="75.0000%" y="453" width="0.2404%" height="15" fill="rgb(234,177,6)" fg:x="312" fg:w="1"/><text x="75.2500%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.24%)</title><rect x="75.0000%" y="437" width="0.2404%" height="15" fill="rgb(217,24,9)" fg:x="312" fg:w="1"/><text x="75.2500%" y="447.50"></text></g><g><title>do_syscall_64 (1 samples, 0.24%)</title><rect x="75.0000%" y="421" width="0.2404%" height="15" fill="rgb(220,13,46)" fg:x="312" fg:w="1"/><text x="75.2500%" y="431.50"></text></g><g><title>complete_walk (1 samples, 0.24%)</title><rect x="75.2404%" y="277" width="0.2404%" height="15" fill="rgb(239,221,27)" fg:x="313" fg:w="1"/><text x="75.4904%" y="287.50"></text></g><g><title>try_to_unlazy (1 samples, 0.24%)</title><rect x="75.2404%" y="261" width="0.2404%" height="15" fill="rgb(222,198,25)" fg:x="313" fg:w="1"/><text x="75.4904%" y="271.50"></text></g><g><title>__legitimize_mnt (1 samples, 0.24%)</title><rect x="75.2404%" y="245" width="0.2404%" height="15" fill="rgb(211,99,13)" fg:x="313" fg:w="1"/><text x="75.4904%" y="255.50"></text></g><g><title>inode_permission (1 samples, 0.24%)</title><rect x="75.4808%" y="261" width="0.2404%" height="15" fill="rgb(232,111,31)" fg:x="314" fg:w="1"/><text x="75.7308%" y="271.50"></text></g><g><title>link_path_walk.part.0.constprop.0 (2 samples, 0.48%)</title><rect x="75.4808%" y="277" width="0.4808%" height="15" fill="rgb(245,82,37)" fg:x="314" fg:w="2"/><text x="75.7308%" y="287.50"></text></g><g><title>lookup_fast (1 samples, 0.24%)</title><rect x="75.7212%" y="261" width="0.2404%" height="15" fill="rgb(227,149,46)" fg:x="315" fg:w="1"/><text x="75.9712%" y="271.50"></text></g><g><title>pid_revalidate (1 samples, 0.24%)</title><rect x="75.7212%" y="245" width="0.2404%" height="15" fill="rgb(218,36,50)" fg:x="315" fg:w="1"/><text x="75.9712%" y="255.50"></text></g><g><title>pid_task (1 samples, 0.24%)</title><rect x="75.7212%" y="229" width="0.2404%" height="15" fill="rgb(226,80,48)" fg:x="315" fg:w="1"/><text x="75.9712%" y="239.50"></text></g><g><title>do_filp_open (4 samples, 0.96%)</title><rect x="75.2404%" y="309" width="0.9615%" height="15" fill="rgb(238,224,15)" fg:x="313" fg:w="4"/><text x="75.4904%" y="319.50"></text></g><g><title>path_openat (4 samples, 0.96%)</title><rect x="75.2404%" y="293" width="0.9615%" height="15" fill="rgb(241,136,10)" fg:x="313" fg:w="4"/><text x="75.4904%" y="303.50"></text></g><g><title>lookup_fast (1 samples, 0.24%)</title><rect x="75.9615%" y="277" width="0.2404%" height="15" fill="rgb(208,32,45)" fg:x="316" fg:w="1"/><text x="76.2115%" y="287.50"></text></g><g><title>__d_lookup_rcu (1 samples, 0.24%)</title><rect x="75.9615%" y="261" width="0.2404%" height="15" fill="rgb(207,135,9)" fg:x="316" fg:w="1"/><text x="76.2115%" y="271.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.24%)</title><rect x="76.2019%" y="293" width="0.2404%" height="15" fill="rgb(206,86,44)" fg:x="317" fg:w="1"/><text x="76.4519%" y="303.50"></text></g><g><title>slab_post_alloc_hook.constprop.0 (1 samples, 0.24%)</title><rect x="76.2019%" y="277" width="0.2404%" height="15" fill="rgb(245,177,15)" fg:x="317" fg:w="1"/><text x="76.4519%" y="287.50"></text></g><g><title>memset (1 samples, 0.24%)</title><rect x="76.2019%" y="261" width="0.2404%" height="15" fill="rgb(206,64,50)" fg:x="317" fg:w="1"/><text x="76.4519%" y="271.50"></text></g><g><title>tokio::runtime::coop::budget (232 samples, 55.77%)</title><rect x="20.9135%" y="853" width="55.7692%" height="15" fill="rgb(234,36,40)" fg:x="87" fg:w="232"/><text x="21.1635%" y="863.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (232 samples, 55.77%)</title><rect x="20.9135%" y="837" width="55.7692%" height="15" fill="rgb(213,64,8)" fg:x="87" fg:w="232"/><text x="21.1635%" y="847.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (232 samples, 55.77%)</title><rect x="20.9135%" y="821" width="55.7692%" height="15" fill="rgb(210,75,36)" fg:x="87" fg:w="232"/><text x="21.1635%" y="831.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (232 samples, 55.77%)</title><rect x="20.9135%" y="805" width="55.7692%" height="15" fill="rgb(229,88,21)" fg:x="87" fg:w="232"/><text x="21.1635%" y="815.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (232 samples, 55.77%)</title><rect x="20.9135%" y="789" width="55.7692%" height="15" fill="rgb(252,204,47)" fg:x="87" fg:w="232"/><text x="21.1635%" y="799.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (232 samples, 55.77%)</title><rect x="20.9135%" y="773" width="55.7692%" height="15" fill="rgb(208,77,27)" fg:x="87" fg:w="232"/><text x="21.1635%" y="783.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (231 samples, 55.53%)</title><rect x="21.1538%" y="757" width="55.5288%" height="15" fill="rgb(221,76,26)" fg:x="88" fg:w="231"/><text x="21.4038%" y="767.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (231 samples, 55.53%)</title><rect x="21.1538%" y="741" width="55.5288%" height="15" fill="rgb(225,139,18)" fg:x="88" fg:w="231"/><text x="21.4038%" y="751.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (231 samples, 55.53%)</title><rect x="21.1538%" y="725" width="55.5288%" height="15" fill="rgb(230,137,11)" fg:x="88" fg:w="231"/><text x="21.4038%" y="735.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (231 samples, 55.53%)</title><rect x="21.1538%" y="709" width="55.5288%" height="15" fill="rgb(212,28,1)" fg:x="88" fg:w="231"/><text x="21.4038%" y="719.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (231 samples, 55.53%)</title><rect x="21.1538%" y="693" width="55.5288%" height="15" fill="rgb(248,164,17)" fg:x="88" fg:w="231"/><text x="21.4038%" y="703.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (231 samples, 55.53%)</title><rect x="21.1538%" y="677" width="55.5288%" height="15" fill="rgb(222,171,42)" fg:x="88" fg:w="231"/><text x="21.4038%" y="687.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (231 samples, 55.53%)</title><rect x="21.1538%" y="661" width="55.5288%" height="15" fill="rgb(243,84,45)" fg:x="88" fg:w="231"/><text x="21.4038%" y="671.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (231 samples, 55.53%)</title><rect x="21.1538%" y="645" width="55.5288%" height="15" fill="rgb(252,49,23)" fg:x="88" fg:w="231"/><text x="21.4038%" y="655.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (231 samples, 55.53%)</title><rect x="21.1538%" y="629" width="55.5288%" height="15" fill="rgb(215,19,7)" fg:x="88" fg:w="231"/><text x="21.4038%" y="639.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (231 samples, 55.53%)</title><rect x="21.1538%" y="613" width="55.5288%" height="15" fill="rgb(238,81,41)" fg:x="88" fg:w="231"/><text x="21.4038%" y="623.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>zmem::process::Processes::update::{{closure}}::{{closure}}::{{closure}} (231 samples, 55.53%)</title><rect x="21.1538%" y="597" width="55.5288%" height="15" fill="rgb(210,199,37)" fg:x="88" fg:w="231"/><text x="21.4038%" y="607.50">zmem::process::Processes::update::{{closure}}::{{closure}}::{{closure}}</text></g><g><title>zmem::process::Process::new (231 samples, 55.53%)</title><rect x="21.1538%" y="581" width="55.5288%" height="15" fill="rgb(244,192,49)" fg:x="88" fg:w="231"/><text x="21.4038%" y="591.50">zmem::process::Process::new</text></g><g><title>zmem::process::Process::update (231 samples, 55.53%)</title><rect x="21.1538%" y="565" width="55.5288%" height="15" fill="rgb(226,211,11)" fg:x="88" fg:w="231"/><text x="21.4038%" y="575.50">zmem::process::Process::update</text></g><g><title>zmem::utils::get_cmd (7 samples, 1.68%)</title><rect x="75.0000%" y="549" width="1.6827%" height="15" fill="rgb(236,162,54)" fg:x="312" fg:w="7"/><text x="75.2500%" y="559.50"></text></g><g><title>std::fs::File::open (6 samples, 1.44%)</title><rect x="75.2404%" y="533" width="1.4423%" height="15" fill="rgb(220,229,9)" fg:x="313" fg:w="6"/><text x="75.4904%" y="543.50"></text></g><g><title>std::fs::OpenOptions::open (6 samples, 1.44%)</title><rect x="75.2404%" y="517" width="1.4423%" height="15" fill="rgb(250,87,22)" fg:x="313" fg:w="6"/><text x="75.4904%" y="527.50"></text></g><g><title>std::fs::OpenOptions::_open (6 samples, 1.44%)</title><rect x="75.2404%" y="501" width="1.4423%" height="15" fill="rgb(239,43,17)" fg:x="313" fg:w="6"/><text x="75.4904%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::open (6 samples, 1.44%)</title><rect x="75.2404%" y="485" width="1.4423%" height="15" fill="rgb(231,177,25)" fg:x="313" fg:w="6"/><text x="75.4904%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (6 samples, 1.44%)</title><rect x="75.2404%" y="469" width="1.4423%" height="15" fill="rgb(219,179,1)" fg:x="313" fg:w="6"/><text x="75.4904%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (6 samples, 1.44%)</title><rect x="75.2404%" y="453" width="1.4423%" height="15" fill="rgb(238,219,53)" fg:x="313" fg:w="6"/><text x="75.4904%" y="463.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (6 samples, 1.44%)</title><rect x="75.2404%" y="437" width="1.4423%" height="15" fill="rgb(232,167,36)" fg:x="313" fg:w="6"/><text x="75.4904%" y="447.50"></text></g><g><title>std::sys::unix::fs::File::open_c (6 samples, 1.44%)</title><rect x="75.2404%" y="421" width="1.4423%" height="15" fill="rgb(244,19,51)" fg:x="313" fg:w="6"/><text x="75.4904%" y="431.50"></text></g><g><title>std::sys::unix::cvt_r (6 samples, 1.44%)</title><rect x="75.2404%" y="405" width="1.4423%" height="15" fill="rgb(224,6,22)" fg:x="313" fg:w="6"/><text x="75.4904%" y="415.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (6 samples, 1.44%)</title><rect x="75.2404%" y="389" width="1.4423%" height="15" fill="rgb(224,145,5)" fg:x="313" fg:w="6"/><text x="75.4904%" y="399.50"></text></g><g><title>open64 (6 samples, 1.44%)</title><rect x="75.2404%" y="373" width="1.4423%" height="15" fill="rgb(234,130,49)" fg:x="313" fg:w="6"/><text x="75.4904%" y="383.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 1.44%)</title><rect x="75.2404%" y="357" width="1.4423%" height="15" fill="rgb(254,6,2)" fg:x="313" fg:w="6"/><text x="75.4904%" y="367.50"></text></g><g><title>do_syscall_64 (6 samples, 1.44%)</title><rect x="75.2404%" y="341" width="1.4423%" height="15" fill="rgb(208,96,46)" fg:x="313" fg:w="6"/><text x="75.4904%" y="351.50"></text></g><g><title>__x64_sys_openat (6 samples, 1.44%)</title><rect x="75.2404%" y="325" width="1.4423%" height="15" fill="rgb(239,3,39)" fg:x="313" fg:w="6"/><text x="75.4904%" y="335.50"></text></g><g><title>getname_flags.part.0 (2 samples, 0.48%)</title><rect x="76.2019%" y="309" width="0.4808%" height="15" fill="rgb(233,210,1)" fg:x="317" fg:w="2"/><text x="76.4519%" y="319.50"></text></g><g><title>strncpy_from_user (1 samples, 0.24%)</title><rect x="76.4423%" y="293" width="0.2404%" height="15" fill="rgb(244,137,37)" fg:x="318" fg:w="1"/><text x="76.6923%" y="303.50"></text></g><g><title>__check_object_size (1 samples, 0.24%)</title><rect x="76.4423%" y="277" width="0.2404%" height="15" fill="rgb(240,136,2)" fg:x="318" fg:w="1"/><text x="76.6923%" y="287.50"></text></g><g><title>std::panic::catch_unwind (305 samples, 73.32%)</title><rect x="3.6058%" y="1317" width="73.3173%" height="15" fill="rgb(239,18,37)" fg:x="15" fg:w="305"/><text x="3.8558%" y="1327.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (305 samples, 73.32%)</title><rect x="3.6058%" y="1301" width="73.3173%" height="15" fill="rgb(218,185,22)" fg:x="15" fg:w="305"/><text x="3.8558%" y="1311.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (305 samples, 73.32%)</title><rect x="3.6058%" y="1285" width="73.3173%" height="15" fill="rgb(225,218,4)" fg:x="15" fg:w="305"/><text x="3.8558%" y="1295.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (305 samples, 73.32%)</title><rect x="3.6058%" y="1269" width="73.3173%" height="15" fill="rgb(230,182,32)" fg:x="15" fg:w="305"/><text x="3.8558%" y="1279.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (305 samples, 73.32%)</title><rect x="3.6058%" y="1253" width="73.3173%" height="15" fill="rgb(242,56,43)" fg:x="15" fg:w="305"/><text x="3.8558%" y="1263.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (305 samples, 73.32%)</title><rect x="3.6058%" y="1237" width="73.3173%" height="15" fill="rgb(233,99,24)" fg:x="15" fg:w="305"/><text x="3.8558%" y="1247.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (305 samples, 73.32%)</title><rect x="3.6058%" y="1221" width="73.3173%" height="15" fill="rgb(234,209,42)" fg:x="15" fg:w="305"/><text x="3.8558%" y="1231.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (304 samples, 73.08%)</title><rect x="3.8462%" y="1205" width="73.0769%" height="15" fill="rgb(227,7,12)" fg:x="16" fg:w="304"/><text x="4.0962%" y="1215.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (261 samples, 62.74%)</title><rect x="14.1827%" y="1189" width="62.7404%" height="15" fill="rgb(245,203,43)" fg:x="59" fg:w="261"/><text x="14.4327%" y="1199.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (261 samples, 62.74%)</title><rect x="14.1827%" y="1173" width="62.7404%" height="15" fill="rgb(238,205,33)" fg:x="59" fg:w="261"/><text x="14.4327%" y="1183.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (261 samples, 62.74%)</title><rect x="14.1827%" y="1157" width="62.7404%" height="15" fill="rgb(231,56,7)" fg:x="59" fg:w="261"/><text x="14.4327%" y="1167.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (261 samples, 62.74%)</title><rect x="14.1827%" y="1141" width="62.7404%" height="15" fill="rgb(244,186,29)" fg:x="59" fg:w="261"/><text x="14.4327%" y="1151.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (261 samples, 62.74%)</title><rect x="14.1827%" y="1125" width="62.7404%" height="15" fill="rgb(234,111,31)" fg:x="59" fg:w="261"/><text x="14.4327%" y="1135.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (261 samples, 62.74%)</title><rect x="14.1827%" y="1109" width="62.7404%" height="15" fill="rgb(241,149,10)" fg:x="59" fg:w="261"/><text x="14.4327%" y="1119.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (261 samples, 62.74%)</title><rect x="14.1827%" y="1093" width="62.7404%" height="15" fill="rgb(249,206,44)" fg:x="59" fg:w="261"/><text x="14.4327%" y="1103.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (261 samples, 62.74%)</title><rect x="14.1827%" y="1077" width="62.7404%" height="15" fill="rgb(251,153,30)" fg:x="59" fg:w="261"/><text x="14.4327%" y="1087.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (261 samples, 62.74%)</title><rect x="14.1827%" y="1061" width="62.7404%" height="15" fill="rgb(239,152,38)" fg:x="59" fg:w="261"/><text x="14.4327%" y="1071.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (261 samples, 62.74%)</title><rect x="14.1827%" y="1045" width="62.7404%" height="15" fill="rgb(249,139,47)" fg:x="59" fg:w="261"/><text x="14.4327%" y="1055.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (261 samples, 62.74%)</title><rect x="14.1827%" y="1029" width="62.7404%" height="15" fill="rgb(244,64,35)" fg:x="59" fg:w="261"/><text x="14.4327%" y="1039.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (261 samples, 62.74%)</title><rect x="14.1827%" y="1013" width="62.7404%" height="15" fill="rgb(216,46,15)" fg:x="59" fg:w="261"/><text x="14.4327%" y="1023.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (261 samples, 62.74%)</title><rect x="14.1827%" y="997" width="62.7404%" height="15" fill="rgb(250,74,19)" fg:x="59" fg:w="261"/><text x="14.4327%" y="1007.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (261 samples, 62.74%)</title><rect x="14.1827%" y="981" width="62.7404%" height="15" fill="rgb(249,42,33)" fg:x="59" fg:w="261"/><text x="14.4327%" y="991.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (261 samples, 62.74%)</title><rect x="14.1827%" y="965" width="62.7404%" height="15" fill="rgb(242,149,17)" fg:x="59" fg:w="261"/><text x="14.4327%" y="975.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (261 samples, 62.74%)</title><rect x="14.1827%" y="949" width="62.7404%" height="15" fill="rgb(244,29,21)" fg:x="59" fg:w="261"/><text x="14.4327%" y="959.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (261 samples, 62.74%)</title><rect x="14.1827%" y="933" width="62.7404%" height="15" fill="rgb(220,130,37)" fg:x="59" fg:w="261"/><text x="14.4327%" y="943.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (261 samples, 62.74%)</title><rect x="14.1827%" y="917" width="62.7404%" height="15" fill="rgb(211,67,2)" fg:x="59" fg:w="261"/><text x="14.4327%" y="927.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (261 samples, 62.74%)</title><rect x="14.1827%" y="901" width="62.7404%" height="15" fill="rgb(235,68,52)" fg:x="59" fg:w="261"/><text x="14.4327%" y="911.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (261 samples, 62.74%)</title><rect x="14.1827%" y="885" width="62.7404%" height="15" fill="rgb(246,142,3)" fg:x="59" fg:w="261"/><text x="14.4327%" y="895.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (233 samples, 56.01%)</title><rect x="20.9135%" y="869" width="56.0096%" height="15" fill="rgb(241,25,7)" fg:x="87" fg:w="233"/><text x="21.1635%" y="879.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (1 samples, 0.24%)</title><rect x="76.6827%" y="853" width="0.2404%" height="15" fill="rgb(242,119,39)" fg:x="319" fg:w="1"/><text x="76.9327%" y="863.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (1 samples, 0.24%)</title><rect x="76.6827%" y="837" width="0.2404%" height="15" fill="rgb(241,98,45)" fg:x="319" fg:w="1"/><text x="76.9327%" y="847.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (1 samples, 0.24%)</title><rect x="76.6827%" y="821" width="0.2404%" height="15" fill="rgb(254,28,30)" fg:x="319" fg:w="1"/><text x="76.9327%" y="831.50"></text></g><g><title>tokio::runtime::io::Handle::unpark (1 samples, 0.24%)</title><rect x="76.6827%" y="805" width="0.2404%" height="15" fill="rgb(241,142,54)" fg:x="319" fg:w="1"/><text x="76.9327%" y="815.50"></text></g><g><title>mio::waker::Waker::wake (1 samples, 0.24%)</title><rect x="76.6827%" y="789" width="0.2404%" height="15" fill="rgb(222,85,15)" fg:x="319" fg:w="1"/><text x="76.9327%" y="799.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (1 samples, 0.24%)</title><rect x="76.6827%" y="773" width="0.2404%" height="15" fill="rgb(210,85,47)" fg:x="319" fg:w="1"/><text x="76.9327%" y="783.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.24%)</title><rect x="76.6827%" y="757" width="0.2404%" height="15" fill="rgb(224,206,25)" fg:x="319" fg:w="1"/><text x="76.9327%" y="767.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.24%)</title><rect x="76.6827%" y="741" width="0.2404%" height="15" fill="rgb(243,201,19)" fg:x="319" fg:w="1"/><text x="76.9327%" y="751.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.24%)</title><rect x="76.6827%" y="725" width="0.2404%" height="15" fill="rgb(236,59,4)" fg:x="319" fg:w="1"/><text x="76.9327%" y="735.50"></text></g><g><title>write (1 samples, 0.24%)</title><rect x="76.6827%" y="709" width="0.2404%" height="15" fill="rgb(254,179,45)" fg:x="319" fg:w="1"/><text x="76.9327%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.24%)</title><rect x="76.6827%" y="693" width="0.2404%" height="15" fill="rgb(226,14,10)" fg:x="319" fg:w="1"/><text x="76.9327%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.24%)</title><rect x="76.6827%" y="677" width="0.2404%" height="15" fill="rgb(244,27,41)" fg:x="319" fg:w="1"/><text x="76.9327%" y="687.50"></text></g><g><title>__x64_sys_write (1 samples, 0.24%)</title><rect x="76.6827%" y="661" width="0.2404%" height="15" fill="rgb(235,35,32)" fg:x="319" fg:w="1"/><text x="76.9327%" y="671.50"></text></g><g><title>vfs_write (1 samples, 0.24%)</title><rect x="76.6827%" y="645" width="0.2404%" height="15" fill="rgb(218,68,31)" fg:x="319" fg:w="1"/><text x="76.9327%" y="655.50"></text></g><g><title>eventfd_write (1 samples, 0.24%)</title><rect x="76.6827%" y="629" width="0.2404%" height="15" fill="rgb(207,120,37)" fg:x="319" fg:w="1"/><text x="76.9327%" y="639.50"></text></g><g><title>__wake_up_locked_key (1 samples, 0.24%)</title><rect x="76.6827%" y="613" width="0.2404%" height="15" fill="rgb(227,98,0)" fg:x="319" fg:w="1"/><text x="76.9327%" y="623.50"></text></g><g><title>ep_poll_callback (1 samples, 0.24%)</title><rect x="76.6827%" y="597" width="0.2404%" height="15" fill="rgb(207,7,3)" fg:x="319" fg:w="1"/><text x="76.9327%" y="607.50"></text></g><g><title>__wake_up (1 samples, 0.24%)</title><rect x="76.6827%" y="581" width="0.2404%" height="15" fill="rgb(206,98,19)" fg:x="319" fg:w="1"/><text x="76.9327%" y="591.50"></text></g><g><title>__wake_up_common (1 samples, 0.24%)</title><rect x="76.6827%" y="565" width="0.2404%" height="15" fill="rgb(217,5,26)" fg:x="319" fg:w="1"/><text x="76.9327%" y="575.50"></text></g><g><title>ep_autoremove_wake_function (1 samples, 0.24%)</title><rect x="76.6827%" y="549" width="0.2404%" height="15" fill="rgb(235,190,38)" fg:x="319" fg:w="1"/><text x="76.9327%" y="559.50"></text></g><g><title>try_to_wake_up (1 samples, 0.24%)</title><rect x="76.6827%" y="533" width="0.2404%" height="15" fill="rgb(247,86,24)" fg:x="319" fg:w="1"/><text x="76.9327%" y="543.50"></text></g><g><title>ttwu_queue_wakelist (1 samples, 0.24%)</title><rect x="76.6827%" y="517" width="0.2404%" height="15" fill="rgb(205,101,16)" fg:x="319" fg:w="1"/><text x="76.9327%" y="527.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.24%)</title><rect x="76.6827%" y="501" width="0.2404%" height="15" fill="rgb(246,168,33)" fg:x="319" fg:w="1"/><text x="76.9327%" y="511.50"></text></g><g><title>osq_lock (1 samples, 0.24%)</title><rect x="76.9231%" y="1109" width="0.2404%" height="15" fill="rgb(231,114,1)" fg:x="320" fg:w="1"/><text x="77.1731%" y="1119.50"></text></g><g><title>__mprotect (2 samples, 0.48%)</title><rect x="76.9231%" y="1221" width="0.4808%" height="15" fill="rgb(207,184,53)" fg:x="320" fg:w="2"/><text x="77.1731%" y="1231.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.48%)</title><rect x="76.9231%" y="1205" width="0.4808%" height="15" fill="rgb(224,95,51)" fg:x="320" fg:w="2"/><text x="77.1731%" y="1215.50"></text></g><g><title>do_syscall_64 (2 samples, 0.48%)</title><rect x="76.9231%" y="1189" width="0.4808%" height="15" fill="rgb(212,188,45)" fg:x="320" fg:w="2"/><text x="77.1731%" y="1199.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.48%)</title><rect x="76.9231%" y="1173" width="0.4808%" height="15" fill="rgb(223,154,38)" fg:x="320" fg:w="2"/><text x="77.1731%" y="1183.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.48%)</title><rect x="76.9231%" y="1157" width="0.4808%" height="15" fill="rgb(251,22,52)" fg:x="320" fg:w="2"/><text x="77.1731%" y="1167.50"></text></g><g><title>down_write_killable (2 samples, 0.48%)</title><rect x="76.9231%" y="1141" width="0.4808%" height="15" fill="rgb(229,209,22)" fg:x="320" fg:w="2"/><text x="77.1731%" y="1151.50"></text></g><g><title>rwsem_down_write_slowpath (2 samples, 0.48%)</title><rect x="76.9231%" y="1125" width="0.4808%" height="15" fill="rgb(234,138,34)" fg:x="320" fg:w="2"/><text x="77.1731%" y="1135.50"></text></g><g><title>rwsem_spin_on_owner (1 samples, 0.24%)</title><rect x="77.1635%" y="1109" width="0.2404%" height="15" fill="rgb(212,95,11)" fg:x="321" fg:w="1"/><text x="77.4135%" y="1119.50"></text></g><g><title>do_vmi_munmap (1 samples, 0.24%)</title><rect x="77.4038%" y="1141" width="0.2404%" height="15" fill="rgb(240,179,47)" fg:x="322" fg:w="1"/><text x="77.6538%" y="1151.50"></text></g><g><title>do_vmi_align_munmap (1 samples, 0.24%)</title><rect x="77.4038%" y="1125" width="0.2404%" height="15" fill="rgb(240,163,11)" fg:x="322" fg:w="1"/><text x="77.6538%" y="1135.50"></text></g><g><title>lru_add_drain (1 samples, 0.24%)</title><rect x="77.4038%" y="1109" width="0.2404%" height="15" fill="rgb(236,37,12)" fg:x="322" fg:w="1"/><text x="77.6538%" y="1119.50"></text></g><g><title>lru_add_drain_cpu (1 samples, 0.24%)</title><rect x="77.4038%" y="1093" width="0.2404%" height="15" fill="rgb(232,164,16)" fg:x="322" fg:w="1"/><text x="77.6538%" y="1103.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.24%)</title><rect x="77.6442%" y="1109" width="0.2404%" height="15" fill="rgb(244,205,15)" fg:x="323" fg:w="1"/><text x="77.8942%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (310 samples, 74.52%)</title><rect x="3.6058%" y="1381" width="74.5192%" height="15" fill="rgb(223,117,47)" fg:x="15" fg:w="310"/><text x="3.8558%" y="1391.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (310 samples, 74.52%)</title><rect x="3.6058%" y="1365" width="74.5192%" height="15" fill="rgb(244,107,35)" fg:x="15" fg:w="310"/><text x="3.8558%" y="1375.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (310 samples, 74.52%)</title><rect x="3.6058%" y="1349" width="74.5192%" height="15" fill="rgb(205,140,8)" fg:x="15" fg:w="310"/><text x="3.8558%" y="1359.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (310 samples, 74.52%)</title><rect x="3.6058%" y="1333" width="74.5192%" height="15" fill="rgb(228,84,46)" fg:x="15" fg:w="310"/><text x="3.8558%" y="1343.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (5 samples, 1.20%)</title><rect x="76.9231%" y="1317" width="1.2019%" height="15" fill="rgb(254,188,9)" fg:x="320" fg:w="5"/><text x="77.1731%" y="1327.50"></text></g><g><title>pthread_getattr_np (5 samples, 1.20%)</title><rect x="76.9231%" y="1301" width="1.2019%" height="15" fill="rgb(206,112,54)" fg:x="320" fg:w="5"/><text x="77.1731%" y="1311.50"></text></g><g><title>malloc (5 samples, 1.20%)</title><rect x="76.9231%" y="1285" width="1.2019%" height="15" fill="rgb(216,84,49)" fg:x="320" fg:w="5"/><text x="77.1731%" y="1295.50"></text></g><g><title>[libc.so.6] (5 samples, 1.20%)</title><rect x="76.9231%" y="1269" width="1.2019%" height="15" fill="rgb(214,194,35)" fg:x="320" fg:w="5"/><text x="77.1731%" y="1279.50"></text></g><g><title>[libc.so.6] (5 samples, 1.20%)</title><rect x="76.9231%" y="1253" width="1.2019%" height="15" fill="rgb(249,28,3)" fg:x="320" fg:w="5"/><text x="77.1731%" y="1263.50"></text></g><g><title>[libc.so.6] (5 samples, 1.20%)</title><rect x="76.9231%" y="1237" width="1.2019%" height="15" fill="rgb(222,56,52)" fg:x="320" fg:w="5"/><text x="77.1731%" y="1247.50"></text></g><g><title>__munmap (3 samples, 0.72%)</title><rect x="77.4038%" y="1221" width="0.7212%" height="15" fill="rgb(245,217,50)" fg:x="322" fg:w="3"/><text x="77.6538%" y="1231.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.72%)</title><rect x="77.4038%" y="1205" width="0.7212%" height="15" fill="rgb(213,201,24)" fg:x="322" fg:w="3"/><text x="77.6538%" y="1215.50"></text></g><g><title>do_syscall_64 (3 samples, 0.72%)</title><rect x="77.4038%" y="1189" width="0.7212%" height="15" fill="rgb(248,116,28)" fg:x="322" fg:w="3"/><text x="77.6538%" y="1199.50"></text></g><g><title>__x64_sys_munmap (3 samples, 0.72%)</title><rect x="77.4038%" y="1173" width="0.7212%" height="15" fill="rgb(219,72,43)" fg:x="322" fg:w="3"/><text x="77.6538%" y="1183.50"></text></g><g><title>__vm_munmap (3 samples, 0.72%)</title><rect x="77.4038%" y="1157" width="0.7212%" height="15" fill="rgb(209,138,14)" fg:x="322" fg:w="3"/><text x="77.6538%" y="1167.50"></text></g><g><title>down_write_killable (2 samples, 0.48%)</title><rect x="77.6442%" y="1141" width="0.4808%" height="15" fill="rgb(222,18,33)" fg:x="323" fg:w="2"/><text x="77.8942%" y="1151.50"></text></g><g><title>rwsem_down_write_slowpath (2 samples, 0.48%)</title><rect x="77.6442%" y="1125" width="0.4808%" height="15" fill="rgb(213,199,7)" fg:x="323" fg:w="2"/><text x="77.8942%" y="1135.50"></text></g><g><title>osq_lock (1 samples, 0.24%)</title><rect x="77.8846%" y="1109" width="0.2404%" height="15" fill="rgb(250,110,10)" fg:x="324" fg:w="1"/><text x="78.1346%" y="1119.50"></text></g><g><title>osq_lock (1 samples, 0.24%)</title><rect x="78.1250%" y="1221" width="0.2404%" height="15" fill="rgb(248,123,6)" fg:x="325" fg:w="1"/><text x="78.3750%" y="1231.50"></text></g><g><title>__munmap (2 samples, 0.48%)</title><rect x="78.1250%" y="1333" width="0.4808%" height="15" fill="rgb(206,91,31)" fg:x="325" fg:w="2"/><text x="78.3750%" y="1343.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.48%)</title><rect x="78.1250%" y="1317" width="0.4808%" height="15" fill="rgb(211,154,13)" fg:x="325" fg:w="2"/><text x="78.3750%" y="1327.50"></text></g><g><title>do_syscall_64 (2 samples, 0.48%)</title><rect x="78.1250%" y="1301" width="0.4808%" height="15" fill="rgb(225,148,7)" fg:x="325" fg:w="2"/><text x="78.3750%" y="1311.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.48%)</title><rect x="78.1250%" y="1285" width="0.4808%" height="15" fill="rgb(220,160,43)" fg:x="325" fg:w="2"/><text x="78.3750%" y="1295.50"></text></g><g><title>__vm_munmap (2 samples, 0.48%)</title><rect x="78.1250%" y="1269" width="0.4808%" height="15" fill="rgb(213,52,39)" fg:x="325" fg:w="2"/><text x="78.3750%" y="1279.50"></text></g><g><title>down_write_killable (2 samples, 0.48%)</title><rect x="78.1250%" y="1253" width="0.4808%" height="15" fill="rgb(243,137,7)" fg:x="325" fg:w="2"/><text x="78.3750%" y="1263.50"></text></g><g><title>rwsem_down_write_slowpath (2 samples, 0.48%)</title><rect x="78.1250%" y="1237" width="0.4808%" height="15" fill="rgb(230,79,13)" fg:x="325" fg:w="2"/><text x="78.3750%" y="1247.50"></text></g><g><title>rwsem_spin_on_owner (1 samples, 0.24%)</title><rect x="78.3654%" y="1221" width="0.2404%" height="15" fill="rgb(247,105,23)" fg:x="326" fg:w="1"/><text x="78.6154%" y="1231.50"></text></g><g><title>[libc.so.6] (320 samples, 76.92%)</title><rect x="1.9231%" y="1429" width="76.9231%" height="15" fill="rgb(223,179,41)" fg:x="8" fg:w="320"/><text x="2.1731%" y="1439.50">[libc.so.6]</text></g><g><title>[libc.so.6] (320 samples, 76.92%)</title><rect x="1.9231%" y="1413" width="76.9231%" height="15" fill="rgb(218,9,34)" fg:x="8" fg:w="320"/><text x="2.1731%" y="1423.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (313 samples, 75.24%)</title><rect x="3.6058%" y="1397" width="75.2404%" height="15" fill="rgb(222,106,8)" fg:x="15" fg:w="313"/><text x="3.8558%" y="1407.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (3 samples, 0.72%)</title><rect x="78.1250%" y="1381" width="0.7212%" height="15" fill="rgb(211,220,0)" fg:x="325" fg:w="3"/><text x="78.3750%" y="1391.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (3 samples, 0.72%)</title><rect x="78.1250%" y="1365" width="0.7212%" height="15" fill="rgb(229,52,16)" fg:x="325" fg:w="3"/><text x="78.3750%" y="1375.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (3 samples, 0.72%)</title><rect x="78.1250%" y="1349" width="0.7212%" height="15" fill="rgb(212,155,18)" fg:x="325" fg:w="3"/><text x="78.3750%" y="1359.50"></text></g><g><title>std::sys::unix::os::page_size (1 samples, 0.24%)</title><rect x="78.6058%" y="1333" width="0.2404%" height="15" fill="rgb(242,21,14)" fg:x="327" fg:w="1"/><text x="78.8558%" y="1343.50"></text></g><g><title>__sysconf (1 samples, 0.24%)</title><rect x="78.6058%" y="1317" width="0.2404%" height="15" fill="rgb(222,19,48)" fg:x="327" fg:w="1"/><text x="78.8558%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.24%)</title><rect x="78.8462%" y="1429" width="0.2404%" height="15" fill="rgb(232,45,27)" fg:x="328" fg:w="1"/><text x="79.0962%" y="1439.50"></text></g><g><title>zmem::utils::parse_value (1 samples, 0.24%)</title><rect x="78.8462%" y="1413" width="0.2404%" height="15" fill="rgb(249,103,42)" fg:x="328" fg:w="1"/><text x="79.0962%" y="1423.50"></text></g><g><title>&lt;core::str::iter::SplitAsciiWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.24%)</title><rect x="78.8462%" y="1397" width="0.2404%" height="15" fill="rgb(246,81,33)" fg:x="328" fg:w="1"/><text x="79.0962%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.24%)</title><rect x="78.8462%" y="1381" width="0.2404%" height="15" fill="rgb(252,33,42)" fg:x="328" fg:w="1"/><text x="79.0962%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.24%)</title><rect x="78.8462%" y="1365" width="0.2404%" height="15" fill="rgb(209,212,41)" fg:x="328" fg:w="1"/><text x="79.0962%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.24%)</title><rect x="78.8462%" y="1349" width="0.2404%" height="15" fill="rgb(207,154,6)" fg:x="328" fg:w="1"/><text x="79.0962%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.24%)</title><rect x="78.8462%" y="1333" width="0.2404%" height="15" fill="rgb(223,64,47)" fg:x="328" fg:w="1"/><text x="79.0962%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Split&lt;T,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.24%)</title><rect x="78.8462%" y="1317" width="0.2404%" height="15" fill="rgb(211,161,38)" fg:x="328" fg:w="1"/><text x="79.0962%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.24%)</title><rect x="78.8462%" y="1301" width="0.2404%" height="15" fill="rgb(219,138,40)" fg:x="328" fg:w="1"/><text x="79.0962%" y="1311.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.24%)</title><rect x="78.8462%" y="1285" width="0.2404%" height="15" fill="rgb(241,228,46)" fg:x="328" fg:w="1"/><text x="79.0962%" y="1295.50"></text></g><g><title>tokio-runtime-w (325 samples, 78.12%)</title><rect x="1.2019%" y="1445" width="78.1250%" height="15" fill="rgb(223,209,38)" fg:x="5" fg:w="325"/><text x="1.4519%" y="1455.50">tokio-runtime-w</text></g><g><title>entry_SYSCALL_64 (1 samples, 0.24%)</title><rect x="79.0865%" y="1429" width="0.2404%" height="15" fill="rgb(236,164,45)" fg:x="329" fg:w="1"/><text x="79.3365%" y="1439.50"></text></g><g><title>do_syscall_64 (1 samples, 0.24%)</title><rect x="79.0865%" y="1413" width="0.2404%" height="15" fill="rgb(231,15,5)" fg:x="329" fg:w="1"/><text x="79.3365%" y="1423.50"></text></g><g><title>__x64_sys_clock_gettime (1 samples, 0.24%)</title><rect x="79.0865%" y="1397" width="0.2404%" height="15" fill="rgb(252,35,15)" fg:x="329" fg:w="1"/><text x="79.3365%" y="1407.50"></text></g><g><title>posix_get_monotonic_timespec (1 samples, 0.24%)</title><rect x="79.0865%" y="1381" width="0.2404%" height="15" fill="rgb(248,181,18)" fg:x="329" fg:w="1"/><text x="79.3365%" y="1391.50"></text></g><g><title>ktime_get_ts64 (1 samples, 0.24%)</title><rect x="79.0865%" y="1365" width="0.2404%" height="15" fill="rgb(233,39,42)" fg:x="329" fg:w="1"/><text x="79.3365%" y="1375.50"></text></g><g><title>read_hpet (1 samples, 0.24%)</title><rect x="79.0865%" y="1349" width="0.2404%" height="15" fill="rgb(238,110,33)" fg:x="329" fg:w="1"/><text x="79.3365%" y="1359.50"></text></g><g><title>calculate_sigpending (1 samples, 0.24%)</title><rect x="79.3269%" y="1381" width="0.2404%" height="15" fill="rgb(233,195,10)" fg:x="330" fg:w="1"/><text x="79.5769%" y="1391.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.24%)</title><rect x="79.3269%" y="1365" width="0.2404%" height="15" fill="rgb(254,105,3)" fg:x="330" fg:w="1"/><text x="79.5769%" y="1375.50"></text></g><g><title>schedule_tail (6 samples, 1.44%)</title><rect x="79.5673%" y="1381" width="1.4423%" height="15" fill="rgb(221,225,9)" fg:x="331" fg:w="6"/><text x="79.8173%" y="1391.50"></text></g><g><title>finish_task_switch.isra.0 (6 samples, 1.44%)</title><rect x="79.5673%" y="1365" width="1.4423%" height="15" fill="rgb(224,227,45)" fg:x="331" fg:w="6"/><text x="79.8173%" y="1375.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 1.44%)</title><rect x="79.5673%" y="1349" width="1.4423%" height="15" fill="rgb(229,198,43)" fg:x="331" fg:w="6"/><text x="79.8173%" y="1359.50"></text></g><g><title>ctx_sched_in (4 samples, 0.96%)</title><rect x="80.0481%" y="1333" width="0.9615%" height="15" fill="rgb(206,209,35)" fg:x="333" fg:w="4"/><text x="80.2981%" y="1343.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (4 samples, 0.96%)</title><rect x="80.0481%" y="1317" width="0.9615%" height="15" fill="rgb(245,195,53)" fg:x="333" fg:w="4"/><text x="80.2981%" y="1327.50"></text></g><g><title>[[heap]] (9 samples, 2.16%)</title><rect x="79.3269%" y="1429" width="2.1635%" height="15" fill="rgb(240,92,26)" fg:x="330" fg:w="9"/><text x="79.5769%" y="1439.50">[..</text></g><g><title>[libc.so.6] (9 samples, 2.16%)</title><rect x="79.3269%" y="1413" width="2.1635%" height="15" fill="rgb(207,40,23)" fg:x="330" fg:w="9"/><text x="79.5769%" y="1423.50">[..</text></g><g><title>ret_from_fork (9 samples, 2.16%)</title><rect x="79.3269%" y="1397" width="2.1635%" height="15" fill="rgb(223,111,35)" fg:x="330" fg:w="9"/><text x="79.5769%" y="1407.50">r..</text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.48%)</title><rect x="81.0096%" y="1381" width="0.4808%" height="15" fill="rgb(229,147,28)" fg:x="337" fg:w="2"/><text x="81.2596%" y="1391.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.48%)</title><rect x="81.0096%" y="1365" width="0.4808%" height="15" fill="rgb(211,29,28)" fg:x="337" fg:w="2"/><text x="81.2596%" y="1375.50"></text></g><g><title>switch_fpu_return (2 samples, 0.48%)</title><rect x="81.0096%" y="1349" width="0.4808%" height="15" fill="rgb(228,72,33)" fg:x="337" fg:w="2"/><text x="81.2596%" y="1359.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.24%)</title><rect x="81.2500%" y="1333" width="0.2404%" height="15" fill="rgb(205,214,31)" fg:x="338" fg:w="1"/><text x="81.5000%" y="1343.50"></text></g><g><title>[anon] (1 samples, 0.24%)</title><rect x="81.4904%" y="1429" width="0.2404%" height="15" fill="rgb(224,111,15)" fg:x="339" fg:w="1"/><text x="81.7404%" y="1439.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (1 samples, 0.24%)</title><rect x="81.4904%" y="1413" width="0.2404%" height="15" fill="rgb(253,21,26)" fg:x="339" fg:w="1"/><text x="81.7404%" y="1423.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.24%)</title><rect x="81.4904%" y="1397" width="0.2404%" height="15" fill="rgb(245,139,43)" fg:x="339" fg:w="1"/><text x="81.7404%" y="1407.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.24%)</title><rect x="81.4904%" y="1381" width="0.2404%" height="15" fill="rgb(252,170,7)" fg:x="339" fg:w="1"/><text x="81.7404%" y="1391.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.24%)</title><rect x="81.4904%" y="1365" width="0.2404%" height="15" fill="rgb(231,118,14)" fg:x="339" fg:w="1"/><text x="81.7404%" y="1375.50"></text></g><g><title>mas_preallocate (1 samples, 0.24%)</title><rect x="81.9712%" y="1221" width="0.2404%" height="15" fill="rgb(238,83,0)" fg:x="341" fg:w="1"/><text x="82.2212%" y="1231.50"></text></g><g><title>mas_alloc_nodes (1 samples, 0.24%)</title><rect x="81.9712%" y="1205" width="0.2404%" height="15" fill="rgb(221,39,39)" fg:x="341" fg:w="1"/><text x="82.2212%" y="1215.50"></text></g><g><title>kmem_cache_alloc_bulk (1 samples, 0.24%)</title><rect x="81.9712%" y="1189" width="0.2404%" height="15" fill="rgb(222,119,46)" fg:x="341" fg:w="1"/><text x="82.2212%" y="1199.50"></text></g><g><title>slab_post_alloc_hook (1 samples, 0.24%)</title><rect x="81.9712%" y="1173" width="0.2404%" height="15" fill="rgb(222,165,49)" fg:x="341" fg:w="1"/><text x="82.2212%" y="1183.50"></text></g><g><title>do_mmap (2 samples, 0.48%)</title><rect x="81.9712%" y="1253" width="0.4808%" height="15" fill="rgb(219,113,52)" fg:x="341" fg:w="2"/><text x="82.2212%" y="1263.50"></text></g><g><title>mmap_region (2 samples, 0.48%)</title><rect x="81.9712%" y="1237" width="0.4808%" height="15" fill="rgb(214,7,15)" fg:x="341" fg:w="2"/><text x="82.2212%" y="1247.50"></text></g><g><title>mas_store_prealloc (1 samples, 0.24%)</title><rect x="82.2115%" y="1221" width="0.2404%" height="15" fill="rgb(235,32,4)" fg:x="342" fg:w="1"/><text x="82.4615%" y="1231.50"></text></g><g><title>mas_destroy (1 samples, 0.24%)</title><rect x="82.2115%" y="1205" width="0.2404%" height="15" fill="rgb(238,90,54)" fg:x="342" fg:w="1"/><text x="82.4615%" y="1215.50"></text></g><g><title>kmem_cache_free (1 samples, 0.24%)</title><rect x="82.2115%" y="1189" width="0.2404%" height="15" fill="rgb(213,208,19)" fg:x="342" fg:w="1"/><text x="82.4615%" y="1199.50"></text></g><g><title>__mmap (4 samples, 0.96%)</title><rect x="81.9712%" y="1317" width="0.9615%" height="15" fill="rgb(233,156,4)" fg:x="341" fg:w="4"/><text x="82.2212%" y="1327.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.96%)</title><rect x="81.9712%" y="1301" width="0.9615%" height="15" fill="rgb(207,194,5)" fg:x="341" fg:w="4"/><text x="82.2212%" y="1311.50"></text></g><g><title>do_syscall_64 (4 samples, 0.96%)</title><rect x="81.9712%" y="1285" width="0.9615%" height="15" fill="rgb(206,111,30)" fg:x="341" fg:w="4"/><text x="82.2212%" y="1295.50"></text></g><g><title>vm_mmap_pgoff (4 samples, 0.96%)</title><rect x="81.9712%" y="1269" width="0.9615%" height="15" fill="rgb(243,70,54)" fg:x="341" fg:w="4"/><text x="82.2212%" y="1279.50"></text></g><g><title>down_write_killable (2 samples, 0.48%)</title><rect x="82.4519%" y="1253" width="0.4808%" height="15" fill="rgb(242,28,8)" fg:x="343" fg:w="2"/><text x="82.7019%" y="1263.50"></text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.24%)</title><rect x="82.6923%" y="1237" width="0.2404%" height="15" fill="rgb(219,106,18)" fg:x="344" fg:w="1"/><text x="82.9423%" y="1247.50"></text></g><g><title>rwsem_spin_on_owner (1 samples, 0.24%)</title><rect x="82.6923%" y="1221" width="0.2404%" height="15" fill="rgb(244,222,10)" fg:x="344" fg:w="1"/><text x="82.9423%" y="1231.50"></text></g><g><title>down_write_killable (1 samples, 0.24%)</title><rect x="82.9327%" y="1237" width="0.2404%" height="15" fill="rgb(236,179,52)" fg:x="345" fg:w="1"/><text x="83.1827%" y="1247.50"></text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.24%)</title><rect x="82.9327%" y="1221" width="0.2404%" height="15" fill="rgb(213,23,39)" fg:x="345" fg:w="1"/><text x="83.1827%" y="1231.50"></text></g><g><title>rwsem_spin_on_owner (1 samples, 0.24%)</title><rect x="82.9327%" y="1205" width="0.2404%" height="15" fill="rgb(238,48,10)" fg:x="345" fg:w="1"/><text x="83.1827%" y="1215.50"></text></g><g><title>[libc.so.6] (7 samples, 1.68%)</title><rect x="81.7308%" y="1429" width="1.6827%" height="15" fill="rgb(251,196,23)" fg:x="340" fg:w="7"/><text x="81.9808%" y="1439.50"></text></g><g><title>[libc.so.6] (7 samples, 1.68%)</title><rect x="81.7308%" y="1413" width="1.6827%" height="15" fill="rgb(250,152,24)" fg:x="340" fg:w="7"/><text x="81.9808%" y="1423.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (6 samples, 1.44%)</title><rect x="81.9712%" y="1397" width="1.4423%" height="15" fill="rgb(209,150,17)" fg:x="341" fg:w="6"/><text x="82.2212%" y="1407.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (6 samples, 1.44%)</title><rect x="81.9712%" y="1381" width="1.4423%" height="15" fill="rgb(234,202,34)" fg:x="341" fg:w="6"/><text x="82.2212%" y="1391.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (6 samples, 1.44%)</title><rect x="81.9712%" y="1365" width="1.4423%" height="15" fill="rgb(253,148,53)" fg:x="341" fg:w="6"/><text x="82.2212%" y="1375.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (6 samples, 1.44%)</title><rect x="81.9712%" y="1349" width="1.4423%" height="15" fill="rgb(218,129,16)" fg:x="341" fg:w="6"/><text x="82.2212%" y="1359.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (6 samples, 1.44%)</title><rect x="81.9712%" y="1333" width="1.4423%" height="15" fill="rgb(216,85,19)" fg:x="341" fg:w="6"/><text x="82.2212%" y="1343.50"></text></g><g><title>__mprotect (2 samples, 0.48%)</title><rect x="82.9327%" y="1317" width="0.4808%" height="15" fill="rgb(235,228,7)" fg:x="345" fg:w="2"/><text x="83.1827%" y="1327.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.48%)</title><rect x="82.9327%" y="1301" width="0.4808%" height="15" fill="rgb(245,175,0)" fg:x="345" fg:w="2"/><text x="83.1827%" y="1311.50"></text></g><g><title>do_syscall_64 (2 samples, 0.48%)</title><rect x="82.9327%" y="1285" width="0.4808%" height="15" fill="rgb(208,168,36)" fg:x="345" fg:w="2"/><text x="83.1827%" y="1295.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.48%)</title><rect x="82.9327%" y="1269" width="0.4808%" height="15" fill="rgb(246,171,24)" fg:x="345" fg:w="2"/><text x="83.1827%" y="1279.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.48%)</title><rect x="82.9327%" y="1253" width="0.4808%" height="15" fill="rgb(215,142,24)" fg:x="345" fg:w="2"/><text x="83.1827%" y="1263.50"></text></g><g><title>mprotect_fixup (1 samples, 0.24%)</title><rect x="83.1731%" y="1237" width="0.2404%" height="15" fill="rgb(250,187,7)" fg:x="346" fg:w="1"/><text x="83.4231%" y="1247.50"></text></g><g><title>__split_vma (1 samples, 0.24%)</title><rect x="83.1731%" y="1221" width="0.2404%" height="15" fill="rgb(228,66,33)" fg:x="346" fg:w="1"/><text x="83.4231%" y="1231.50"></text></g><g><title>mas_preallocate (1 samples, 0.24%)</title><rect x="83.1731%" y="1205" width="0.2404%" height="15" fill="rgb(234,215,21)" fg:x="346" fg:w="1"/><text x="83.4231%" y="1215.50"></text></g><g><title>mas_alloc_nodes (1 samples, 0.24%)</title><rect x="83.1731%" y="1189" width="0.2404%" height="15" fill="rgb(222,191,20)" fg:x="346" fg:w="1"/><text x="83.4231%" y="1199.50"></text></g><g><title>kmem_cache_alloc_bulk (1 samples, 0.24%)</title><rect x="83.1731%" y="1173" width="0.2404%" height="15" fill="rgb(245,79,54)" fg:x="346" fg:w="1"/><text x="83.4231%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.24%)</title><rect x="83.4135%" y="1429" width="0.2404%" height="15" fill="rgb(240,10,37)" fg:x="347" fg:w="1"/><text x="83.6635%" y="1439.50"></text></g><g><title>[libc.so.6] (1 samples, 0.24%)</title><rect x="83.4135%" y="1413" width="0.2404%" height="15" fill="rgb(214,192,32)" fg:x="347" fg:w="1"/><text x="83.6635%" y="1423.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.24%)</title><rect x="83.6538%" y="1429" width="0.2404%" height="15" fill="rgb(209,36,54)" fg:x="348" fg:w="1"/><text x="83.9038%" y="1439.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (1 samples, 0.24%)</title><rect x="83.8942%" y="1093" width="0.2404%" height="15" fill="rgb(220,10,11)" fg:x="349" fg:w="1"/><text x="84.1442%" y="1103.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (1 samples, 0.24%)</title><rect x="83.8942%" y="1077" width="0.2404%" height="15" fill="rgb(221,106,17)" fg:x="349" fg:w="1"/><text x="84.1442%" y="1087.50"></text></g><g><title>std::sys::unix::thread::Thread::join (1 samples, 0.24%)</title><rect x="83.8942%" y="1061" width="0.2404%" height="15" fill="rgb(251,142,44)" fg:x="349" fg:w="1"/><text x="84.1442%" y="1071.50"></text></g><g><title>[libc.so.6] (1 samples, 0.24%)</title><rect x="83.8942%" y="1045" width="0.2404%" height="15" fill="rgb(238,13,15)" fg:x="349" fg:w="1"/><text x="84.1442%" y="1055.50"></text></g><g><title>[libc.so.6] (1 samples, 0.24%)</title><rect x="83.8942%" y="1029" width="0.2404%" height="15" fill="rgb(208,107,27)" fg:x="349" fg:w="1"/><text x="84.1442%" y="1039.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.24%)</title><rect x="83.8942%" y="1013" width="0.2404%" height="15" fill="rgb(205,136,37)" fg:x="349" fg:w="1"/><text x="84.1442%" y="1023.50"></text></g><g><title>do_syscall_64 (1 samples, 0.24%)</title><rect x="83.8942%" y="997" width="0.2404%" height="15" fill="rgb(250,205,27)" fg:x="349" fg:w="1"/><text x="84.1442%" y="1007.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.24%)</title><rect x="83.8942%" y="981" width="0.2404%" height="15" fill="rgb(210,80,43)" fg:x="349" fg:w="1"/><text x="84.1442%" y="991.50"></text></g><g><title>futex_wait (1 samples, 0.24%)</title><rect x="83.8942%" y="965" width="0.2404%" height="15" fill="rgb(247,160,36)" fg:x="349" fg:w="1"/><text x="84.1442%" y="975.50"></text></g><g><title>schedule (1 samples, 0.24%)</title><rect x="83.8942%" y="949" width="0.2404%" height="15" fill="rgb(234,13,49)" fg:x="349" fg:w="1"/><text x="84.1442%" y="959.50"></text></g><g><title>__schedule (1 samples, 0.24%)</title><rect x="83.8942%" y="933" width="0.2404%" height="15" fill="rgb(234,122,0)" fg:x="349" fg:w="1"/><text x="84.1442%" y="943.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.96%)</title><rect x="84.1346%" y="693" width="0.9615%" height="15" fill="rgb(207,146,38)" fg:x="350" fg:w="4"/><text x="84.3846%" y="703.50"></text></g><g><title>ctx_sched_in (4 samples, 0.96%)</title><rect x="84.1346%" y="677" width="0.9615%" height="15" fill="rgb(207,177,25)" fg:x="350" fg:w="4"/><text x="84.3846%" y="687.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (4 samples, 0.96%)</title><rect x="84.1346%" y="661" width="0.9615%" height="15" fill="rgb(211,178,42)" fg:x="350" fg:w="4"/><text x="84.3846%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::blocking::pool::BlockingPool&gt; (6 samples, 1.44%)</title><rect x="83.8942%" y="1141" width="1.4423%" height="15" fill="rgb(230,69,54)" fg:x="349" fg:w="6"/><text x="84.1442%" y="1151.50"></text></g><g><title>&lt;tokio::runtime::blocking::pool::BlockingPool as core::ops::drop::Drop&gt;::drop (6 samples, 1.44%)</title><rect x="83.8942%" y="1125" width="1.4423%" height="15" fill="rgb(214,135,41)" fg:x="349" fg:w="6"/><text x="84.1442%" y="1135.50"></text></g><g><title>tokio::runtime::blocking::pool::BlockingPool::shutdown (6 samples, 1.44%)</title><rect x="83.8942%" y="1109" width="1.4423%" height="15" fill="rgb(237,67,25)" fg:x="349" fg:w="6"/><text x="84.1442%" y="1119.50"></text></g><g><title>tokio::runtime::blocking::shutdown::Receiver::wait (5 samples, 1.20%)</title><rect x="84.1346%" y="1093" width="1.2019%" height="15" fill="rgb(222,189,50)" fg:x="350" fg:w="5"/><text x="84.3846%" y="1103.50"></text></g><g><title>tokio::runtime::context::BlockingRegionGuard::block_on (5 samples, 1.20%)</title><rect x="84.1346%" y="1077" width="1.2019%" height="15" fill="rgb(245,148,34)" fg:x="350" fg:w="5"/><text x="84.3846%" y="1087.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (5 samples, 1.20%)</title><rect x="84.1346%" y="1061" width="1.2019%" height="15" fill="rgb(222,29,6)" fg:x="350" fg:w="5"/><text x="84.3846%" y="1071.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park (5 samples, 1.20%)</title><rect x="84.1346%" y="1045" width="1.2019%" height="15" fill="rgb(221,189,43)" fg:x="350" fg:w="5"/><text x="84.3846%" y="1055.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::with_current (5 samples, 1.20%)</title><rect x="84.1346%" y="1029" width="1.2019%" height="15" fill="rgb(207,36,27)" fg:x="350" fg:w="5"/><text x="84.3846%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 1.20%)</title><rect x="84.1346%" y="1013" width="1.2019%" height="15" fill="rgb(217,90,24)" fg:x="350" fg:w="5"/><text x="84.3846%" y="1023.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::with_current::{{closure}} (5 samples, 1.20%)</title><rect x="84.1346%" y="997" width="1.2019%" height="15" fill="rgb(224,66,35)" fg:x="350" fg:w="5"/><text x="84.3846%" y="1007.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park::{{closure}} (5 samples, 1.20%)</title><rect x="84.1346%" y="981" width="1.2019%" height="15" fill="rgb(221,13,50)" fg:x="350" fg:w="5"/><text x="84.3846%" y="991.50"></text></g><g><title>tokio::runtime::park::Inner::park (5 samples, 1.20%)</title><rect x="84.1346%" y="965" width="1.2019%" height="15" fill="rgb(236,68,49)" fg:x="350" fg:w="5"/><text x="84.3846%" y="975.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (5 samples, 1.20%)</title><rect x="84.1346%" y="949" width="1.2019%" height="15" fill="rgb(229,146,28)" fg:x="350" fg:w="5"/><text x="84.3846%" y="959.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (5 samples, 1.20%)</title><rect x="84.1346%" y="933" width="1.2019%" height="15" fill="rgb(225,31,38)" fg:x="350" fg:w="5"/><text x="84.3846%" y="943.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (5 samples, 1.20%)</title><rect x="84.1346%" y="917" width="1.2019%" height="15" fill="rgb(250,208,3)" fg:x="350" fg:w="5"/><text x="84.3846%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::park (5 samples, 1.20%)</title><rect x="84.1346%" y="901" width="1.2019%" height="15" fill="rgb(246,54,23)" fg:x="350" fg:w="5"/><text x="84.3846%" y="911.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (5 samples, 1.20%)</title><rect x="84.1346%" y="885" width="1.2019%" height="15" fill="rgb(243,76,11)" fg:x="350" fg:w="5"/><text x="84.3846%" y="895.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (5 samples, 1.20%)</title><rect x="84.1346%" y="869" width="1.2019%" height="15" fill="rgb(245,21,50)" fg:x="350" fg:w="5"/><text x="84.3846%" y="879.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (5 samples, 1.20%)</title><rect x="84.1346%" y="853" width="1.2019%" height="15" fill="rgb(228,9,43)" fg:x="350" fg:w="5"/><text x="84.3846%" y="863.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (5 samples, 1.20%)</title><rect x="84.1346%" y="837" width="1.2019%" height="15" fill="rgb(208,100,47)" fg:x="350" fg:w="5"/><text x="84.3846%" y="847.50"></text></g><g><title>syscall (5 samples, 1.20%)</title><rect x="84.1346%" y="821" width="1.2019%" height="15" fill="rgb(232,26,8)" fg:x="350" fg:w="5"/><text x="84.3846%" y="831.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 1.20%)</title><rect x="84.1346%" y="805" width="1.2019%" height="15" fill="rgb(216,166,38)" fg:x="350" fg:w="5"/><text x="84.3846%" y="815.50"></text></g><g><title>do_syscall_64 (5 samples, 1.20%)</title><rect x="84.1346%" y="789" width="1.2019%" height="15" fill="rgb(251,202,51)" fg:x="350" fg:w="5"/><text x="84.3846%" y="799.50"></text></g><g><title>__x64_sys_futex (5 samples, 1.20%)</title><rect x="84.1346%" y="773" width="1.2019%" height="15" fill="rgb(254,216,34)" fg:x="350" fg:w="5"/><text x="84.3846%" y="783.50"></text></g><g><title>futex_wait (5 samples, 1.20%)</title><rect x="84.1346%" y="757" width="1.2019%" height="15" fill="rgb(251,32,27)" fg:x="350" fg:w="5"/><text x="84.3846%" y="767.50"></text></g><g><title>schedule (5 samples, 1.20%)</title><rect x="84.1346%" y="741" width="1.2019%" height="15" fill="rgb(208,127,28)" fg:x="350" fg:w="5"/><text x="84.3846%" y="751.50"></text></g><g><title>__schedule (5 samples, 1.20%)</title><rect x="84.1346%" y="725" width="1.2019%" height="15" fill="rgb(224,137,22)" fg:x="350" fg:w="5"/><text x="84.3846%" y="735.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 1.20%)</title><rect x="84.1346%" y="709" width="1.2019%" height="15" fill="rgb(254,70,32)" fg:x="350" fg:w="5"/><text x="84.3846%" y="719.50"></text></g><g><title>asm_sysvec_call_function (1 samples, 0.24%)</title><rect x="85.0962%" y="693" width="0.2404%" height="15" fill="rgb(229,75,37)" fg:x="354" fg:w="1"/><text x="85.3462%" y="703.50"></text></g><g><title>sysvec_call_function (1 samples, 0.24%)</title><rect x="85.0962%" y="677" width="0.2404%" height="15" fill="rgb(252,64,23)" fg:x="354" fg:w="1"/><text x="85.3462%" y="687.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.24%)</title><rect x="85.0962%" y="661" width="0.2404%" height="15" fill="rgb(232,162,48)" fg:x="354" fg:w="1"/><text x="85.3462%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::runtime::Runtime&gt; (7 samples, 1.68%)</title><rect x="83.8942%" y="1157" width="1.6827%" height="15" fill="rgb(246,160,12)" fg:x="349" fg:w="7"/><text x="84.1442%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::shutdown (1 samples, 0.24%)</title><rect x="85.3365%" y="1141" width="0.2404%" height="15" fill="rgb(247,166,0)" fg:x="355" fg:w="1"/><text x="85.5865%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::shutdown (1 samples, 0.24%)</title><rect x="85.3365%" y="1125" width="0.2404%" height="15" fill="rgb(249,219,21)" fg:x="355" fg:w="1"/><text x="85.5865%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::close (1 samples, 0.24%)</title><rect x="85.3365%" y="1109" width="0.2404%" height="15" fill="rgb(205,209,3)" fg:x="355" fg:w="1"/><text x="85.5865%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_all (1 samples, 0.24%)</title><rect x="85.3365%" y="1093" width="0.2404%" height="15" fill="rgb(243,44,1)" fg:x="355" fg:w="1"/><text x="85.5865%" y="1103.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.24%)</title><rect x="85.3365%" y="1077" width="0.2404%" height="15" fill="rgb(206,159,16)" fg:x="355" fg:w="1"/><text x="85.5865%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1 samples, 0.24%)</title><rect x="85.3365%" y="1061" width="0.2404%" height="15" fill="rgb(244,77,30)" fg:x="355" fg:w="1"/><text x="85.5865%" y="1071.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1 samples, 0.24%)</title><rect x="85.3365%" y="1045" width="0.2404%" height="15" fill="rgb(218,69,12)" fg:x="355" fg:w="1"/><text x="85.5865%" y="1055.50"></text></g><g><title>syscall (1 samples, 0.24%)</title><rect x="85.3365%" y="1029" width="0.2404%" height="15" fill="rgb(212,87,7)" fg:x="355" fg:w="1"/><text x="85.5865%" y="1039.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.24%)</title><rect x="85.3365%" y="1013" width="0.2404%" height="15" fill="rgb(245,114,25)" fg:x="355" fg:w="1"/><text x="85.5865%" y="1023.50"></text></g><g><title>do_syscall_64 (1 samples, 0.24%)</title><rect x="85.3365%" y="997" width="0.2404%" height="15" fill="rgb(210,61,42)" fg:x="355" fg:w="1"/><text x="85.5865%" y="1007.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.24%)</title><rect x="85.3365%" y="981" width="0.2404%" height="15" fill="rgb(211,52,33)" fg:x="355" fg:w="1"/><text x="85.5865%" y="991.50"></text></g><g><title>futex_wake (1 samples, 0.24%)</title><rect x="85.3365%" y="965" width="0.2404%" height="15" fill="rgb(234,58,33)" fg:x="355" fg:w="1"/><text x="85.5865%" y="975.50"></text></g><g><title>wake_up_q (1 samples, 0.24%)</title><rect x="85.3365%" y="949" width="0.2404%" height="15" fill="rgb(220,115,36)" fg:x="355" fg:w="1"/><text x="85.5865%" y="959.50"></text></g><g><title>try_to_wake_up (1 samples, 0.24%)</title><rect x="85.3365%" y="933" width="0.2404%" height="15" fill="rgb(243,153,54)" fg:x="355" fg:w="1"/><text x="85.5865%" y="943.50"></text></g><g><title>raw_spin_rq_lock_nested.constprop.0 (1 samples, 0.24%)</title><rect x="85.3365%" y="917" width="0.2404%" height="15" fill="rgb(251,47,18)" fg:x="355" fg:w="1"/><text x="85.5865%" y="927.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.24%)</title><rect x="85.3365%" y="901" width="0.2404%" height="15" fill="rgb(242,102,42)" fg:x="355" fg:w="1"/><text x="85.5865%" y="911.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.24%)</title><rect x="85.3365%" y="885" width="0.2404%" height="15" fill="rgb(234,31,38)" fg:x="355" fg:w="1"/><text x="85.5865%" y="895.50"></text></g><g><title>clear_huge_page (1 samples, 0.24%)</title><rect x="85.5769%" y="853" width="0.2404%" height="15" fill="rgb(221,117,51)" fg:x="356" fg:w="1"/><text x="85.8269%" y="863.50"></text></g><g><title>clear_page_rep (1 samples, 0.24%)</title><rect x="85.5769%" y="837" width="0.2404%" height="15" fill="rgb(212,20,18)" fg:x="356" fg:w="1"/><text x="85.8269%" y="847.50"></text></g><g><title>tokio::runtime::builder::Builder::build (2 samples, 0.48%)</title><rect x="85.5769%" y="1157" width="0.4808%" height="15" fill="rgb(245,133,36)" fg:x="356" fg:w="2"/><text x="85.8269%" y="1167.50"></text></g><g><title>tokio::runtime::builder::Builder::build_threaded_runtime (2 samples, 0.48%)</title><rect x="85.5769%" y="1141" width="0.4808%" height="15" fill="rgb(212,6,19)" fg:x="356" fg:w="2"/><text x="85.8269%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch (2 samples, 0.48%)</title><rect x="85.5769%" y="1125" width="0.4808%" height="15" fill="rgb(218,1,36)" fg:x="356" fg:w="2"/><text x="85.8269%" y="1135.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (2 samples, 0.48%)</title><rect x="85.5769%" y="1109" width="0.4808%" height="15" fill="rgb(246,84,54)" fg:x="356" fg:w="2"/><text x="85.8269%" y="1119.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (2 samples, 0.48%)</title><rect x="85.5769%" y="1093" width="0.4808%" height="15" fill="rgb(242,110,6)" fg:x="356" fg:w="2"/><text x="85.8269%" y="1103.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (2 samples, 0.48%)</title><rect x="85.5769%" y="1077" width="0.4808%" height="15" fill="rgb(214,47,5)" fg:x="356" fg:w="2"/><text x="85.8269%" y="1087.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (2 samples, 0.48%)</title><rect x="85.5769%" y="1061" width="0.4808%" height="15" fill="rgb(218,159,25)" fg:x="356" fg:w="2"/><text x="85.8269%" y="1071.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (2 samples, 0.48%)</title><rect x="85.5769%" y="1045" width="0.4808%" height="15" fill="rgb(215,211,28)" fg:x="356" fg:w="2"/><text x="85.8269%" y="1055.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread (2 samples, 0.48%)</title><rect x="85.5769%" y="1029" width="0.4808%" height="15" fill="rgb(238,59,32)" fg:x="356" fg:w="2"/><text x="85.8269%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn (2 samples, 0.48%)</title><rect x="85.5769%" y="1013" width="0.4808%" height="15" fill="rgb(226,82,3)" fg:x="356" fg:w="2"/><text x="85.8269%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (2 samples, 0.48%)</title><rect x="85.5769%" y="997" width="0.4808%" height="15" fill="rgb(240,164,32)" fg:x="356" fg:w="2"/><text x="85.8269%" y="1007.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (2 samples, 0.48%)</title><rect x="85.5769%" y="981" width="0.4808%" height="15" fill="rgb(232,46,7)" fg:x="356" fg:w="2"/><text x="85.8269%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new (2 samples, 0.48%)</title><rect x="85.5769%" y="965" width="0.4808%" height="15" fill="rgb(229,129,53)" fg:x="356" fg:w="2"/><text x="85.8269%" y="975.50"></text></g><g><title>pthread_create (2 samples, 0.48%)</title><rect x="85.5769%" y="949" width="0.4808%" height="15" fill="rgb(234,188,29)" fg:x="356" fg:w="2"/><text x="85.8269%" y="959.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.48%)</title><rect x="85.5769%" y="933" width="0.4808%" height="15" fill="rgb(246,141,4)" fg:x="356" fg:w="2"/><text x="85.8269%" y="943.50"></text></g><g><title>exc_page_fault (2 samples, 0.48%)</title><rect x="85.5769%" y="917" width="0.4808%" height="15" fill="rgb(229,23,39)" fg:x="356" fg:w="2"/><text x="85.8269%" y="927.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.48%)</title><rect x="85.5769%" y="901" width="0.4808%" height="15" fill="rgb(206,12,3)" fg:x="356" fg:w="2"/><text x="85.8269%" y="911.50"></text></g><g><title>handle_mm_fault (2 samples, 0.48%)</title><rect x="85.5769%" y="885" width="0.4808%" height="15" fill="rgb(252,226,20)" fg:x="356" fg:w="2"/><text x="85.8269%" y="895.50"></text></g><g><title>do_huge_pmd_anonymous_page (2 samples, 0.48%)</title><rect x="85.5769%" y="869" width="0.4808%" height="15" fill="rgb(216,123,35)" fg:x="356" fg:w="2"/><text x="85.8269%" y="879.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.24%)</title><rect x="85.8173%" y="853" width="0.2404%" height="15" fill="rgb(212,68,40)" fg:x="357" fg:w="1"/><text x="86.0673%" y="863.50"></text></g><g><title>__folio_alloc (1 samples, 0.24%)</title><rect x="85.8173%" y="837" width="0.2404%" height="15" fill="rgb(254,125,32)" fg:x="357" fg:w="1"/><text x="86.0673%" y="847.50"></text></g><g><title>__alloc_pages (1 samples, 0.24%)</title><rect x="85.8173%" y="821" width="0.2404%" height="15" fill="rgb(253,97,22)" fg:x="357" fg:w="1"/><text x="86.0673%" y="831.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.24%)</title><rect x="85.8173%" y="805" width="0.2404%" height="15" fill="rgb(241,101,14)" fg:x="357" fg:w="1"/><text x="86.0673%" y="815.50"></text></g><g><title>clear_page_rep (1 samples, 0.24%)</title><rect x="85.8173%" y="789" width="0.2404%" height="15" fill="rgb(238,103,29)" fg:x="357" fg:w="1"/><text x="86.0673%" y="799.50"></text></g><g><title>&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.24%)</title><rect x="86.0577%" y="1013" width="0.2404%" height="15" fill="rgb(233,195,47)" fg:x="358" fg:w="1"/><text x="86.3077%" y="1023.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (1 samples, 0.24%)</title><rect x="86.0577%" y="997" width="0.2404%" height="15" fill="rgb(246,218,30)" fg:x="358" fg:w="1"/><text x="86.3077%" y="1007.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (1 samples, 0.24%)</title><rect x="86.0577%" y="981" width="0.2404%" height="15" fill="rgb(219,145,47)" fg:x="358" fg:w="1"/><text x="86.3077%" y="991.50"></text></g><g><title>tokio::runtime::coop::budget (1 samples, 0.24%)</title><rect x="86.0577%" y="965" width="0.2404%" height="15" fill="rgb(243,12,26)" fg:x="358" fg:w="1"/><text x="86.3077%" y="975.50"></text></g><g><title>tokio::runtime::coop::with_budget (1 samples, 0.24%)</title><rect x="86.0577%" y="949" width="0.2404%" height="15" fill="rgb(214,87,16)" fg:x="358" fg:w="1"/><text x="86.3077%" y="959.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.24%)</title><rect x="86.0577%" y="933" width="0.2404%" height="15" fill="rgb(208,99,42)" fg:x="358" fg:w="1"/><text x="86.3077%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.24%)</title><rect x="86.0577%" y="917" width="0.2404%" height="15" fill="rgb(253,99,2)" fg:x="358" fg:w="1"/><text x="86.3077%" y="927.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.24%)</title><rect x="86.0577%" y="901" width="0.2404%" height="15" fill="rgb(220,168,23)" fg:x="358" fg:w="1"/><text x="86.3077%" y="911.50"></text></g><g><title>std::sys::common::thread_local::fast_local::fast::Key&lt;T&gt;::get (1 samples, 0.24%)</title><rect x="86.0577%" y="885" width="0.2404%" height="15" fill="rgb(242,38,24)" fg:x="358" fg:w="1"/><text x="86.3077%" y="895.50"></text></g><g><title>alloc_empty_file (1 samples, 0.24%)</title><rect x="86.2981%" y="549" width="0.2404%" height="15" fill="rgb(225,182,9)" fg:x="359" fg:w="1"/><text x="86.5481%" y="559.50"></text></g><g><title>security_file_alloc (1 samples, 0.24%)</title><rect x="86.2981%" y="533" width="0.2404%" height="15" fill="rgb(243,178,37)" fg:x="359" fg:w="1"/><text x="86.5481%" y="543.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.24%)</title><rect x="86.2981%" y="517" width="0.2404%" height="15" fill="rgb(232,139,19)" fg:x="359" fg:w="1"/><text x="86.5481%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.48%)</title><rect x="86.2981%" y="949" width="0.4808%" height="15" fill="rgb(225,201,24)" fg:x="359" fg:w="2"/><text x="86.5481%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.48%)</title><rect x="86.2981%" y="933" width="0.4808%" height="15" fill="rgb(221,47,46)" fg:x="359" fg:w="2"/><text x="86.5481%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.48%)</title><rect x="86.2981%" y="917" width="0.4808%" height="15" fill="rgb(249,23,13)" fg:x="359" fg:w="2"/><text x="86.5481%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (2 samples, 0.48%)</title><rect x="86.2981%" y="901" width="0.4808%" height="15" fill="rgb(219,9,5)" fg:x="359" fg:w="2"/><text x="86.5481%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.48%)</title><rect x="86.2981%" y="885" width="0.4808%" height="15" fill="rgb(254,171,16)" fg:x="359" fg:w="2"/><text x="86.5481%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (2 samples, 0.48%)</title><rect x="86.2981%" y="869" width="0.4808%" height="15" fill="rgb(230,171,20)" fg:x="359" fg:w="2"/><text x="86.5481%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.48%)</title><rect x="86.2981%" y="853" width="0.4808%" height="15" fill="rgb(210,71,41)" fg:x="359" fg:w="2"/><text x="86.5481%" y="863.50"></text></g><g><title>zmem::process::Processes::update::{{closure}}::{{closure}} (2 samples, 0.48%)</title><rect x="86.2981%" y="837" width="0.4808%" height="15" fill="rgb(206,173,20)" fg:x="359" fg:w="2"/><text x="86.5481%" y="847.50"></text></g><g><title>zmem::utils::get_cmd (2 samples, 0.48%)</title><rect x="86.2981%" y="821" width="0.4808%" height="15" fill="rgb(233,88,34)" fg:x="359" fg:w="2"/><text x="86.5481%" y="831.50"></text></g><g><title>std::fs::File::open (2 samples, 0.48%)</title><rect x="86.2981%" y="805" width="0.4808%" height="15" fill="rgb(223,209,46)" fg:x="359" fg:w="2"/><text x="86.5481%" y="815.50"></text></g><g><title>std::fs::OpenOptions::open (2 samples, 0.48%)</title><rect x="86.2981%" y="789" width="0.4808%" height="15" fill="rgb(250,43,18)" fg:x="359" fg:w="2"/><text x="86.5481%" y="799.50"></text></g><g><title>std::fs::OpenOptions::_open (2 samples, 0.48%)</title><rect x="86.2981%" y="773" width="0.4808%" height="15" fill="rgb(208,13,10)" fg:x="359" fg:w="2"/><text x="86.5481%" y="783.50"></text></g><g><title>std::sys::unix::fs::File::open (2 samples, 0.48%)</title><rect x="86.2981%" y="757" width="0.4808%" height="15" fill="rgb(212,200,36)" fg:x="359" fg:w="2"/><text x="86.5481%" y="767.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (2 samples, 0.48%)</title><rect x="86.2981%" y="741" width="0.4808%" height="15" fill="rgb(225,90,30)" fg:x="359" fg:w="2"/><text x="86.5481%" y="751.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.48%)</title><rect x="86.2981%" y="725" width="0.4808%" height="15" fill="rgb(236,182,39)" fg:x="359" fg:w="2"/><text x="86.5481%" y="735.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (2 samples, 0.48%)</title><rect x="86.2981%" y="709" width="0.4808%" height="15" fill="rgb(212,144,35)" fg:x="359" fg:w="2"/><text x="86.5481%" y="719.50"></text></g><g><title>std::sys::unix::fs::File::open_c (2 samples, 0.48%)</title><rect x="86.2981%" y="693" width="0.4808%" height="15" fill="rgb(228,63,44)" fg:x="359" fg:w="2"/><text x="86.5481%" y="703.50"></text></g><g><title>std::sys::unix::cvt_r (2 samples, 0.48%)</title><rect x="86.2981%" y="677" width="0.4808%" height="15" fill="rgb(228,109,6)" fg:x="359" fg:w="2"/><text x="86.5481%" y="687.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (2 samples, 0.48%)</title><rect x="86.2981%" y="661" width="0.4808%" height="15" fill="rgb(238,117,24)" fg:x="359" fg:w="2"/><text x="86.5481%" y="671.50"></text></g><g><title>open64 (2 samples, 0.48%)</title><rect x="86.2981%" y="645" width="0.4808%" height="15" fill="rgb(242,26,26)" fg:x="359" fg:w="2"/><text x="86.5481%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.48%)</title><rect x="86.2981%" y="629" width="0.4808%" height="15" fill="rgb(221,92,48)" fg:x="359" fg:w="2"/><text x="86.5481%" y="639.50"></text></g><g><title>do_syscall_64 (2 samples, 0.48%)</title><rect x="86.2981%" y="613" width="0.4808%" height="15" fill="rgb(209,209,32)" fg:x="359" fg:w="2"/><text x="86.5481%" y="623.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.48%)</title><rect x="86.2981%" y="597" width="0.4808%" height="15" fill="rgb(221,70,22)" fg:x="359" fg:w="2"/><text x="86.5481%" y="607.50"></text></g><g><title>do_filp_open (2 samples, 0.48%)</title><rect x="86.2981%" y="581" width="0.4808%" height="15" fill="rgb(248,145,5)" fg:x="359" fg:w="2"/><text x="86.5481%" y="591.50"></text></g><g><title>path_openat (2 samples, 0.48%)</title><rect x="86.2981%" y="565" width="0.4808%" height="15" fill="rgb(226,116,26)" fg:x="359" fg:w="2"/><text x="86.5481%" y="575.50"></text></g><g><title>lookup_fast (1 samples, 0.24%)</title><rect x="86.5385%" y="549" width="0.2404%" height="15" fill="rgb(244,5,17)" fg:x="360" fg:w="1"/><text x="86.7885%" y="559.50"></text></g><g><title>__d_lookup_rcu (1 samples, 0.24%)</title><rect x="86.5385%" y="533" width="0.2404%" height="15" fill="rgb(252,159,33)" fg:x="360" fg:w="1"/><text x="86.7885%" y="543.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.24%)</title><rect x="86.7788%" y="901" width="0.2404%" height="15" fill="rgb(206,71,0)" fg:x="361" fg:w="1"/><text x="87.0288%" y="911.50"></text></g><g><title>&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.24%)</title><rect x="86.7788%" y="885" width="0.2404%" height="15" fill="rgb(233,118,54)" fg:x="361" fg:w="1"/><text x="87.0288%" y="895.50"></text></g><g><title>readdir64 (1 samples, 0.24%)</title><rect x="86.7788%" y="869" width="0.2404%" height="15" fill="rgb(234,83,48)" fg:x="361" fg:w="1"/><text x="87.0288%" y="879.50"></text></g><g><title>getdents64 (1 samples, 0.24%)</title><rect x="86.7788%" y="853" width="0.2404%" height="15" fill="rgb(228,3,54)" fg:x="361" fg:w="1"/><text x="87.0288%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.24%)</title><rect x="86.7788%" y="837" width="0.2404%" height="15" fill="rgb(226,155,13)" fg:x="361" fg:w="1"/><text x="87.0288%" y="847.50"></text></g><g><title>do_syscall_64 (1 samples, 0.24%)</title><rect x="86.7788%" y="821" width="0.2404%" height="15" fill="rgb(241,28,37)" fg:x="361" fg:w="1"/><text x="87.0288%" y="831.50"></text></g><g><title>__x64_sys_getdents64 (1 samples, 0.24%)</title><rect x="86.7788%" y="805" width="0.2404%" height="15" fill="rgb(233,93,10)" fg:x="361" fg:w="1"/><text x="87.0288%" y="815.50"></text></g><g><title>iterate_dir (1 samples, 0.24%)</title><rect x="86.7788%" y="789" width="0.2404%" height="15" fill="rgb(225,113,19)" fg:x="361" fg:w="1"/><text x="87.0288%" y="799.50"></text></g><g><title>proc_pid_readdir (1 samples, 0.24%)</title><rect x="86.7788%" y="773" width="0.2404%" height="15" fill="rgb(241,2,18)" fg:x="361" fg:w="1"/><text x="87.0288%" y="783.50"></text></g><g><title>d_hash_and_lookup (1 samples, 0.24%)</title><rect x="86.7788%" y="757" width="0.2404%" height="15" fill="rgb(228,207,21)" fg:x="361" fg:w="1"/><text x="87.0288%" y="767.50"></text></g><g><title>__d_lookup (1 samples, 0.24%)</title><rect x="86.7788%" y="741" width="0.2404%" height="15" fill="rgb(213,211,35)" fg:x="361" fg:w="1"/><text x="87.0288%" y="751.50"></text></g><g><title>tokio::task::spawn::spawn (1 samples, 0.24%)</title><rect x="87.0192%" y="853" width="0.2404%" height="15" fill="rgb(209,83,10)" fg:x="362" fg:w="1"/><text x="87.2692%" y="863.50"></text></g><g><title>tokio::task::spawn::spawn_inner (1 samples, 0.24%)</title><rect x="87.0192%" y="837" width="0.2404%" height="15" fill="rgb(209,164,1)" fg:x="362" fg:w="1"/><text x="87.2692%" y="847.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (1 samples, 0.24%)</title><rect x="87.0192%" y="821" width="0.2404%" height="15" fill="rgb(213,184,43)" fg:x="362" fg:w="1"/><text x="87.2692%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (1 samples, 0.24%)</title><rect x="87.0192%" y="805" width="0.2404%" height="15" fill="rgb(231,61,34)" fg:x="362" fg:w="1"/><text x="87.2692%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (1 samples, 0.24%)</title><rect x="87.0192%" y="789" width="0.2404%" height="15" fill="rgb(235,75,3)" fg:x="362" fg:w="1"/><text x="87.2692%" y="799.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (1 samples, 0.24%)</title><rect x="87.0192%" y="773" width="0.2404%" height="15" fill="rgb(220,106,47)" fg:x="362" fg:w="1"/><text x="87.2692%" y="783.50"></text></g><g><title>tokio::runtime::task::new_task (1 samples, 0.24%)</title><rect x="87.0192%" y="757" width="0.2404%" height="15" fill="rgb(210,196,33)" fg:x="362" fg:w="1"/><text x="87.2692%" y="767.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (1 samples, 0.24%)</title><rect x="87.0192%" y="741" width="0.2404%" height="15" fill="rgb(229,154,42)" fg:x="362" fg:w="1"/><text x="87.2692%" y="751.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (1 samples, 0.24%)</title><rect x="87.0192%" y="725" width="0.2404%" height="15" fill="rgb(228,114,26)" fg:x="362" fg:w="1"/><text x="87.2692%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.24%)</title><rect x="87.0192%" y="709" width="0.2404%" height="15" fill="rgb(208,144,1)" fg:x="362" fg:w="1"/><text x="87.2692%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.24%)</title><rect x="87.0192%" y="693" width="0.2404%" height="15" fill="rgb(239,112,37)" fg:x="362" fg:w="1"/><text x="87.2692%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.24%)</title><rect x="87.0192%" y="677" width="0.2404%" height="15" fill="rgb(210,96,50)" fg:x="362" fg:w="1"/><text x="87.2692%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.24%)</title><rect x="87.0192%" y="661" width="0.2404%" height="15" fill="rgb(222,178,2)" fg:x="362" fg:w="1"/><text x="87.2692%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.24%)</title><rect x="87.0192%" y="645" width="0.2404%" height="15" fill="rgb(226,74,18)" fg:x="362" fg:w="1"/><text x="87.2692%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.24%)</title><rect x="87.0192%" y="629" width="0.2404%" height="15" fill="rgb(225,67,54)" fg:x="362" fg:w="1"/><text x="87.2692%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.24%)</title><rect x="87.0192%" y="613" width="0.2404%" height="15" fill="rgb(251,92,32)" fg:x="362" fg:w="1"/><text x="87.2692%" y="623.50"></text></g><g><title>malloc (1 samples, 0.24%)</title><rect x="87.0192%" y="597" width="0.2404%" height="15" fill="rgb(228,149,22)" fg:x="362" fg:w="1"/><text x="87.2692%" y="607.50"></text></g><g><title>[libc.so.6] (1 samples, 0.24%)</title><rect x="87.0192%" y="581" width="0.2404%" height="15" fill="rgb(243,54,13)" fg:x="362" fg:w="1"/><text x="87.2692%" y="591.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.24%)</title><rect x="87.0192%" y="565" width="0.2404%" height="15" fill="rgb(243,180,28)" fg:x="362" fg:w="1"/><text x="87.2692%" y="575.50"></text></g><g><title>exc_page_fault (1 samples, 0.24%)</title><rect x="87.0192%" y="549" width="0.2404%" height="15" fill="rgb(208,167,24)" fg:x="362" fg:w="1"/><text x="87.2692%" y="559.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.24%)</title><rect x="87.0192%" y="533" width="0.2404%" height="15" fill="rgb(245,73,45)" fg:x="362" fg:w="1"/><text x="87.2692%" y="543.50"></text></g><g><title>handle_mm_fault (1 samples, 0.24%)</title><rect x="87.0192%" y="517" width="0.2404%" height="15" fill="rgb(237,203,48)" fg:x="362" fg:w="1"/><text x="87.2692%" y="527.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.24%)</title><rect x="87.0192%" y="501" width="0.2404%" height="15" fill="rgb(211,197,16)" fg:x="362" fg:w="1"/><text x="87.2692%" y="511.50"></text></g><g><title>__folio_alloc (1 samples, 0.24%)</title><rect x="87.0192%" y="485" width="0.2404%" height="15" fill="rgb(243,99,51)" fg:x="362" fg:w="1"/><text x="87.2692%" y="495.50"></text></g><g><title>__alloc_pages (1 samples, 0.24%)</title><rect x="87.0192%" y="469" width="0.2404%" height="15" fill="rgb(215,123,29)" fg:x="362" fg:w="1"/><text x="87.2692%" y="479.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.24%)</title><rect x="87.0192%" y="453" width="0.2404%" height="15" fill="rgb(239,186,37)" fg:x="362" fg:w="1"/><text x="87.2692%" y="463.50"></text></g><g><title>rmqueue_pcplist (1 samples, 0.24%)</title><rect x="87.0192%" y="437" width="0.2404%" height="15" fill="rgb(252,136,39)" fg:x="362" fg:w="1"/><text x="87.2692%" y="447.50"></text></g><g><title>__list_del_entry_valid (1 samples, 0.24%)</title><rect x="87.0192%" y="421" width="0.2404%" height="15" fill="rgb(223,213,32)" fg:x="362" fg:w="1"/><text x="87.2692%" y="431.50"></text></g><g><title>tokio::runtime::coop::budget (6 samples, 1.44%)</title><rect x="86.0577%" y="1093" width="1.4423%" height="15" fill="rgb(233,115,5)" fg:x="358" fg:w="6"/><text x="86.3077%" y="1103.50"></text></g><g><title>tokio::runtime::coop::with_budget (6 samples, 1.44%)</title><rect x="86.0577%" y="1077" width="1.4423%" height="15" fill="rgb(207,226,44)" fg:x="358" fg:w="6"/><text x="86.3077%" y="1087.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::{{closure}} (6 samples, 1.44%)</title><rect x="86.0577%" y="1061" width="1.4423%" height="15" fill="rgb(208,126,0)" fg:x="358" fg:w="6"/><text x="86.3077%" y="1071.50"></text></g><g><title>zmem::main::{{closure}} (6 samples, 1.44%)</title><rect x="86.0577%" y="1045" width="1.4423%" height="15" fill="rgb(244,66,21)" fg:x="358" fg:w="6"/><text x="86.3077%" y="1055.50"></text></g><g><title>zmem::process::Processes::update::{{closure}} (6 samples, 1.44%)</title><rect x="86.0577%" y="1029" width="1.4423%" height="15" fill="rgb(222,97,12)" fg:x="358" fg:w="6"/><text x="86.3077%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 1.20%)</title><rect x="86.2981%" y="1013" width="1.2019%" height="15" fill="rgb(219,213,19)" fg:x="359" fg:w="5"/><text x="86.5481%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 1.20%)</title><rect x="86.2981%" y="997" width="1.2019%" height="15" fill="rgb(252,169,30)" fg:x="359" fg:w="5"/><text x="86.5481%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 1.20%)</title><rect x="86.2981%" y="981" width="1.2019%" height="15" fill="rgb(206,32,51)" fg:x="359" fg:w="5"/><text x="86.5481%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 1.20%)</title><rect x="86.2981%" y="965" width="1.2019%" height="15" fill="rgb(250,172,42)" fg:x="359" fg:w="5"/><text x="86.5481%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.72%)</title><rect x="86.7788%" y="949" width="0.7212%" height="15" fill="rgb(209,34,43)" fg:x="361" fg:w="3"/><text x="87.0288%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (3 samples, 0.72%)</title><rect x="86.7788%" y="933" width="0.7212%" height="15" fill="rgb(223,11,35)" fg:x="361" fg:w="3"/><text x="87.0288%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.72%)</title><rect x="86.7788%" y="917" width="0.7212%" height="15" fill="rgb(251,219,26)" fg:x="361" fg:w="3"/><text x="87.0288%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (2 samples, 0.48%)</title><rect x="87.0192%" y="901" width="0.4808%" height="15" fill="rgb(231,119,3)" fg:x="362" fg:w="2"/><text x="87.2692%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.48%)</title><rect x="87.0192%" y="885" width="0.4808%" height="15" fill="rgb(216,97,11)" fg:x="362" fg:w="2"/><text x="87.2692%" y="895.50"></text></g><g><title>zmem::process::Processes::update::{{closure}}::{{closure}} (2 samples, 0.48%)</title><rect x="87.0192%" y="869" width="0.4808%" height="15" fill="rgb(223,59,9)" fg:x="362" fg:w="2"/><text x="87.2692%" y="879.50"></text></g><g><title>zmem::utils::get_cmd (1 samples, 0.24%)</title><rect x="87.2596%" y="853" width="0.2404%" height="15" fill="rgb(233,93,31)" fg:x="363" fg:w="1"/><text x="87.5096%" y="863.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (1 samples, 0.24%)</title><rect x="87.2596%" y="837" width="0.2404%" height="15" fill="rgb(239,81,33)" fg:x="363" fg:w="1"/><text x="87.5096%" y="847.50"></text></g><g><title>std::fs::buffer_capacity_required (1 samples, 0.24%)</title><rect x="87.2596%" y="821" width="0.2404%" height="15" fill="rgb(213,120,34)" fg:x="363" fg:w="1"/><text x="87.5096%" y="831.50"></text></g><g><title>std::fs::File::metadata (1 samples, 0.24%)</title><rect x="87.2596%" y="805" width="0.2404%" height="15" fill="rgb(243,49,53)" fg:x="363" fg:w="1"/><text x="87.5096%" y="815.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (1 samples, 0.24%)</title><rect x="87.2596%" y="789" width="0.2404%" height="15" fill="rgb(247,216,33)" fg:x="363" fg:w="1"/><text x="87.5096%" y="799.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.24%)</title><rect x="87.2596%" y="773" width="0.2404%" height="15" fill="rgb(226,26,14)" fg:x="363" fg:w="1"/><text x="87.5096%" y="783.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.24%)</title><rect x="87.2596%" y="757" width="0.2404%" height="15" fill="rgb(215,49,53)" fg:x="363" fg:w="1"/><text x="87.5096%" y="767.50"></text></g><g><title>statx (1 samples, 0.24%)</title><rect x="87.2596%" y="741" width="0.2404%" height="15" fill="rgb(245,162,40)" fg:x="363" fg:w="1"/><text x="87.5096%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.24%)</title><rect x="87.2596%" y="725" width="0.2404%" height="15" fill="rgb(229,68,17)" fg:x="363" fg:w="1"/><text x="87.5096%" y="735.50"></text></g><g><title>do_syscall_64 (1 samples, 0.24%)</title><rect x="87.2596%" y="709" width="0.2404%" height="15" fill="rgb(213,182,10)" fg:x="363" fg:w="1"/><text x="87.5096%" y="719.50"></text></g><g><title>__x64_sys_statx (1 samples, 0.24%)</title><rect x="87.2596%" y="693" width="0.2404%" height="15" fill="rgb(245,125,30)" fg:x="363" fg:w="1"/><text x="87.5096%" y="703.50"></text></g><g><title>getname_flags.part.0 (1 samples, 0.24%)</title><rect x="87.2596%" y="677" width="0.2404%" height="15" fill="rgb(232,202,2)" fg:x="363" fg:w="1"/><text x="87.5096%" y="687.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.24%)</title><rect x="87.2596%" y="661" width="0.2404%" height="15" fill="rgb(237,140,51)" fg:x="363" fg:w="1"/><text x="87.5096%" y="671.50"></text></g><g><title>slab_post_alloc_hook.constprop.0 (1 samples, 0.24%)</title><rect x="87.2596%" y="645" width="0.2404%" height="15" fill="rgb(236,157,25)" fg:x="363" fg:w="1"/><text x="87.5096%" y="655.50"></text></g><g><title>_start (19 samples, 4.57%)</title><rect x="83.8942%" y="1429" width="4.5673%" height="15" fill="rgb(219,209,0)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1439.50">_start</text></g><g><title>__libc_start_main (19 samples, 4.57%)</title><rect x="83.8942%" y="1413" width="4.5673%" height="15" fill="rgb(240,116,54)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1423.50">__lib..</text></g><g><title>[libc.so.6] (19 samples, 4.57%)</title><rect x="83.8942%" y="1397" width="4.5673%" height="15" fill="rgb(216,10,36)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1407.50">[libc..</text></g><g><title>main (19 samples, 4.57%)</title><rect x="83.8942%" y="1381" width="4.5673%" height="15" fill="rgb(222,72,44)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1391.50">main</text></g><g><title>std::rt::lang_start_internal (19 samples, 4.57%)</title><rect x="83.8942%" y="1365" width="4.5673%" height="15" fill="rgb(232,159,9)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1375.50">std::..</text></g><g><title>std::panic::catch_unwind (19 samples, 4.57%)</title><rect x="83.8942%" y="1349" width="4.5673%" height="15" fill="rgb(210,39,32)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1359.50">std::..</text></g><g><title>std::panicking::try (19 samples, 4.57%)</title><rect x="83.8942%" y="1333" width="4.5673%" height="15" fill="rgb(216,194,45)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1343.50">std::..</text></g><g><title>std::panicking::try::do_call (19 samples, 4.57%)</title><rect x="83.8942%" y="1317" width="4.5673%" height="15" fill="rgb(218,18,35)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1327.50">std::..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (19 samples, 4.57%)</title><rect x="83.8942%" y="1301" width="4.5673%" height="15" fill="rgb(207,83,51)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1311.50">std::..</text></g><g><title>std::panic::catch_unwind (19 samples, 4.57%)</title><rect x="83.8942%" y="1285" width="4.5673%" height="15" fill="rgb(225,63,43)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1295.50">std::..</text></g><g><title>std::panicking::try (19 samples, 4.57%)</title><rect x="83.8942%" y="1269" width="4.5673%" height="15" fill="rgb(207,57,36)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1279.50">std::..</text></g><g><title>std::panicking::try::do_call (19 samples, 4.57%)</title><rect x="83.8942%" y="1253" width="4.5673%" height="15" fill="rgb(216,99,33)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1263.50">std::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (19 samples, 4.57%)</title><rect x="83.8942%" y="1237" width="4.5673%" height="15" fill="rgb(225,42,16)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1247.50">core:..</text></g><g><title>std::rt::lang_start::{{closure}} (19 samples, 4.57%)</title><rect x="83.8942%" y="1221" width="4.5673%" height="15" fill="rgb(220,201,45)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1231.50">std::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19 samples, 4.57%)</title><rect x="83.8942%" y="1205" width="4.5673%" height="15" fill="rgb(225,33,4)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1215.50">std::..</text></g><g><title>core::ops::function::FnOnce::call_once (19 samples, 4.57%)</title><rect x="83.8942%" y="1189" width="4.5673%" height="15" fill="rgb(224,33,50)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1199.50">core:..</text></g><g><title>zmem::main (19 samples, 4.57%)</title><rect x="83.8942%" y="1173" width="4.5673%" height="15" fill="rgb(246,198,51)" fg:x="349" fg:w="19"/><text x="84.1442%" y="1183.50">zmem:..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (10 samples, 2.40%)</title><rect x="86.0577%" y="1157" width="2.4038%" height="15" fill="rgb(205,22,4)" fg:x="358" fg:w="10"/><text x="86.3077%" y="1167.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (10 samples, 2.40%)</title><rect x="86.0577%" y="1141" width="2.4038%" height="15" fill="rgb(206,3,8)" fg:x="358" fg:w="10"/><text x="86.3077%" y="1151.50">to..</text></g><g><title>tokio::runtime::context::BlockingRegionGuard::block_on (10 samples, 2.40%)</title><rect x="86.0577%" y="1125" width="2.4038%" height="15" fill="rgb(251,23,15)" fg:x="358" fg:w="10"/><text x="86.3077%" y="1135.50">to..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (10 samples, 2.40%)</title><rect x="86.0577%" y="1109" width="2.4038%" height="15" fill="rgb(252,88,28)" fg:x="358" fg:w="10"/><text x="86.3077%" y="1119.50">to..</text></g><g><title>tokio::runtime::park::CachedParkThread::park (4 samples, 0.96%)</title><rect x="87.5000%" y="1093" width="0.9615%" height="15" fill="rgb(212,127,14)" fg:x="364" fg:w="4"/><text x="87.7500%" y="1103.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::with_current (4 samples, 0.96%)</title><rect x="87.5000%" y="1077" width="0.9615%" height="15" fill="rgb(247,145,37)" fg:x="364" fg:w="4"/><text x="87.7500%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.96%)</title><rect x="87.5000%" y="1061" width="0.9615%" height="15" fill="rgb(209,117,53)" fg:x="364" fg:w="4"/><text x="87.7500%" y="1071.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::with_current::{{closure}} (4 samples, 0.96%)</title><rect x="87.5000%" y="1045" width="0.9615%" height="15" fill="rgb(212,90,42)" fg:x="364" fg:w="4"/><text x="87.7500%" y="1055.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park::{{closure}} (4 samples, 0.96%)</title><rect x="87.5000%" y="1029" width="0.9615%" height="15" fill="rgb(218,164,37)" fg:x="364" fg:w="4"/><text x="87.7500%" y="1039.50"></text></g><g><title>tokio::runtime::park::Inner::park (4 samples, 0.96%)</title><rect x="87.5000%" y="1013" width="0.9615%" height="15" fill="rgb(246,65,34)" fg:x="364" fg:w="4"/><text x="87.7500%" y="1023.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (4 samples, 0.96%)</title><rect x="87.5000%" y="997" width="0.9615%" height="15" fill="rgb(231,100,33)" fg:x="364" fg:w="4"/><text x="87.7500%" y="1007.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (4 samples, 0.96%)</title><rect x="87.5000%" y="981" width="0.9615%" height="15" fill="rgb(228,126,14)" fg:x="364" fg:w="4"/><text x="87.7500%" y="991.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (4 samples, 0.96%)</title><rect x="87.5000%" y="965" width="0.9615%" height="15" fill="rgb(215,173,21)" fg:x="364" fg:w="4"/><text x="87.7500%" y="975.50"></text></g><g><title>parking_lot_core::parking_lot::park (4 samples, 0.96%)</title><rect x="87.5000%" y="949" width="0.9615%" height="15" fill="rgb(210,6,40)" fg:x="364" fg:w="4"/><text x="87.7500%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (4 samples, 0.96%)</title><rect x="87.5000%" y="933" width="0.9615%" height="15" fill="rgb(212,48,18)" fg:x="364" fg:w="4"/><text x="87.7500%" y="943.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (4 samples, 0.96%)</title><rect x="87.5000%" y="917" width="0.9615%" height="15" fill="rgb(230,214,11)" fg:x="364" fg:w="4"/><text x="87.7500%" y="927.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (4 samples, 0.96%)</title><rect x="87.5000%" y="901" width="0.9615%" height="15" fill="rgb(254,105,39)" fg:x="364" fg:w="4"/><text x="87.7500%" y="911.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (4 samples, 0.96%)</title><rect x="87.5000%" y="885" width="0.9615%" height="15" fill="rgb(245,158,5)" fg:x="364" fg:w="4"/><text x="87.7500%" y="895.50"></text></g><g><title>syscall (4 samples, 0.96%)</title><rect x="87.5000%" y="869" width="0.9615%" height="15" fill="rgb(249,208,11)" fg:x="364" fg:w="4"/><text x="87.7500%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.96%)</title><rect x="87.5000%" y="853" width="0.9615%" height="15" fill="rgb(210,39,28)" fg:x="364" fg:w="4"/><text x="87.7500%" y="863.50"></text></g><g><title>do_syscall_64 (4 samples, 0.96%)</title><rect x="87.5000%" y="837" width="0.9615%" height="15" fill="rgb(211,56,53)" fg:x="364" fg:w="4"/><text x="87.7500%" y="847.50"></text></g><g><title>__x64_sys_futex (4 samples, 0.96%)</title><rect x="87.5000%" y="821" width="0.9615%" height="15" fill="rgb(226,201,30)" fg:x="364" fg:w="4"/><text x="87.7500%" y="831.50"></text></g><g><title>futex_wait (4 samples, 0.96%)</title><rect x="87.5000%" y="805" width="0.9615%" height="15" fill="rgb(239,101,34)" fg:x="364" fg:w="4"/><text x="87.7500%" y="815.50"></text></g><g><title>schedule (4 samples, 0.96%)</title><rect x="87.5000%" y="789" width="0.9615%" height="15" fill="rgb(226,209,5)" fg:x="364" fg:w="4"/><text x="87.7500%" y="799.50"></text></g><g><title>__schedule (4 samples, 0.96%)</title><rect x="87.5000%" y="773" width="0.9615%" height="15" fill="rgb(250,105,47)" fg:x="364" fg:w="4"/><text x="87.7500%" y="783.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.96%)</title><rect x="87.5000%" y="757" width="0.9615%" height="15" fill="rgb(230,72,3)" fg:x="364" fg:w="4"/><text x="87.7500%" y="767.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.96%)</title><rect x="87.5000%" y="741" width="0.9615%" height="15" fill="rgb(232,218,39)" fg:x="364" fg:w="4"/><text x="87.7500%" y="751.50"></text></g><g><title>ctx_sched_in (4 samples, 0.96%)</title><rect x="87.5000%" y="725" width="0.9615%" height="15" fill="rgb(248,166,6)" fg:x="364" fg:w="4"/><text x="87.7500%" y="735.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (4 samples, 0.96%)</title><rect x="87.5000%" y="709" width="0.9615%" height="15" fill="rgb(247,89,20)" fg:x="364" fg:w="4"/><text x="87.7500%" y="719.50"></text></g><g><title>rb_next (3 samples, 0.72%)</title><rect x="87.7404%" y="693" width="0.7212%" height="15" fill="rgb(248,130,54)" fg:x="365" fg:w="3"/><text x="87.9904%" y="703.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.24%)</title><rect x="88.9423%" y="1365" width="0.2404%" height="15" fill="rgb(234,196,4)" fg:x="370" fg:w="1"/><text x="89.1923%" y="1375.50"></text></g><g><title>charge_memcg (1 samples, 0.24%)</title><rect x="88.9423%" y="1349" width="0.2404%" height="15" fill="rgb(250,143,31)" fg:x="370" fg:w="1"/><text x="89.1923%" y="1359.50"></text></g><g><title>handle_mm_fault (2 samples, 0.48%)</title><rect x="88.9423%" y="1381" width="0.4808%" height="15" fill="rgb(211,110,34)" fg:x="370" fg:w="2"/><text x="89.1923%" y="1391.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.24%)</title><rect x="89.1827%" y="1365" width="0.2404%" height="15" fill="rgb(215,124,48)" fg:x="371" fg:w="1"/><text x="89.4327%" y="1375.50"></text></g><g><title>__folio_alloc (1 samples, 0.24%)</title><rect x="89.1827%" y="1349" width="0.2404%" height="15" fill="rgb(216,46,13)" fg:x="371" fg:w="1"/><text x="89.4327%" y="1359.50"></text></g><g><title>__alloc_pages (1 samples, 0.24%)</title><rect x="89.1827%" y="1333" width="0.2404%" height="15" fill="rgb(205,184,25)" fg:x="371" fg:w="1"/><text x="89.4327%" y="1343.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.24%)</title><rect x="89.1827%" y="1317" width="0.2404%" height="15" fill="rgb(228,1,10)" fg:x="371" fg:w="1"/><text x="89.4327%" y="1327.50"></text></g><g><title>clear_page_rep (1 samples, 0.24%)</title><rect x="89.1827%" y="1301" width="0.2404%" height="15" fill="rgb(213,116,27)" fg:x="371" fg:w="1"/><text x="89.4327%" y="1311.50"></text></g><g><title>asm_exc_page_fault (5 samples, 1.20%)</title><rect x="88.4615%" y="1429" width="1.2019%" height="15" fill="rgb(241,95,50)" fg:x="368" fg:w="5"/><text x="88.7115%" y="1439.50"></text></g><g><title>exc_page_fault (4 samples, 0.96%)</title><rect x="88.7019%" y="1413" width="0.9615%" height="15" fill="rgb(238,48,32)" fg:x="369" fg:w="4"/><text x="88.9519%" y="1423.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.96%)</title><rect x="88.7019%" y="1397" width="0.9615%" height="15" fill="rgb(235,113,49)" fg:x="369" fg:w="4"/><text x="88.9519%" y="1407.50"></text></g><g><title>lock_vma_under_rcu (1 samples, 0.24%)</title><rect x="89.4231%" y="1381" width="0.2404%" height="15" fill="rgb(205,127,43)" fg:x="372" fg:w="1"/><text x="89.6731%" y="1391.50"></text></g><g><title>mas_walk (1 samples, 0.24%)</title><rect x="89.4231%" y="1365" width="0.2404%" height="15" fill="rgb(250,162,2)" fg:x="372" fg:w="1"/><text x="89.6731%" y="1375.50"></text></g><g><title>[vmlinux] (1 samples, 0.24%)</title><rect x="89.6635%" y="1397" width="0.2404%" height="15" fill="rgb(220,13,41)" fg:x="373" fg:w="1"/><text x="89.9135%" y="1407.50"></text></g><g><title>do_group_exit (1 samples, 0.24%)</title><rect x="89.6635%" y="1381" width="0.2404%" height="15" fill="rgb(249,221,25)" fg:x="373" fg:w="1"/><text x="89.9135%" y="1391.50"></text></g><g><title>do_exit (1 samples, 0.24%)</title><rect x="89.6635%" y="1365" width="0.2404%" height="15" fill="rgb(215,208,19)" fg:x="373" fg:w="1"/><text x="89.9135%" y="1375.50"></text></g><g><title>mmput (1 samples, 0.24%)</title><rect x="89.6635%" y="1349" width="0.2404%" height="15" fill="rgb(236,175,2)" fg:x="373" fg:w="1"/><text x="89.9135%" y="1359.50"></text></g><g><title>exit_mmap (1 samples, 0.24%)</title><rect x="89.6635%" y="1333" width="0.2404%" height="15" fill="rgb(241,52,2)" fg:x="373" fg:w="1"/><text x="89.9135%" y="1343.50"></text></g><g><title>unmap_vmas (1 samples, 0.24%)</title><rect x="89.6635%" y="1317" width="0.2404%" height="15" fill="rgb(248,140,14)" fg:x="373" fg:w="1"/><text x="89.9135%" y="1327.50"></text></g><g><title>unmap_page_range (1 samples, 0.24%)</title><rect x="89.6635%" y="1301" width="0.2404%" height="15" fill="rgb(253,22,42)" fg:x="373" fg:w="1"/><text x="89.9135%" y="1311.50"></text></g><g><title>_compound_head (1 samples, 0.24%)</title><rect x="89.6635%" y="1285" width="0.2404%" height="15" fill="rgb(234,61,47)" fg:x="373" fg:w="1"/><text x="89.9135%" y="1295.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.24%)</title><rect x="89.9038%" y="1397" width="0.2404%" height="15" fill="rgb(208,226,15)" fg:x="374" fg:w="1"/><text x="90.1538%" y="1407.50"></text></g><g><title>bprm_execve (1 samples, 0.24%)</title><rect x="89.9038%" y="1381" width="0.2404%" height="15" fill="rgb(217,221,4)" fg:x="374" fg:w="1"/><text x="90.1538%" y="1391.50"></text></g><g><title>load_elf_binary (1 samples, 0.24%)</title><rect x="89.9038%" y="1365" width="0.2404%" height="15" fill="rgb(212,174,34)" fg:x="374" fg:w="1"/><text x="90.1538%" y="1375.50"></text></g><g><title>setup_arg_pages (1 samples, 0.24%)</title><rect x="89.9038%" y="1349" width="0.2404%" height="15" fill="rgb(253,83,4)" fg:x="374" fg:w="1"/><text x="90.1538%" y="1359.50"></text></g><g><title>expand_downwards (1 samples, 0.24%)</title><rect x="89.9038%" y="1333" width="0.2404%" height="15" fill="rgb(250,195,49)" fg:x="374" fg:w="1"/><text x="90.1538%" y="1343.50"></text></g><g><title>mas_preallocate (1 samples, 0.24%)</title><rect x="89.9038%" y="1317" width="0.2404%" height="15" fill="rgb(241,192,25)" fg:x="374" fg:w="1"/><text x="90.1538%" y="1327.50"></text></g><g><title>mas_alloc_nodes (1 samples, 0.24%)</title><rect x="89.9038%" y="1301" width="0.2404%" height="15" fill="rgb(208,124,10)" fg:x="374" fg:w="1"/><text x="90.1538%" y="1311.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.24%)</title><rect x="89.9038%" y="1285" width="0.2404%" height="15" fill="rgb(222,33,0)" fg:x="374" fg:w="1"/><text x="90.1538%" y="1295.50"></text></g><g><title>slab_post_alloc_hook.constprop.0 (1 samples, 0.24%)</title><rect x="89.9038%" y="1269" width="0.2404%" height="15" fill="rgb(234,209,28)" fg:x="374" fg:w="1"/><text x="90.1538%" y="1279.50"></text></g><g><title>memset (1 samples, 0.24%)</title><rect x="89.9038%" y="1253" width="0.2404%" height="15" fill="rgb(224,11,23)" fg:x="374" fg:w="1"/><text x="90.1538%" y="1263.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.24%)</title><rect x="90.1442%" y="1397" width="0.2404%" height="15" fill="rgb(232,99,1)" fg:x="375" fg:w="1"/><text x="90.3942%" y="1407.50"></text></g><g><title>do_filp_open (1 samples, 0.24%)</title><rect x="90.1442%" y="1381" width="0.2404%" height="15" fill="rgb(237,95,45)" fg:x="375" fg:w="1"/><text x="90.3942%" y="1391.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.96%)</title><rect x="89.6635%" y="1429" width="0.9615%" height="15" fill="rgb(208,109,11)" fg:x="373" fg:w="4"/><text x="89.9135%" y="1439.50"></text></g><g><title>do_syscall_64 (4 samples, 0.96%)</title><rect x="89.6635%" y="1413" width="0.9615%" height="15" fill="rgb(216,190,48)" fg:x="373" fg:w="4"/><text x="89.9135%" y="1423.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.24%)</title><rect x="90.3846%" y="1397" width="0.2404%" height="15" fill="rgb(251,171,36)" fg:x="376" fg:w="1"/><text x="90.6346%" y="1407.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.24%)</title><rect x="90.3846%" y="1381" width="0.2404%" height="15" fill="rgb(230,62,22)" fg:x="376" fg:w="1"/><text x="90.6346%" y="1391.50"></text></g><g><title>__rseq_handle_notify_resume (1 samples, 0.24%)</title><rect x="90.3846%" y="1365" width="0.2404%" height="15" fill="rgb(225,114,35)" fg:x="376" fg:w="1"/><text x="90.6346%" y="1375.50"></text></g><g><title>calculate_sigpending (5 samples, 1.20%)</title><rect x="90.6250%" y="1413" width="1.2019%" height="15" fill="rgb(215,118,42)" fg:x="377" fg:w="5"/><text x="90.8750%" y="1423.50"></text></g><g><title>_raw_spin_lock_irq (5 samples, 1.20%)</title><rect x="90.6250%" y="1397" width="1.2019%" height="15" fill="rgb(243,119,21)" fg:x="377" fg:w="5"/><text x="90.8750%" y="1407.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.24%)</title><rect x="91.5865%" y="1381" width="0.2404%" height="15" fill="rgb(252,177,53)" fg:x="381" fg:w="1"/><text x="91.8365%" y="1391.50"></text></g><g><title>__rcu_read_unlock (3 samples, 0.72%)</title><rect x="93.9904%" y="1365" width="0.7212%" height="15" fill="rgb(237,209,29)" fg:x="391" fg:w="3"/><text x="94.2404%" y="1375.50"></text></g><g><title>merge_sched_in (10 samples, 2.40%)</title><rect x="95.6731%" y="1333" width="2.4038%" height="15" fill="rgb(212,65,23)" fg:x="398" fg:w="10"/><text x="95.9231%" y="1343.50">me..</text></g><g><title>event_sched_in (4 samples, 0.96%)</title><rect x="97.1154%" y="1317" width="0.9615%" height="15" fill="rgb(230,222,46)" fg:x="404" fg:w="4"/><text x="97.3654%" y="1327.50"></text></g><g><title>perf_ibs_add (3 samples, 0.72%)</title><rect x="97.3558%" y="1301" width="0.7212%" height="15" fill="rgb(215,135,32)" fg:x="405" fg:w="3"/><text x="97.6058%" y="1311.50"></text></g><g><title>__rcu_read_unlock (3 samples, 0.72%)</title><rect x="97.3558%" y="1285" width="0.7212%" height="15" fill="rgb(246,101,22)" fg:x="405" fg:w="3"/><text x="97.6058%" y="1295.50"></text></g><g><title>schedule_tail (29 samples, 6.97%)</title><rect x="91.8269%" y="1413" width="6.9712%" height="15" fill="rgb(206,107,13)" fg:x="382" fg:w="29"/><text x="92.0769%" y="1423.50">schedule_..</text></g><g><title>finish_task_switch.isra.0 (26 samples, 6.25%)</title><rect x="92.5481%" y="1397" width="6.2500%" height="15" fill="rgb(250,100,44)" fg:x="385" fg:w="26"/><text x="92.7981%" y="1407.50">finish_t..</text></g><g><title>__perf_event_task_sched_in (21 samples, 5.05%)</title><rect x="93.7500%" y="1381" width="5.0481%" height="15" fill="rgb(231,147,38)" fg:x="390" fg:w="21"/><text x="94.0000%" y="1391.50">__perf..</text></g><g><title>ctx_sched_in (17 samples, 4.09%)</title><rect x="94.7115%" y="1365" width="4.0865%" height="15" fill="rgb(229,8,40)" fg:x="394" fg:w="17"/><text x="94.9615%" y="1375.50">ctx_..</text></g><g><title>visit_groups_merge.constprop.0.isra.0 (17 samples, 4.09%)</title><rect x="94.7115%" y="1349" width="4.0865%" height="15" fill="rgb(221,135,30)" fg:x="394" fg:w="17"/><text x="94.9615%" y="1359.50">visi..</text></g><g><title>rb_next (3 samples, 0.72%)</title><rect x="98.0769%" y="1333" width="0.7212%" height="15" fill="rgb(249,193,18)" fg:x="408" fg:w="3"/><text x="98.3269%" y="1343.50"></text></g><g><title>all (416 samples, 100%)</title><rect x="0.0000%" y="1461" width="100.0000%" height="15" fill="rgb(209,133,39)" fg:x="0" fg:w="416"/><text x="0.2500%" y="1471.50"></text></g><g><title>zmem (86 samples, 20.67%)</title><rect x="79.3269%" y="1445" width="20.6731%" height="15" fill="rgb(232,100,14)" fg:x="330" fg:w="86"/><text x="79.5769%" y="1455.50">zmem</text></g><g><title>ret_from_fork (39 samples, 9.38%)</title><rect x="90.6250%" y="1429" width="9.3750%" height="15" fill="rgb(224,185,1)" fg:x="377" fg:w="39"/><text x="90.8750%" y="1439.50">ret_from_fork</text></g><g><title>syscall_exit_to_user_mode (5 samples, 1.20%)</title><rect x="98.7981%" y="1413" width="1.2019%" height="15" fill="rgb(223,139,8)" fg:x="411" fg:w="5"/><text x="99.0481%" y="1423.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 1.20%)</title><rect x="98.7981%" y="1397" width="1.2019%" height="15" fill="rgb(232,213,38)" fg:x="411" fg:w="5"/><text x="99.0481%" y="1407.50"></text></g><g><title>switch_fpu_return (4 samples, 0.96%)</title><rect x="99.0385%" y="1381" width="0.9615%" height="15" fill="rgb(207,94,22)" fg:x="412" fg:w="4"/><text x="99.2885%" y="1391.50"></text></g><g><title>restore_fpregs_from_fpstate (3 samples, 0.72%)</title><rect x="99.2788%" y="1365" width="0.7212%" height="15" fill="rgb(219,183,54)" fg:x="413" fg:w="3"/><text x="99.5288%" y="1375.50"></text></g></svg></svg>