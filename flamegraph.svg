<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1670" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1653.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1653.00"> </text><svg id="frames" x="10" width="1180" total_samples="499"><g><title>perf-exec (4 samples, 0.80%)</title><rect x="0.0000%" y="1605" width="0.8016%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1615.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.80%)</title><rect x="0.0000%" y="1589" width="0.8016%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1599.50"></text></g><g><title>do_syscall_64 (4 samples, 0.80%)</title><rect x="0.0000%" y="1573" width="0.8016%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1583.50"></text></g><g><title>__x64_sys_execve (4 samples, 0.80%)</title><rect x="0.0000%" y="1557" width="0.8016%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1567.50"></text></g><g><title>bprm_execve (4 samples, 0.80%)</title><rect x="0.0000%" y="1541" width="0.8016%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1551.50"></text></g><g><title>load_elf_binary (4 samples, 0.80%)</title><rect x="0.0000%" y="1525" width="0.8016%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1535.50"></text></g><g><title>begin_new_exec (4 samples, 0.80%)</title><rect x="0.0000%" y="1509" width="0.8016%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1519.50"></text></g><g><title>perf_event_exec (4 samples, 0.80%)</title><rect x="0.0000%" y="1493" width="0.8016%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1503.50"></text></g><g><title>ctx_resched (4 samples, 0.80%)</title><rect x="0.0000%" y="1477" width="0.8016%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1487.50"></text></g><g><title>ctx_sched_in (4 samples, 0.80%)</title><rect x="0.0000%" y="1461" width="0.8016%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1471.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (3 samples, 0.60%)</title><rect x="0.2004%" y="1445" width="0.6012%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="3"/><text x="0.4504%" y="1455.50"></text></g><g><title>merge_sched_in (3 samples, 0.60%)</title><rect x="0.2004%" y="1429" width="0.6012%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="3"/><text x="0.4504%" y="1439.50"></text></g><g><title>event_sched_in (3 samples, 0.60%)</title><rect x="0.2004%" y="1413" width="0.6012%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="3"/><text x="0.4504%" y="1423.50"></text></g><g><title>perf_ibs_add (2 samples, 0.40%)</title><rect x="0.4008%" y="1397" width="0.4008%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="2"/><text x="0.6508%" y="1407.50"></text></g><g><title>perf_event_update_userpage (2 samples, 0.40%)</title><rect x="0.4008%" y="1381" width="0.4008%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="2"/><text x="0.6508%" y="1391.50"></text></g><g><title>calc_timer_values (2 samples, 0.40%)</title><rect x="0.4008%" y="1365" width="0.4008%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="2"/><text x="0.6508%" y="1375.50"></text></g><g><title>[[heap]] (1 samples, 0.20%)</title><rect x="0.8016%" y="1589" width="0.2004%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="1"/><text x="1.0516%" y="1599.50"></text></g><g><title>zmem::memory::ProcessMemoryStats::update (1 samples, 0.20%)</title><rect x="0.8016%" y="1573" width="0.2004%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="1"/><text x="1.0516%" y="1583.50"></text></g><g><title>[anon] (1 samples, 0.20%)</title><rect x="1.0020%" y="1589" width="0.2004%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="1"/><text x="1.2520%" y="1599.50"></text></g><g><title>syscall (1 samples, 0.20%)</title><rect x="1.0020%" y="1573" width="0.2004%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="1"/><text x="1.2520%" y="1583.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="1.2024%" y="1589" width="0.2004%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="1"/><text x="1.4524%" y="1599.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.20%)</title><rect x="1.2024%" y="1573" width="0.2004%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="1"/><text x="1.4524%" y="1583.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.20%)</title><rect x="1.2024%" y="1557" width="0.2004%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="1.4524%" y="1567.50"></text></g><g><title>tokio::runtime::context::with_defer::{{closure}} (1 samples, 0.20%)</title><rect x="1.2024%" y="1541" width="0.2004%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="1.4524%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;tokio::runtime::defer::Defer&gt;&gt;&gt; (1 samples, 0.20%)</title><rect x="1.2024%" y="1525" width="0.2004%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="1.4524%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (1 samples, 0.20%)</title><rect x="1.2024%" y="1509" width="0.2004%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="1.4524%" y="1519.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.20%)</title><rect x="1.2024%" y="1493" width="0.2004%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="1"/><text x="1.4524%" y="1503.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.20%)</title><rect x="1.2024%" y="1477" width="0.2004%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="1"/><text x="1.4524%" y="1487.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.20%)</title><rect x="1.2024%" y="1461" width="0.2004%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="1"/><text x="1.4524%" y="1471.50"></text></g><g><title>core::mem::replace (1 samples, 0.20%)</title><rect x="1.2024%" y="1445" width="0.2004%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="1"/><text x="1.4524%" y="1455.50"></text></g><g><title>core::ptr::write (1 samples, 0.20%)</title><rect x="1.2024%" y="1429" width="0.2004%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="1"/><text x="1.4524%" y="1439.50"></text></g><g><title>[zmem] (1 samples, 0.20%)</title><rect x="1.4028%" y="1589" width="0.2004%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="1"/><text x="1.6528%" y="1599.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.20%)</title><rect x="1.4028%" y="1573" width="0.2004%" height="15" fill="rgb(213,181,19)" fg:x="7" fg:w="1"/><text x="1.6528%" y="1583.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::get_mut_unchecked (1 samples, 0.20%)</title><rect x="1.4028%" y="1557" width="0.2004%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="1"/><text x="1.6528%" y="1567.50"></text></g><g><title>__perf_event_task_sched_in (9 samples, 1.80%)</title><rect x="1.6032%" y="1397" width="1.8036%" height="15" fill="rgb(241,83,37)" fg:x="8" fg:w="9"/><text x="1.8532%" y="1407.50">_..</text></g><g><title>ctx_sched_in (9 samples, 1.80%)</title><rect x="1.6032%" y="1381" width="1.8036%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="9"/><text x="1.8532%" y="1391.50">c..</text></g><g><title>visit_groups_merge.constprop.0.isra.0 (9 samples, 1.80%)</title><rect x="1.6032%" y="1365" width="1.8036%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="9"/><text x="1.8532%" y="1375.50">v..</text></g><g><title>merge_sched_in (9 samples, 1.80%)</title><rect x="1.6032%" y="1349" width="1.8036%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="9"/><text x="1.8532%" y="1359.50">m..</text></g><g><title>event_sched_in (7 samples, 1.40%)</title><rect x="2.0040%" y="1333" width="1.4028%" height="15" fill="rgb(238,167,29)" fg:x="10" fg:w="7"/><text x="2.2540%" y="1343.50"></text></g><g><title>perf_ibs_add (7 samples, 1.40%)</title><rect x="2.0040%" y="1317" width="1.4028%" height="15" fill="rgb(232,182,51)" fg:x="10" fg:w="7"/><text x="2.2540%" y="1327.50"></text></g><g><title>perf_event_update_userpage (2 samples, 0.40%)</title><rect x="3.0060%" y="1301" width="0.4008%" height="15" fill="rgb(231,60,39)" fg:x="15" fg:w="2"/><text x="3.2560%" y="1311.50"></text></g><g><title>__libc_thread_freeres (11 samples, 2.20%)</title><rect x="1.6032%" y="1557" width="2.2044%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="11"/><text x="1.8532%" y="1567.50">_..</text></g><g><title>__res_thread_freeres (11 samples, 2.20%)</title><rect x="1.6032%" y="1541" width="2.2044%" height="15" fill="rgb(235,93,37)" fg:x="8" fg:w="11"/><text x="1.8532%" y="1551.50">_..</text></g><g><title>asm_exc_page_fault (11 samples, 2.20%)</title><rect x="1.6032%" y="1525" width="2.2044%" height="15" fill="rgb(213,116,39)" fg:x="8" fg:w="11"/><text x="1.8532%" y="1535.50">a..</text></g><g><title>exc_page_fault (11 samples, 2.20%)</title><rect x="1.6032%" y="1509" width="2.2044%" height="15" fill="rgb(222,207,29)" fg:x="8" fg:w="11"/><text x="1.8532%" y="1519.50">e..</text></g><g><title>do_user_addr_fault (11 samples, 2.20%)</title><rect x="1.6032%" y="1493" width="2.2044%" height="15" fill="rgb(206,96,30)" fg:x="8" fg:w="11"/><text x="1.8532%" y="1503.50">d..</text></g><g><title>down_read (11 samples, 2.20%)</title><rect x="1.6032%" y="1477" width="2.2044%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="11"/><text x="1.8532%" y="1487.50">d..</text></g><g><title>rwsem_down_read_slowpath (11 samples, 2.20%)</title><rect x="1.6032%" y="1461" width="2.2044%" height="15" fill="rgb(250,191,14)" fg:x="8" fg:w="11"/><text x="1.8532%" y="1471.50">r..</text></g><g><title>schedule_preempt_disabled (11 samples, 2.20%)</title><rect x="1.6032%" y="1445" width="2.2044%" height="15" fill="rgb(239,60,40)" fg:x="8" fg:w="11"/><text x="1.8532%" y="1455.50">s..</text></g><g><title>__schedule (11 samples, 2.20%)</title><rect x="1.6032%" y="1429" width="2.2044%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="11"/><text x="1.8532%" y="1439.50">_..</text></g><g><title>finish_task_switch.isra.0 (11 samples, 2.20%)</title><rect x="1.6032%" y="1413" width="2.2044%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="11"/><text x="1.8532%" y="1423.50">f..</text></g><g><title>asm_sysvec_call_function (2 samples, 0.40%)</title><rect x="3.4068%" y="1397" width="0.4008%" height="15" fill="rgb(250,213,24)" fg:x="17" fg:w="2"/><text x="3.6568%" y="1407.50"></text></g><g><title>sysvec_call_function (2 samples, 0.40%)</title><rect x="3.4068%" y="1381" width="0.4008%" height="15" fill="rgb(247,123,22)" fg:x="17" fg:w="2"/><text x="3.6568%" y="1391.50"></text></g><g><title>__sysvec_call_function (2 samples, 0.40%)</title><rect x="3.4068%" y="1365" width="0.4008%" height="15" fill="rgb(231,138,38)" fg:x="17" fg:w="2"/><text x="3.6568%" y="1375.50"></text></g><g><title>__flush_smp_call_function_queue (1 samples, 0.20%)</title><rect x="3.6072%" y="1349" width="0.2004%" height="15" fill="rgb(231,145,46)" fg:x="18" fg:w="1"/><text x="3.8572%" y="1359.50"></text></g><g><title>llist_reverse_order (1 samples, 0.20%)</title><rect x="3.6072%" y="1333" width="0.2004%" height="15" fill="rgb(251,118,11)" fg:x="18" fg:w="1"/><text x="3.8572%" y="1343.50"></text></g><g><title>tlb_finish_mmu (3 samples, 0.60%)</title><rect x="3.8076%" y="1445" width="0.6012%" height="15" fill="rgb(217,147,25)" fg:x="19" fg:w="3"/><text x="4.0576%" y="1455.50"></text></g><g><title>tlb_flush_mmu (3 samples, 0.60%)</title><rect x="3.8076%" y="1429" width="0.6012%" height="15" fill="rgb(247,81,37)" fg:x="19" fg:w="3"/><text x="4.0576%" y="1439.50"></text></g><g><title>flush_tlb_mm_range (3 samples, 0.60%)</title><rect x="3.8076%" y="1413" width="0.6012%" height="15" fill="rgb(209,12,38)" fg:x="19" fg:w="3"/><text x="4.0576%" y="1423.50"></text></g><g><title>on_each_cpu_cond_mask (3 samples, 0.60%)</title><rect x="3.8076%" y="1397" width="0.6012%" height="15" fill="rgb(227,1,9)" fg:x="19" fg:w="3"/><text x="4.0576%" y="1407.50"></text></g><g><title>smp_call_function_many_cond (3 samples, 0.60%)</title><rect x="3.8076%" y="1381" width="0.6012%" height="15" fill="rgb(248,47,43)" fg:x="19" fg:w="3"/><text x="4.0576%" y="1391.50"></text></g><g><title>advise_stack_range (4 samples, 0.80%)</title><rect x="3.8076%" y="1557" width="0.8016%" height="15" fill="rgb(221,10,30)" fg:x="19" fg:w="4"/><text x="4.0576%" y="1567.50"></text></g><g><title>__GI_madvise (4 samples, 0.80%)</title><rect x="3.8076%" y="1541" width="0.8016%" height="15" fill="rgb(210,229,1)" fg:x="19" fg:w="4"/><text x="4.0576%" y="1551.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.80%)</title><rect x="3.8076%" y="1525" width="0.8016%" height="15" fill="rgb(222,148,37)" fg:x="19" fg:w="4"/><text x="4.0576%" y="1535.50"></text></g><g><title>do_syscall_64 (4 samples, 0.80%)</title><rect x="3.8076%" y="1509" width="0.8016%" height="15" fill="rgb(234,67,33)" fg:x="19" fg:w="4"/><text x="4.0576%" y="1519.50"></text></g><g><title>__x64_sys_madvise (4 samples, 0.80%)</title><rect x="3.8076%" y="1493" width="0.8016%" height="15" fill="rgb(247,98,35)" fg:x="19" fg:w="4"/><text x="4.0576%" y="1503.50"></text></g><g><title>do_madvise (4 samples, 0.80%)</title><rect x="3.8076%" y="1477" width="0.8016%" height="15" fill="rgb(247,138,52)" fg:x="19" fg:w="4"/><text x="4.0576%" y="1487.50"></text></g><g><title>zap_page_range_single (4 samples, 0.80%)</title><rect x="3.8076%" y="1461" width="0.8016%" height="15" fill="rgb(213,79,30)" fg:x="19" fg:w="4"/><text x="4.0576%" y="1471.50"></text></g><g><title>unmap_page_range (1 samples, 0.20%)</title><rect x="4.4088%" y="1445" width="0.2004%" height="15" fill="rgb(246,177,23)" fg:x="22" fg:w="1"/><text x="4.6588%" y="1455.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.20%)</title><rect x="4.6092%" y="1557" width="0.2004%" height="15" fill="rgb(230,62,27)" fg:x="23" fg:w="1"/><text x="4.8592%" y="1567.50"></text></g><g><title>do_syscall_64 (1 samples, 0.20%)</title><rect x="4.6092%" y="1541" width="0.2004%" height="15" fill="rgb(216,154,8)" fg:x="23" fg:w="1"/><text x="4.8592%" y="1551.50"></text></g><g><title>[vmlinux] (1 samples, 0.20%)</title><rect x="4.6092%" y="1525" width="0.2004%" height="15" fill="rgb(244,35,45)" fg:x="23" fg:w="1"/><text x="4.8592%" y="1535.50"></text></g><g><title>do_exit (1 samples, 0.20%)</title><rect x="4.6092%" y="1509" width="0.2004%" height="15" fill="rgb(251,115,12)" fg:x="23" fg:w="1"/><text x="4.8592%" y="1519.50"></text></g><g><title>acct_collect (1 samples, 0.20%)</title><rect x="4.6092%" y="1493" width="0.2004%" height="15" fill="rgb(240,54,50)" fg:x="23" fg:w="1"/><text x="4.8592%" y="1503.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.20%)</title><rect x="4.6092%" y="1477" width="0.2004%" height="15" fill="rgb(233,84,52)" fg:x="23" fg:w="1"/><text x="4.8592%" y="1487.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.20%)</title><rect x="4.6092%" y="1461" width="0.2004%" height="15" fill="rgb(207,117,47)" fg:x="23" fg:w="1"/><text x="4.8592%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::handle::Handle&gt; (1 samples, 0.20%)</title><rect x="4.8096%" y="1365" width="0.2004%" height="15" fill="rgb(249,43,39)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::Handle&gt; (1 samples, 0.20%)</title><rect x="4.8096%" y="1349" width="0.2004%" height="15" fill="rgb(209,38,44)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt; (1 samples, 0.20%)</title><rect x="4.8096%" y="1333" width="0.2004%" height="15" fill="rgb(236,212,23)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1343.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.20%)</title><rect x="4.8096%" y="1317" width="0.2004%" height="15" fill="rgb(242,79,21)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1327.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.20%)</title><rect x="4.8096%" y="1301" width="0.2004%" height="15" fill="rgb(211,96,35)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt; (1 samples, 0.20%)</title><rect x="4.8096%" y="1285" width="0.2004%" height="15" fill="rgb(253,215,40)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::driver::Handle&gt; (1 samples, 0.20%)</title><rect x="4.8096%" y="1269" width="0.2004%" height="15" fill="rgb(211,81,21)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::driver::IoHandle&gt; (1 samples, 0.20%)</title><rect x="4.8096%" y="1253" width="0.2004%" height="15" fill="rgb(208,190,38)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::Handle&gt; (1 samples, 0.20%)</title><rect x="4.8096%" y="1237" width="0.2004%" height="15" fill="rgb(235,213,38)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;mio::poll::Registry&gt; (1 samples, 0.20%)</title><rect x="4.8096%" y="1221" width="0.2004%" height="15" fill="rgb(237,122,38)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;mio::sys::unix::selector::epoll::Selector&gt; (1 samples, 0.20%)</title><rect x="4.8096%" y="1205" width="0.2004%" height="15" fill="rgb(244,218,35)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1215.50"></text></g><g><title>&lt;mio::sys::unix::selector::epoll::Selector as core::ops::drop::Drop&gt;::drop (1 samples, 0.20%)</title><rect x="4.8096%" y="1189" width="0.2004%" height="15" fill="rgb(240,68,47)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1199.50"></text></g><g><title>__GI___close (1 samples, 0.20%)</title><rect x="4.8096%" y="1173" width="0.2004%" height="15" fill="rgb(210,16,53)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1183.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.20%)</title><rect x="4.8096%" y="1157" width="0.2004%" height="15" fill="rgb(235,124,12)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1167.50"></text></g><g><title>do_syscall_64 (1 samples, 0.20%)</title><rect x="4.8096%" y="1141" width="0.2004%" height="15" fill="rgb(224,169,11)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1151.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.20%)</title><rect x="4.8096%" y="1125" width="0.2004%" height="15" fill="rgb(250,166,2)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1135.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.20%)</title><rect x="4.8096%" y="1109" width="0.2004%" height="15" fill="rgb(242,216,29)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1119.50"></text></g><g><title>task_work_run (1 samples, 0.20%)</title><rect x="4.8096%" y="1093" width="0.2004%" height="15" fill="rgb(230,116,27)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1103.50"></text></g><g><title>__fput (1 samples, 0.20%)</title><rect x="4.8096%" y="1077" width="0.2004%" height="15" fill="rgb(228,99,48)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1087.50"></text></g><g><title>ep_eventpoll_release (1 samples, 0.20%)</title><rect x="4.8096%" y="1061" width="0.2004%" height="15" fill="rgb(253,11,6)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1071.50"></text></g><g><title>ep_clear_and_put (1 samples, 0.20%)</title><rect x="4.8096%" y="1045" width="0.2004%" height="15" fill="rgb(247,143,39)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1055.50"></text></g><g><title>kmem_cache_free (1 samples, 0.20%)</title><rect x="4.8096%" y="1029" width="0.2004%" height="15" fill="rgb(236,97,10)" fg:x="24" fg:w="1"/><text x="5.0596%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (8 samples, 1.60%)</title><rect x="5.0100%" y="1349" width="1.6032%" height="15" fill="rgb(233,208,19)" fg:x="25" fg:w="8"/><text x="5.2600%" y="1359.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (8 samples, 1.60%)</title><rect x="5.0100%" y="1333" width="1.6032%" height="15" fill="rgb(216,164,2)" fg:x="25" fg:w="8"/><text x="5.2600%" y="1343.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (8 samples, 1.60%)</title><rect x="5.0100%" y="1317" width="1.6032%" height="15" fill="rgb(220,129,5)" fg:x="25" fg:w="8"/><text x="5.2600%" y="1327.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (8 samples, 1.60%)</title><rect x="5.0100%" y="1301" width="1.6032%" height="15" fill="rgb(242,17,10)" fg:x="25" fg:w="8"/><text x="5.2600%" y="1311.50"></text></g><g><title>parking_lot_core::parking_lot::park (8 samples, 1.60%)</title><rect x="5.0100%" y="1285" width="1.6032%" height="15" fill="rgb(242,107,0)" fg:x="25" fg:w="8"/><text x="5.2600%" y="1295.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (8 samples, 1.60%)</title><rect x="5.0100%" y="1269" width="1.6032%" height="15" fill="rgb(251,28,31)" fg:x="25" fg:w="8"/><text x="5.2600%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (8 samples, 1.60%)</title><rect x="5.0100%" y="1253" width="1.6032%" height="15" fill="rgb(233,223,10)" fg:x="25" fg:w="8"/><text x="5.2600%" y="1263.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (8 samples, 1.60%)</title><rect x="5.0100%" y="1237" width="1.6032%" height="15" fill="rgb(215,21,27)" fg:x="25" fg:w="8"/><text x="5.2600%" y="1247.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (8 samples, 1.60%)</title><rect x="5.0100%" y="1221" width="1.6032%" height="15" fill="rgb(232,23,21)" fg:x="25" fg:w="8"/><text x="5.2600%" y="1231.50"></text></g><g><title>syscall (8 samples, 1.60%)</title><rect x="5.0100%" y="1205" width="1.6032%" height="15" fill="rgb(244,5,23)" fg:x="25" fg:w="8"/><text x="5.2600%" y="1215.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 1.60%)</title><rect x="5.0100%" y="1189" width="1.6032%" height="15" fill="rgb(226,81,46)" fg:x="25" fg:w="8"/><text x="5.2600%" y="1199.50"></text></g><g><title>do_syscall_64 (8 samples, 1.60%)</title><rect x="5.0100%" y="1173" width="1.6032%" height="15" fill="rgb(247,70,30)" fg:x="25" fg:w="8"/><text x="5.2600%" y="1183.50"></text></g><g><title>__x64_sys_futex (8 samples, 1.60%)</title><rect x="5.0100%" y="1157" width="1.6032%" height="15" fill="rgb(212,68,19)" fg:x="25" fg:w="8"/><text x="5.2600%" y="1167.50"></text></g><g><title>futex_wait (7 samples, 1.40%)</title><rect x="5.2104%" y="1141" width="1.4028%" height="15" fill="rgb(240,187,13)" fg:x="26" fg:w="7"/><text x="5.4604%" y="1151.50"></text></g><g><title>schedule (6 samples, 1.20%)</title><rect x="5.4108%" y="1125" width="1.2024%" height="15" fill="rgb(223,113,26)" fg:x="27" fg:w="6"/><text x="5.6608%" y="1135.50"></text></g><g><title>__schedule (6 samples, 1.20%)</title><rect x="5.4108%" y="1109" width="1.2024%" height="15" fill="rgb(206,192,2)" fg:x="27" fg:w="6"/><text x="5.6608%" y="1119.50"></text></g><g><title>finish_task_switch.isra.0 (6 samples, 1.20%)</title><rect x="5.4108%" y="1093" width="1.2024%" height="15" fill="rgb(241,108,4)" fg:x="27" fg:w="6"/><text x="5.6608%" y="1103.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 1.20%)</title><rect x="5.4108%" y="1077" width="1.2024%" height="15" fill="rgb(247,173,49)" fg:x="27" fg:w="6"/><text x="5.6608%" y="1087.50"></text></g><g><title>ctx_sched_in (4 samples, 0.80%)</title><rect x="5.8116%" y="1061" width="0.8016%" height="15" fill="rgb(224,114,35)" fg:x="29" fg:w="4"/><text x="6.0616%" y="1071.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (4 samples, 0.80%)</title><rect x="5.8116%" y="1045" width="0.8016%" height="15" fill="rgb(245,159,27)" fg:x="29" fg:w="4"/><text x="6.0616%" y="1055.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.20%)</title><rect x="6.6132%" y="901" width="0.2004%" height="15" fill="rgb(245,172,44)" fg:x="33" fg:w="1"/><text x="6.8632%" y="911.50"></text></g><g><title>futex_unqueue (1 samples, 0.20%)</title><rect x="6.8136%" y="741" width="0.2004%" height="15" fill="rgb(236,23,11)" fg:x="34" fg:w="1"/><text x="7.0636%" y="751.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.20%)</title><rect x="7.0140%" y="709" width="0.2004%" height="15" fill="rgb(205,117,38)" fg:x="35" fg:w="1"/><text x="7.2640%" y="719.50"></text></g><g><title>ctx_sched_out (1 samples, 0.20%)</title><rect x="7.0140%" y="693" width="0.2004%" height="15" fill="rgb(237,72,25)" fg:x="35" fg:w="1"/><text x="7.2640%" y="703.50"></text></g><g><title>__pmu_ctx_sched_out (1 samples, 0.20%)</title><rect x="7.0140%" y="677" width="0.2004%" height="15" fill="rgb(244,70,9)" fg:x="35" fg:w="1"/><text x="7.2640%" y="687.50"></text></g><g><title>event_sched_out (1 samples, 0.20%)</title><rect x="7.0140%" y="661" width="0.2004%" height="15" fill="rgb(217,125,39)" fg:x="35" fg:w="1"/><text x="7.2640%" y="671.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.20%)</title><rect x="7.2144%" y="709" width="0.2004%" height="15" fill="rgb(235,36,10)" fg:x="36" fg:w="1"/><text x="7.4644%" y="719.50"></text></g><g><title>dequeue_entity (1 samples, 0.20%)</title><rect x="7.2144%" y="693" width="0.2004%" height="15" fill="rgb(251,123,47)" fg:x="36" fg:w="1"/><text x="7.4644%" y="703.50"></text></g><g><title>update_cfs_group (1 samples, 0.20%)</title><rect x="7.2144%" y="677" width="0.2004%" height="15" fill="rgb(221,13,13)" fg:x="36" fg:w="1"/><text x="7.4644%" y="687.50"></text></g><g><title>_raw_spin_unlock (3 samples, 0.60%)</title><rect x="8.0160%" y="677" width="0.6012%" height="15" fill="rgb(238,131,9)" fg:x="40" fg:w="3"/><text x="8.2660%" y="687.50"></text></g><g><title>perf_event_update_userpage (2 samples, 0.40%)</title><rect x="11.8236%" y="597" width="0.4008%" height="15" fill="rgb(211,50,8)" fg:x="59" fg:w="2"/><text x="12.0736%" y="607.50"></text></g><g><title>merge_sched_in (20 samples, 4.01%)</title><rect x="9.4188%" y="645" width="4.0080%" height="15" fill="rgb(245,182,24)" fg:x="47" fg:w="20"/><text x="9.6688%" y="655.50">merg..</text></g><g><title>event_sched_in (14 samples, 2.81%)</title><rect x="10.6212%" y="629" width="2.8056%" height="15" fill="rgb(242,14,37)" fg:x="53" fg:w="14"/><text x="10.8712%" y="639.50">ev..</text></g><g><title>perf_ibs_add (8 samples, 1.60%)</title><rect x="11.8236%" y="613" width="1.6032%" height="15" fill="rgb(246,228,12)" fg:x="59" fg:w="8"/><text x="12.0736%" y="623.50"></text></g><g><title>perf_ibs_start (6 samples, 1.20%)</title><rect x="12.2244%" y="597" width="1.2024%" height="15" fill="rgb(213,55,15)" fg:x="61" fg:w="6"/><text x="12.4744%" y="607.50"></text></g><g><title>native_write_msr (5 samples, 1.00%)</title><rect x="12.4248%" y="581" width="1.0020%" height="15" fill="rgb(209,9,3)" fg:x="62" fg:w="5"/><text x="12.6748%" y="591.50"></text></g><g><title>__perf_event_task_sched_in (32 samples, 6.41%)</title><rect x="7.8156%" y="693" width="6.4128%" height="15" fill="rgb(230,59,30)" fg:x="39" fg:w="32"/><text x="8.0656%" y="703.50">__perf_e..</text></g><g><title>ctx_sched_in (28 samples, 5.61%)</title><rect x="8.6172%" y="677" width="5.6112%" height="15" fill="rgb(209,121,21)" fg:x="43" fg:w="28"/><text x="8.8672%" y="687.50">ctx_sch..</text></g><g><title>visit_groups_merge.constprop.0.isra.0 (28 samples, 5.61%)</title><rect x="8.6172%" y="661" width="5.6112%" height="15" fill="rgb(220,109,13)" fg:x="43" fg:w="28"/><text x="8.8672%" y="671.50">visit_g..</text></g><g><title>rb_next (4 samples, 0.80%)</title><rect x="13.4269%" y="645" width="0.8016%" height="15" fill="rgb(232,18,1)" fg:x="67" fg:w="4"/><text x="13.6769%" y="655.50"></text></g><g><title>__x64_sys_futex (38 samples, 7.62%)</title><rect x="6.8136%" y="773" width="7.6152%" height="15" fill="rgb(215,41,42)" fg:x="34" fg:w="38"/><text x="7.0636%" y="783.50">__x64_sys_..</text></g><g><title>futex_wait (38 samples, 7.62%)</title><rect x="6.8136%" y="757" width="7.6152%" height="15" fill="rgb(224,123,36)" fg:x="34" fg:w="38"/><text x="7.0636%" y="767.50">futex_wait</text></g><g><title>schedule (37 samples, 7.41%)</title><rect x="7.0140%" y="741" width="7.4148%" height="15" fill="rgb(240,125,3)" fg:x="35" fg:w="37"/><text x="7.2640%" y="751.50">schedule</text></g><g><title>__schedule (37 samples, 7.41%)</title><rect x="7.0140%" y="725" width="7.4148%" height="15" fill="rgb(205,98,50)" fg:x="35" fg:w="37"/><text x="7.2640%" y="735.50">__schedule</text></g><g><title>finish_task_switch.isra.0 (35 samples, 7.01%)</title><rect x="7.4148%" y="709" width="7.0140%" height="15" fill="rgb(205,185,37)" fg:x="37" fg:w="35"/><text x="7.6648%" y="719.50">finish_ta..</text></g><g><title>asm_sysvec_irq_work (1 samples, 0.20%)</title><rect x="14.2285%" y="693" width="0.2004%" height="15" fill="rgb(238,207,15)" fg:x="71" fg:w="1"/><text x="14.4785%" y="703.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.20%)</title><rect x="14.2285%" y="677" width="0.2004%" height="15" fill="rgb(213,199,42)" fg:x="71" fg:w="1"/><text x="14.4785%" y="687.50"></text></g><g><title>__sysvec_irq_work (1 samples, 0.20%)</title><rect x="14.2285%" y="661" width="0.2004%" height="15" fill="rgb(235,201,11)" fg:x="71" fg:w="1"/><text x="14.4785%" y="671.50"></text></g><g><title>irq_work_run (1 samples, 0.20%)</title><rect x="14.2285%" y="645" width="0.2004%" height="15" fill="rgb(207,46,11)" fg:x="71" fg:w="1"/><text x="14.4785%" y="655.50"></text></g><g><title>irq_work_run_list (1 samples, 0.20%)</title><rect x="14.2285%" y="629" width="0.2004%" height="15" fill="rgb(241,35,35)" fg:x="71" fg:w="1"/><text x="14.4785%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (42 samples, 8.42%)</title><rect x="6.6132%" y="1029" width="8.4168%" height="15" fill="rgb(243,32,47)" fg:x="33" fg:w="42"/><text x="6.8632%" y="1039.50">tokio::runti..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (42 samples, 8.42%)</title><rect x="6.6132%" y="1013" width="8.4168%" height="15" fill="rgb(247,202,23)" fg:x="33" fg:w="42"/><text x="6.8632%" y="1023.50">tokio::runti..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (42 samples, 8.42%)</title><rect x="6.6132%" y="997" width="8.4168%" height="15" fill="rgb(219,102,11)" fg:x="33" fg:w="42"/><text x="6.8632%" y="1007.50">tokio::runti..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (42 samples, 8.42%)</title><rect x="6.6132%" y="981" width="8.4168%" height="15" fill="rgb(243,110,44)" fg:x="33" fg:w="42"/><text x="6.8632%" y="991.50">tokio::runti..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (42 samples, 8.42%)</title><rect x="6.6132%" y="965" width="8.4168%" height="15" fill="rgb(222,74,54)" fg:x="33" fg:w="42"/><text x="6.8632%" y="975.50">tokio::runti..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (42 samples, 8.42%)</title><rect x="6.6132%" y="949" width="8.4168%" height="15" fill="rgb(216,99,12)" fg:x="33" fg:w="42"/><text x="6.8632%" y="959.50">tokio::loom:..</text></g><g><title>parking_lot::condvar::Condvar::wait (42 samples, 8.42%)</title><rect x="6.6132%" y="933" width="8.4168%" height="15" fill="rgb(226,22,26)" fg:x="33" fg:w="42"/><text x="6.8632%" y="943.50">parking_lot:..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (42 samples, 8.42%)</title><rect x="6.6132%" y="917" width="8.4168%" height="15" fill="rgb(217,163,10)" fg:x="33" fg:w="42"/><text x="6.8632%" y="927.50">parking_lot:..</text></g><g><title>parking_lot_core::parking_lot::park (41 samples, 8.22%)</title><rect x="6.8136%" y="901" width="8.2164%" height="15" fill="rgb(213,25,53)" fg:x="34" fg:w="41"/><text x="7.0636%" y="911.50">parking_lot..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (41 samples, 8.22%)</title><rect x="6.8136%" y="885" width="8.2164%" height="15" fill="rgb(252,105,26)" fg:x="34" fg:w="41"/><text x="7.0636%" y="895.50">parking_lot..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (41 samples, 8.22%)</title><rect x="6.8136%" y="869" width="8.2164%" height="15" fill="rgb(220,39,43)" fg:x="34" fg:w="41"/><text x="7.0636%" y="879.50">parking_lot..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (41 samples, 8.22%)</title><rect x="6.8136%" y="853" width="8.2164%" height="15" fill="rgb(229,68,48)" fg:x="34" fg:w="41"/><text x="7.0636%" y="863.50">&lt;parking_lo..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (41 samples, 8.22%)</title><rect x="6.8136%" y="837" width="8.2164%" height="15" fill="rgb(252,8,32)" fg:x="34" fg:w="41"/><text x="7.0636%" y="847.50">parking_lot..</text></g><g><title>syscall (41 samples, 8.22%)</title><rect x="6.8136%" y="821" width="8.2164%" height="15" fill="rgb(223,20,43)" fg:x="34" fg:w="41"/><text x="7.0636%" y="831.50">syscall</text></g><g><title>entry_SYSCALL_64 (41 samples, 8.22%)</title><rect x="6.8136%" y="805" width="8.2164%" height="15" fill="rgb(229,81,49)" fg:x="34" fg:w="41"/><text x="7.0636%" y="815.50">entry_SYSCA..</text></g><g><title>do_syscall_64 (41 samples, 8.22%)</title><rect x="6.8136%" y="789" width="8.2164%" height="15" fill="rgb(236,28,36)" fg:x="34" fg:w="41"/><text x="7.0636%" y="799.50">do_syscall_..</text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.60%)</title><rect x="14.4289%" y="773" width="0.6012%" height="15" fill="rgb(249,185,26)" fg:x="72" fg:w="3"/><text x="14.6789%" y="783.50"></text></g><g><title>exit_to_user_mode_prepare (3 samples, 0.60%)</title><rect x="14.4289%" y="757" width="0.6012%" height="15" fill="rgb(249,174,33)" fg:x="72" fg:w="3"/><text x="14.6789%" y="767.50"></text></g><g><title>switch_fpu_return (2 samples, 0.40%)</title><rect x="14.6293%" y="741" width="0.4008%" height="15" fill="rgb(233,201,37)" fg:x="73" fg:w="2"/><text x="14.8793%" y="751.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.20%)</title><rect x="14.8297%" y="725" width="0.2004%" height="15" fill="rgb(221,78,26)" fg:x="74" fg:w="1"/><text x="15.0797%" y="735.50"></text></g><g><title>merge_sched_in (4 samples, 0.80%)</title><rect x="15.0301%" y="437" width="0.8016%" height="15" fill="rgb(250,127,30)" fg:x="75" fg:w="4"/><text x="15.2801%" y="447.50"></text></g><g><title>event_sched_in (4 samples, 0.80%)</title><rect x="15.0301%" y="421" width="0.8016%" height="15" fill="rgb(230,49,44)" fg:x="75" fg:w="4"/><text x="15.2801%" y="431.50"></text></g><g><title>perf_ibs_add (4 samples, 0.80%)</title><rect x="15.0301%" y="405" width="0.8016%" height="15" fill="rgb(229,67,23)" fg:x="75" fg:w="4"/><text x="15.2801%" y="415.50"></text></g><g><title>perf_event_update_userpage (4 samples, 0.80%)</title><rect x="15.0301%" y="389" width="0.8016%" height="15" fill="rgb(249,83,47)" fg:x="75" fg:w="4"/><text x="15.2801%" y="399.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 1.00%)</title><rect x="15.0301%" y="485" width="1.0020%" height="15" fill="rgb(215,43,3)" fg:x="75" fg:w="5"/><text x="15.2801%" y="495.50"></text></g><g><title>ctx_sched_in (5 samples, 1.00%)</title><rect x="15.0301%" y="469" width="1.0020%" height="15" fill="rgb(238,154,13)" fg:x="75" fg:w="5"/><text x="15.2801%" y="479.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (5 samples, 1.00%)</title><rect x="15.0301%" y="453" width="1.0020%" height="15" fill="rgb(219,56,2)" fg:x="75" fg:w="5"/><text x="15.2801%" y="463.50"></text></g><g><title>rb_next (1 samples, 0.20%)</title><rect x="15.8317%" y="437" width="0.2004%" height="15" fill="rgb(233,0,4)" fg:x="79" fg:w="1"/><text x="16.0817%" y="447.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (6 samples, 1.20%)</title><rect x="15.0301%" y="917" width="1.2024%" height="15" fill="rgb(235,30,7)" fg:x="75" fg:w="6"/><text x="15.2801%" y="927.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 1.20%)</title><rect x="15.0301%" y="901" width="1.2024%" height="15" fill="rgb(250,79,13)" fg:x="75" fg:w="6"/><text x="15.2801%" y="911.50"></text></g><g><title>std::panicking::try (6 samples, 1.20%)</title><rect x="15.0301%" y="885" width="1.2024%" height="15" fill="rgb(211,146,34)" fg:x="75" fg:w="6"/><text x="15.2801%" y="895.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 1.20%)</title><rect x="15.0301%" y="869" width="1.2024%" height="15" fill="rgb(228,22,38)" fg:x="75" fg:w="6"/><text x="15.2801%" y="879.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 1.20%)</title><rect x="15.0301%" y="853" width="1.2024%" height="15" fill="rgb(235,168,5)" fg:x="75" fg:w="6"/><text x="15.2801%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 1.20%)</title><rect x="15.0301%" y="837" width="1.2024%" height="15" fill="rgb(221,155,16)" fg:x="75" fg:w="6"/><text x="15.2801%" y="847.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete::{{closure}} (6 samples, 1.20%)</title><rect x="15.0301%" y="821" width="1.2024%" height="15" fill="rgb(215,215,53)" fg:x="75" fg:w="6"/><text x="15.2801%" y="831.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (6 samples, 1.20%)</title><rect x="15.0301%" y="805" width="1.2024%" height="15" fill="rgb(223,4,10)" fg:x="75" fg:w="6"/><text x="15.2801%" y="815.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (6 samples, 1.20%)</title><rect x="15.0301%" y="789" width="1.2024%" height="15" fill="rgb(234,103,6)" fg:x="75" fg:w="6"/><text x="15.2801%" y="799.50"></text></g><g><title>tokio::runtime::park::wake (6 samples, 1.20%)</title><rect x="15.0301%" y="773" width="1.2024%" height="15" fill="rgb(227,97,0)" fg:x="75" fg:w="6"/><text x="15.2801%" y="783.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (6 samples, 1.20%)</title><rect x="15.0301%" y="757" width="1.2024%" height="15" fill="rgb(234,150,53)" fg:x="75" fg:w="6"/><text x="15.2801%" y="767.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (6 samples, 1.20%)</title><rect x="15.0301%" y="741" width="1.2024%" height="15" fill="rgb(228,201,54)" fg:x="75" fg:w="6"/><text x="15.2801%" y="751.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (6 samples, 1.20%)</title><rect x="15.0301%" y="725" width="1.2024%" height="15" fill="rgb(222,22,37)" fg:x="75" fg:w="6"/><text x="15.2801%" y="735.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (6 samples, 1.20%)</title><rect x="15.0301%" y="709" width="1.2024%" height="15" fill="rgb(237,53,32)" fg:x="75" fg:w="6"/><text x="15.2801%" y="719.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (6 samples, 1.20%)</title><rect x="15.0301%" y="693" width="1.2024%" height="15" fill="rgb(233,25,53)" fg:x="75" fg:w="6"/><text x="15.2801%" y="703.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (6 samples, 1.20%)</title><rect x="15.0301%" y="677" width="1.2024%" height="15" fill="rgb(210,40,34)" fg:x="75" fg:w="6"/><text x="15.2801%" y="687.50"></text></g><g><title>syscall (6 samples, 1.20%)</title><rect x="15.0301%" y="661" width="1.2024%" height="15" fill="rgb(241,220,44)" fg:x="75" fg:w="6"/><text x="15.2801%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 1.20%)</title><rect x="15.0301%" y="645" width="1.2024%" height="15" fill="rgb(235,28,35)" fg:x="75" fg:w="6"/><text x="15.2801%" y="655.50"></text></g><g><title>do_syscall_64 (6 samples, 1.20%)</title><rect x="15.0301%" y="629" width="1.2024%" height="15" fill="rgb(210,56,17)" fg:x="75" fg:w="6"/><text x="15.2801%" y="639.50"></text></g><g><title>__x64_sys_futex (6 samples, 1.20%)</title><rect x="15.0301%" y="613" width="1.2024%" height="15" fill="rgb(224,130,29)" fg:x="75" fg:w="6"/><text x="15.2801%" y="623.50"></text></g><g><title>futex_wake (6 samples, 1.20%)</title><rect x="15.0301%" y="597" width="1.2024%" height="15" fill="rgb(235,212,8)" fg:x="75" fg:w="6"/><text x="15.2801%" y="607.50"></text></g><g><title>wake_up_q (6 samples, 1.20%)</title><rect x="15.0301%" y="581" width="1.2024%" height="15" fill="rgb(223,33,50)" fg:x="75" fg:w="6"/><text x="15.2801%" y="591.50"></text></g><g><title>try_to_wake_up (6 samples, 1.20%)</title><rect x="15.0301%" y="565" width="1.2024%" height="15" fill="rgb(219,149,13)" fg:x="75" fg:w="6"/><text x="15.2801%" y="575.50"></text></g><g><title>preempt_schedule_thunk (6 samples, 1.20%)</title><rect x="15.0301%" y="549" width="1.2024%" height="15" fill="rgb(250,156,29)" fg:x="75" fg:w="6"/><text x="15.2801%" y="559.50"></text></g><g><title>preempt_schedule (6 samples, 1.20%)</title><rect x="15.0301%" y="533" width="1.2024%" height="15" fill="rgb(216,193,19)" fg:x="75" fg:w="6"/><text x="15.2801%" y="543.50"></text></g><g><title>__schedule (6 samples, 1.20%)</title><rect x="15.0301%" y="517" width="1.2024%" height="15" fill="rgb(216,135,14)" fg:x="75" fg:w="6"/><text x="15.2801%" y="527.50"></text></g><g><title>finish_task_switch.isra.0 (6 samples, 1.20%)</title><rect x="15.0301%" y="501" width="1.2024%" height="15" fill="rgb(241,47,5)" fg:x="75" fg:w="6"/><text x="15.2801%" y="511.50"></text></g><g><title>asm_sysvec_irq_work (1 samples, 0.20%)</title><rect x="16.0321%" y="485" width="0.2004%" height="15" fill="rgb(233,42,35)" fg:x="80" fg:w="1"/><text x="16.2821%" y="495.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.20%)</title><rect x="16.0321%" y="469" width="0.2004%" height="15" fill="rgb(231,13,6)" fg:x="80" fg:w="1"/><text x="16.2821%" y="479.50"></text></g><g><title>__sysvec_irq_work (1 samples, 0.20%)</title><rect x="16.0321%" y="453" width="0.2004%" height="15" fill="rgb(207,181,40)" fg:x="80" fg:w="1"/><text x="16.2821%" y="463.50"></text></g><g><title>irq_work_run (1 samples, 0.20%)</title><rect x="16.0321%" y="437" width="0.2004%" height="15" fill="rgb(254,173,49)" fg:x="80" fg:w="1"/><text x="16.2821%" y="447.50"></text></g><g><title>irq_work_run_list (1 samples, 0.20%)</title><rect x="16.0321%" y="421" width="0.2004%" height="15" fill="rgb(221,1,38)" fg:x="80" fg:w="1"/><text x="16.2821%" y="431.50"></text></g><g><title>perf_pending_irq (1 samples, 0.20%)</title><rect x="16.0321%" y="405" width="0.2004%" height="15" fill="rgb(206,124,46)" fg:x="80" fg:w="1"/><text x="16.2821%" y="415.50"></text></g><g><title>__wake_up (1 samples, 0.20%)</title><rect x="16.0321%" y="389" width="0.2004%" height="15" fill="rgb(249,21,11)" fg:x="80" fg:w="1"/><text x="16.2821%" y="399.50"></text></g><g><title>__wake_up_common (1 samples, 0.20%)</title><rect x="16.0321%" y="373" width="0.2004%" height="15" fill="rgb(222,201,40)" fg:x="80" fg:w="1"/><text x="16.2821%" y="383.50"></text></g><g><title>pollwake (1 samples, 0.20%)</title><rect x="16.0321%" y="357" width="0.2004%" height="15" fill="rgb(235,61,29)" fg:x="80" fg:w="1"/><text x="16.2821%" y="367.50"></text></g><g><title>try_to_wake_up (1 samples, 0.20%)</title><rect x="16.0321%" y="341" width="0.2004%" height="15" fill="rgb(219,207,3)" fg:x="80" fg:w="1"/><text x="16.2821%" y="351.50"></text></g><g><title>ttwu_queue_wakelist (1 samples, 0.20%)</title><rect x="16.0321%" y="325" width="0.2004%" height="15" fill="rgb(222,56,46)" fg:x="80" fg:w="1"/><text x="16.2821%" y="335.50"></text></g><g><title>send_call_function_single_ipi (1 samples, 0.20%)</title><rect x="16.0321%" y="309" width="0.2004%" height="15" fill="rgb(239,76,54)" fg:x="80" fg:w="1"/><text x="16.2821%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;&gt; (1 samples, 0.20%)</title><rect x="16.2325%" y="693" width="0.2004%" height="15" fill="rgb(231,124,27)" fg:x="81" fg:w="1"/><text x="16.4825%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (1 samples, 0.20%)</title><rect x="16.2325%" y="677" width="0.2004%" height="15" fill="rgb(249,195,6)" fg:x="81" fg:w="1"/><text x="16.4825%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (1 samples, 0.20%)</title><rect x="16.2325%" y="661" width="0.2004%" height="15" fill="rgb(237,174,47)" fg:x="81" fg:w="1"/><text x="16.4825%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (1 samples, 0.20%)</title><rect x="16.2325%" y="645" width="0.2004%" height="15" fill="rgb(206,201,31)" fg:x="81" fg:w="1"/><text x="16.4825%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1 samples, 0.20%)</title><rect x="16.2325%" y="629" width="0.2004%" height="15" fill="rgb(231,57,52)" fg:x="81" fg:w="1"/><text x="16.4825%" y="639.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1 samples, 0.20%)</title><rect x="16.2325%" y="613" width="0.2004%" height="15" fill="rgb(248,177,22)" fg:x="81" fg:w="1"/><text x="16.4825%" y="623.50"></text></g><g><title>__GI___close (1 samples, 0.20%)</title><rect x="16.2325%" y="597" width="0.2004%" height="15" fill="rgb(215,211,37)" fg:x="81" fg:w="1"/><text x="16.4825%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.20%)</title><rect x="16.2325%" y="581" width="0.2004%" height="15" fill="rgb(241,128,51)" fg:x="81" fg:w="1"/><text x="16.4825%" y="591.50"></text></g><g><title>do_syscall_64 (1 samples, 0.20%)</title><rect x="16.2325%" y="565" width="0.2004%" height="15" fill="rgb(227,165,31)" fg:x="81" fg:w="1"/><text x="16.4825%" y="575.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.20%)</title><rect x="16.2325%" y="549" width="0.2004%" height="15" fill="rgb(228,167,24)" fg:x="81" fg:w="1"/><text x="16.4825%" y="559.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.20%)</title><rect x="16.2325%" y="533" width="0.2004%" height="15" fill="rgb(228,143,12)" fg:x="81" fg:w="1"/><text x="16.4825%" y="543.50"></text></g><g><title>task_work_run (1 samples, 0.20%)</title><rect x="16.2325%" y="517" width="0.2004%" height="15" fill="rgb(249,149,8)" fg:x="81" fg:w="1"/><text x="16.4825%" y="527.50"></text></g><g><title>__call_rcu_common (1 samples, 0.20%)</title><rect x="16.2325%" y="501" width="0.2004%" height="15" fill="rgb(243,35,44)" fg:x="81" fg:w="1"/><text x="16.4825%" y="511.50"></text></g><g><title>_copy_to_iter (1 samples, 0.20%)</title><rect x="16.4329%" y="405" width="0.2004%" height="15" fill="rgb(246,89,9)" fg:x="82" fg:w="1"/><text x="16.6829%" y="415.50"></text></g><g><title>copy_user_generic_string (1 samples, 0.20%)</title><rect x="16.4329%" y="389" width="0.2004%" height="15" fill="rgb(233,213,13)" fg:x="82" fg:w="1"/><text x="16.6829%" y="399.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.20%)</title><rect x="16.4329%" y="373" width="0.2004%" height="15" fill="rgb(233,141,41)" fg:x="82" fg:w="1"/><text x="16.6829%" y="383.50"></text></g><g><title>common_interrupt (1 samples, 0.20%)</title><rect x="16.4329%" y="357" width="0.2004%" height="15" fill="rgb(239,167,4)" fg:x="82" fg:w="1"/><text x="16.6829%" y="367.50"></text></g><g><title>__common_interrupt (1 samples, 0.20%)</title><rect x="16.4329%" y="341" width="0.2004%" height="15" fill="rgb(209,217,16)" fg:x="82" fg:w="1"/><text x="16.6829%" y="351.50"></text></g><g><title>handle_edge_irq (1 samples, 0.20%)</title><rect x="16.4329%" y="325" width="0.2004%" height="15" fill="rgb(219,88,35)" fg:x="82" fg:w="1"/><text x="16.6829%" y="335.50"></text></g><g><title>handle_irq_event (1 samples, 0.20%)</title><rect x="16.4329%" y="309" width="0.2004%" height="15" fill="rgb(220,193,23)" fg:x="82" fg:w="1"/><text x="16.6829%" y="319.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.20%)</title><rect x="16.4329%" y="293" width="0.2004%" height="15" fill="rgb(230,90,52)" fg:x="82" fg:w="1"/><text x="16.6829%" y="303.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.20%)</title><rect x="16.4329%" y="277" width="0.2004%" height="15" fill="rgb(252,106,19)" fg:x="82" fg:w="1"/><text x="16.6829%" y="287.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.20%)</title><rect x="16.4329%" y="261" width="0.2004%" height="15" fill="rgb(206,74,20)" fg:x="82" fg:w="1"/><text x="16.6829%" y="271.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.20%)</title><rect x="16.4329%" y="245" width="0.2004%" height="15" fill="rgb(230,138,44)" fg:x="82" fg:w="1"/><text x="16.6829%" y="255.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.20%)</title><rect x="16.4329%" y="229" width="0.2004%" height="15" fill="rgb(235,182,43)" fg:x="82" fg:w="1"/><text x="16.6829%" y="239.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.20%)</title><rect x="16.4329%" y="213" width="0.2004%" height="15" fill="rgb(242,16,51)" fg:x="82" fg:w="1"/><text x="16.6829%" y="223.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.20%)</title><rect x="16.4329%" y="197" width="0.2004%" height="15" fill="rgb(248,9,4)" fg:x="82" fg:w="1"/><text x="16.6829%" y="207.50"></text></g><g><title>drm_handle_vblank (1 samples, 0.20%)</title><rect x="16.4329%" y="181" width="0.2004%" height="15" fill="rgb(210,31,22)" fg:x="82" fg:w="1"/><text x="16.6829%" y="191.50"></text></g><g><title>drm_update_vblank_count (1 samples, 0.20%)</title><rect x="16.4329%" y="165" width="0.2004%" height="15" fill="rgb(239,54,39)" fg:x="82" fg:w="1"/><text x="16.6829%" y="175.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.20%)</title><rect x="16.4329%" y="149" width="0.2004%" height="15" fill="rgb(230,99,41)" fg:x="82" fg:w="1"/><text x="16.6829%" y="159.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.20%)</title><rect x="16.4329%" y="133" width="0.2004%" height="15" fill="rgb(253,106,12)" fg:x="82" fg:w="1"/><text x="16.6829%" y="143.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.20%)</title><rect x="16.4329%" y="117" width="0.2004%" height="15" fill="rgb(213,46,41)" fg:x="82" fg:w="1"/><text x="16.6829%" y="127.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.20%)</title><rect x="16.4329%" y="101" width="0.2004%" height="15" fill="rgb(215,133,35)" fg:x="82" fg:w="1"/><text x="16.6829%" y="111.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.20%)</title><rect x="16.4329%" y="85" width="0.2004%" height="15" fill="rgb(213,28,5)" fg:x="82" fg:w="1"/><text x="16.6829%" y="95.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.20%)</title><rect x="16.4329%" y="69" width="0.2004%" height="15" fill="rgb(215,77,49)" fg:x="82" fg:w="1"/><text x="16.6829%" y="79.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.20%)</title><rect x="16.4329%" y="53" width="0.2004%" height="15" fill="rgb(248,100,22)" fg:x="82" fg:w="1"/><text x="16.6829%" y="63.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.20%)</title><rect x="16.4329%" y="37" width="0.2004%" height="15" fill="rgb(208,67,9)" fg:x="82" fg:w="1"/><text x="16.6829%" y="47.50"></text></g><g><title>error_return (3 samples, 0.60%)</title><rect x="22.2445%" y="389" width="0.6012%" height="15" fill="rgb(219,133,21)" fg:x="111" fg:w="3"/><text x="22.4945%" y="399.50"></text></g><g><title>mas_next_entry (4 samples, 0.80%)</title><rect x="22.8457%" y="389" width="0.8016%" height="15" fill="rgb(246,46,29)" fg:x="114" fg:w="4"/><text x="23.0957%" y="399.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.40%)</title><rect x="33.8677%" y="325" width="0.4008%" height="15" fill="rgb(246,185,52)" fg:x="169" fg:w="2"/><text x="34.1177%" y="335.50"></text></g><g><title>__perf_event_task_sched_in (8 samples, 1.60%)</title><rect x="34.4689%" y="245" width="1.6032%" height="15" fill="rgb(252,136,11)" fg:x="172" fg:w="8"/><text x="34.7189%" y="255.50"></text></g><g><title>ctx_sched_in (6 samples, 1.20%)</title><rect x="34.8697%" y="229" width="1.2024%" height="15" fill="rgb(219,138,53)" fg:x="174" fg:w="6"/><text x="35.1197%" y="239.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (5 samples, 1.00%)</title><rect x="35.0701%" y="213" width="1.0020%" height="15" fill="rgb(211,51,23)" fg:x="175" fg:w="5"/><text x="35.3201%" y="223.50"></text></g><g><title>rb_next (2 samples, 0.40%)</title><rect x="35.6713%" y="197" width="0.4008%" height="15" fill="rgb(247,221,28)" fg:x="178" fg:w="2"/><text x="35.9213%" y="207.50"></text></g><g><title>_raw_spin_unlock (11 samples, 2.20%)</title><rect x="34.2685%" y="325" width="2.2044%" height="15" fill="rgb(251,222,45)" fg:x="171" fg:w="11"/><text x="34.5185%" y="335.50">_..</text></g><g><title>preempt_schedule_thunk (11 samples, 2.20%)</title><rect x="34.2685%" y="309" width="2.2044%" height="15" fill="rgb(217,162,53)" fg:x="171" fg:w="11"/><text x="34.5185%" y="319.50">p..</text></g><g><title>preempt_schedule (11 samples, 2.20%)</title><rect x="34.2685%" y="293" width="2.2044%" height="15" fill="rgb(229,93,14)" fg:x="171" fg:w="11"/><text x="34.5185%" y="303.50">p..</text></g><g><title>__schedule (11 samples, 2.20%)</title><rect x="34.2685%" y="277" width="2.2044%" height="15" fill="rgb(209,67,49)" fg:x="171" fg:w="11"/><text x="34.5185%" y="287.50">_..</text></g><g><title>finish_task_switch.isra.0 (11 samples, 2.20%)</title><rect x="34.2685%" y="261" width="2.2044%" height="15" fill="rgb(213,87,29)" fg:x="171" fg:w="11"/><text x="34.5185%" y="271.50">f..</text></g><g><title>asm_sysvec_irq_work (2 samples, 0.40%)</title><rect x="36.0721%" y="245" width="0.4008%" height="15" fill="rgb(205,151,52)" fg:x="180" fg:w="2"/><text x="36.3221%" y="255.50"></text></g><g><title>sysvec_irq_work (2 samples, 0.40%)</title><rect x="36.0721%" y="229" width="0.4008%" height="15" fill="rgb(253,215,39)" fg:x="180" fg:w="2"/><text x="36.3221%" y="239.50"></text></g><g><title>__sysvec_irq_work (2 samples, 0.40%)</title><rect x="36.0721%" y="213" width="0.4008%" height="15" fill="rgb(221,220,41)" fg:x="180" fg:w="2"/><text x="36.3221%" y="223.50"></text></g><g><title>irq_work_run (1 samples, 0.20%)</title><rect x="36.2725%" y="197" width="0.2004%" height="15" fill="rgb(218,133,21)" fg:x="181" fg:w="1"/><text x="36.5225%" y="207.50"></text></g><g><title>irq_work_run_list (1 samples, 0.20%)</title><rect x="36.2725%" y="181" width="0.2004%" height="15" fill="rgb(221,193,43)" fg:x="181" fg:w="1"/><text x="36.5225%" y="191.50"></text></g><g><title>perf_pending_irq (1 samples, 0.20%)</title><rect x="36.2725%" y="165" width="0.2004%" height="15" fill="rgb(240,128,52)" fg:x="181" fg:w="1"/><text x="36.5225%" y="175.50"></text></g><g><title>__wake_up (1 samples, 0.20%)</title><rect x="36.2725%" y="149" width="0.2004%" height="15" fill="rgb(253,114,12)" fg:x="181" fg:w="1"/><text x="36.5225%" y="159.50"></text></g><g><title>__wake_up_common (1 samples, 0.20%)</title><rect x="36.2725%" y="133" width="0.2004%" height="15" fill="rgb(215,223,47)" fg:x="181" fg:w="1"/><text x="36.5225%" y="143.50"></text></g><g><title>pollwake (1 samples, 0.20%)</title><rect x="36.2725%" y="117" width="0.2004%" height="15" fill="rgb(248,225,23)" fg:x="181" fg:w="1"/><text x="36.5225%" y="127.50"></text></g><g><title>try_to_wake_up (1 samples, 0.20%)</title><rect x="36.2725%" y="101" width="0.2004%" height="15" fill="rgb(250,108,0)" fg:x="181" fg:w="1"/><text x="36.5225%" y="111.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.20%)</title><rect x="36.2725%" y="85" width="0.2004%" height="15" fill="rgb(228,208,7)" fg:x="181" fg:w="1"/><text x="36.5225%" y="95.50"></text></g><g><title>enqueue_hrtimer (1 samples, 0.20%)</title><rect x="68.7375%" y="229" width="0.2004%" height="15" fill="rgb(244,45,10)" fg:x="343" fg:w="1"/><text x="68.9875%" y="239.50"></text></g><g><title>timerqueue_add (1 samples, 0.20%)</title><rect x="68.7375%" y="213" width="0.2004%" height="15" fill="rgb(207,125,25)" fg:x="343" fg:w="1"/><text x="68.9875%" y="223.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.20%)</title><rect x="68.9379%" y="181" width="0.2004%" height="15" fill="rgb(210,195,18)" fg:x="344" fg:w="1"/><text x="69.1879%" y="191.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.20%)</title><rect x="68.9379%" y="165" width="0.2004%" height="15" fill="rgb(249,80,12)" fg:x="344" fg:w="1"/><text x="69.1879%" y="175.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.60%)</title><rect x="68.7375%" y="245" width="0.6012%" height="15" fill="rgb(221,65,9)" fg:x="343" fg:w="3"/><text x="68.9875%" y="255.50"></text></g><g><title>tick_sched_timer (2 samples, 0.40%)</title><rect x="68.9379%" y="229" width="0.4008%" height="15" fill="rgb(235,49,36)" fg:x="344" fg:w="2"/><text x="69.1879%" y="239.50"></text></g><g><title>update_process_times (2 samples, 0.40%)</title><rect x="68.9379%" y="213" width="0.4008%" height="15" fill="rgb(225,32,20)" fg:x="344" fg:w="2"/><text x="69.1879%" y="223.50"></text></g><g><title>scheduler_tick (2 samples, 0.40%)</title><rect x="68.9379%" y="197" width="0.4008%" height="15" fill="rgb(215,141,46)" fg:x="344" fg:w="2"/><text x="69.1879%" y="207.50"></text></g><g><title>sched_clock_tick (1 samples, 0.20%)</title><rect x="69.1383%" y="181" width="0.2004%" height="15" fill="rgb(250,160,47)" fg:x="345" fg:w="1"/><text x="69.3883%" y="191.50"></text></g><g><title>ktime_get (1 samples, 0.20%)</title><rect x="69.1383%" y="165" width="0.2004%" height="15" fill="rgb(216,222,40)" fg:x="345" fg:w="1"/><text x="69.3883%" y="175.50"></text></g><g><title>smaps_account (165 samples, 33.07%)</title><rect x="36.4729%" y="325" width="33.0661%" height="15" fill="rgb(234,217,39)" fg:x="182" fg:w="165"/><text x="36.7229%" y="335.50">smaps_account</text></g><g><title>asm_sysvec_apic_timer_interrupt (4 samples, 0.80%)</title><rect x="68.7375%" y="309" width="0.8016%" height="15" fill="rgb(207,178,40)" fg:x="343" fg:w="4"/><text x="68.9875%" y="319.50"></text></g><g><title>sysvec_apic_timer_interrupt (4 samples, 0.80%)</title><rect x="68.7375%" y="293" width="0.8016%" height="15" fill="rgb(221,136,13)" fg:x="343" fg:w="4"/><text x="68.9875%" y="303.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4 samples, 0.80%)</title><rect x="68.7375%" y="277" width="0.8016%" height="15" fill="rgb(249,199,10)" fg:x="343" fg:w="4"/><text x="68.9875%" y="287.50"></text></g><g><title>hrtimer_interrupt (4 samples, 0.80%)</title><rect x="68.7375%" y="261" width="0.8016%" height="15" fill="rgb(249,222,13)" fg:x="343" fg:w="4"/><text x="68.9875%" y="271.50"></text></g><g><title>clockevents_program_event (1 samples, 0.20%)</title><rect x="69.3387%" y="245" width="0.2004%" height="15" fill="rgb(244,185,38)" fg:x="346" fg:w="1"/><text x="69.5887%" y="255.50"></text></g><g><title>ktime_get (1 samples, 0.20%)</title><rect x="69.3387%" y="229" width="0.2004%" height="15" fill="rgb(236,202,9)" fg:x="346" fg:w="1"/><text x="69.5887%" y="239.50"></text></g><g><title>read_hpet (1 samples, 0.20%)</title><rect x="69.3387%" y="213" width="0.2004%" height="15" fill="rgb(250,229,37)" fg:x="346" fg:w="1"/><text x="69.5887%" y="223.50"></text></g><g><title>_raw_spin_lock (5 samples, 1.00%)</title><rect x="69.7395%" y="309" width="1.0020%" height="15" fill="rgb(206,174,23)" fg:x="348" fg:w="5"/><text x="69.9895%" y="319.50"></text></g><g><title>swp_swapcount (21 samples, 4.21%)</title><rect x="69.5391%" y="325" width="4.2084%" height="15" fill="rgb(211,33,43)" fg:x="347" fg:w="21"/><text x="69.7891%" y="335.50">swp_s..</text></g><g><title>_swap_info_get (15 samples, 3.01%)</title><rect x="70.7415%" y="309" width="3.0060%" height="15" fill="rgb(245,58,50)" fg:x="353" fg:w="15"/><text x="70.9915%" y="319.50">_sw..</text></g><g><title>std::io::BufRead::read_line (289 samples, 57.92%)</title><rect x="16.4329%" y="693" width="57.9158%" height="15" fill="rgb(244,68,36)" fg:x="82" fg:w="289"/><text x="16.6829%" y="703.50">std::io::BufRead::read_line</text></g><g><title>std::io::append_to_string (289 samples, 57.92%)</title><rect x="16.4329%" y="677" width="57.9158%" height="15" fill="rgb(232,229,15)" fg:x="82" fg:w="289"/><text x="16.6829%" y="687.50">std::io::append_to_string</text></g><g><title>std::io::BufRead::read_line::{{closure}} (289 samples, 57.92%)</title><rect x="16.4329%" y="661" width="57.9158%" height="15" fill="rgb(254,30,23)" fg:x="82" fg:w="289"/><text x="16.6829%" y="671.50">std::io::BufRead::read_line::{{closure}}</text></g><g><title>std::io::read_until (289 samples, 57.92%)</title><rect x="16.4329%" y="645" width="57.9158%" height="15" fill="rgb(235,160,14)" fg:x="82" fg:w="289"/><text x="16.6829%" y="655.50">std::io::read_until</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (289 samples, 57.92%)</title><rect x="16.4329%" y="629" width="57.9158%" height="15" fill="rgb(212,155,44)" fg:x="82" fg:w="289"/><text x="16.6829%" y="639.50">&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf</text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (289 samples, 57.92%)</title><rect x="16.4329%" y="613" width="57.9158%" height="15" fill="rgb(226,2,50)" fg:x="82" fg:w="289"/><text x="16.6829%" y="623.50">std::io::buffered::bufreader::buffer::Buffer::fill_buf</text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (289 samples, 57.92%)</title><rect x="16.4329%" y="597" width="57.9158%" height="15" fill="rgb(234,177,6)" fg:x="82" fg:w="289"/><text x="16.6829%" y="607.50">std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (289 samples, 57.92%)</title><rect x="16.4329%" y="581" width="57.9158%" height="15" fill="rgb(217,24,9)" fg:x="82" fg:w="289"/><text x="16.6829%" y="591.50">&lt;std::fs::File as std::io::Read&gt;::read_buf</text></g><g><title>std::sys::unix::fs::File::read_buf (289 samples, 57.92%)</title><rect x="16.4329%" y="565" width="57.9158%" height="15" fill="rgb(220,13,46)" fg:x="82" fg:w="289"/><text x="16.6829%" y="575.50">std::sys::unix::fs::File::read_buf</text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (289 samples, 57.92%)</title><rect x="16.4329%" y="549" width="57.9158%" height="15" fill="rgb(239,221,27)" fg:x="82" fg:w="289"/><text x="16.6829%" y="559.50">std::sys::unix::fd::FileDesc::read_buf</text></g><g><title>__GI___libc_read (289 samples, 57.92%)</title><rect x="16.4329%" y="533" width="57.9158%" height="15" fill="rgb(222,198,25)" fg:x="82" fg:w="289"/><text x="16.6829%" y="543.50">__GI___libc_read</text></g><g><title>__GI___libc_read (289 samples, 57.92%)</title><rect x="16.4329%" y="517" width="57.9158%" height="15" fill="rgb(211,99,13)" fg:x="82" fg:w="289"/><text x="16.6829%" y="527.50">__GI___libc_read</text></g><g><title>entry_SYSCALL_64 (289 samples, 57.92%)</title><rect x="16.4329%" y="501" width="57.9158%" height="15" fill="rgb(232,111,31)" fg:x="82" fg:w="289"/><text x="16.6829%" y="511.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (289 samples, 57.92%)</title><rect x="16.4329%" y="485" width="57.9158%" height="15" fill="rgb(245,82,37)" fg:x="82" fg:w="289"/><text x="16.6829%" y="495.50">do_syscall_64</text></g><g><title>__x64_sys_read (289 samples, 57.92%)</title><rect x="16.4329%" y="469" width="57.9158%" height="15" fill="rgb(227,149,46)" fg:x="82" fg:w="289"/><text x="16.6829%" y="479.50">__x64_sys_read</text></g><g><title>vfs_read (289 samples, 57.92%)</title><rect x="16.4329%" y="453" width="57.9158%" height="15" fill="rgb(218,36,50)" fg:x="82" fg:w="289"/><text x="16.6829%" y="463.50">vfs_read</text></g><g><title>seq_read (289 samples, 57.92%)</title><rect x="16.4329%" y="437" width="57.9158%" height="15" fill="rgb(226,80,48)" fg:x="82" fg:w="289"/><text x="16.6829%" y="447.50">seq_read</text></g><g><title>seq_read_iter (289 samples, 57.92%)</title><rect x="16.4329%" y="421" width="57.9158%" height="15" fill="rgb(238,224,15)" fg:x="82" fg:w="289"/><text x="16.6829%" y="431.50">seq_read_iter</text></g><g><title>show_smaps_rollup (288 samples, 57.72%)</title><rect x="16.6333%" y="405" width="57.7154%" height="15" fill="rgb(241,136,10)" fg:x="83" fg:w="288"/><text x="16.8833%" y="415.50">show_smaps_rollup</text></g><g><title>walk_page_vma (253 samples, 50.70%)</title><rect x="23.6473%" y="389" width="50.7014%" height="15" fill="rgb(208,32,45)" fg:x="118" fg:w="253"/><text x="23.8973%" y="399.50">walk_page_vma</text></g><g><title>__walk_page_range (251 samples, 50.30%)</title><rect x="24.0481%" y="373" width="50.3006%" height="15" fill="rgb(207,135,9)" fg:x="120" fg:w="251"/><text x="24.2981%" y="383.50">__walk_page_range</text></g><g><title>walk_pgd_range (251 samples, 50.30%)</title><rect x="24.0481%" y="357" width="50.3006%" height="15" fill="rgb(206,86,44)" fg:x="120" fg:w="251"/><text x="24.2981%" y="367.50">walk_pgd_range</text></g><g><title>smaps_pte_range (246 samples, 49.30%)</title><rect x="25.0501%" y="341" width="49.2986%" height="15" fill="rgb(245,177,15)" fg:x="125" fg:w="246"/><text x="25.3001%" y="351.50">smaps_pte_range</text></g><g><title>vm_normal_page (3 samples, 0.60%)</title><rect x="73.7475%" y="325" width="0.6012%" height="15" fill="rgb(206,64,50)" fg:x="368" fg:w="3"/><text x="73.9975%" y="335.50"></text></g><g><title>handle_mm_fault (1 samples, 0.20%)</title><rect x="74.3487%" y="453" width="0.2004%" height="15" fill="rgb(234,36,40)" fg:x="371" fg:w="1"/><text x="74.5987%" y="463.50"></text></g><g><title>std::io::buffered::bufreader::BufReader&lt;R&gt;::new (2 samples, 0.40%)</title><rect x="74.3487%" y="693" width="0.4008%" height="15" fill="rgb(213,64,8)" fg:x="371" fg:w="2"/><text x="74.5987%" y="703.50"></text></g><g><title>std::io::buffered::bufreader::BufReader&lt;R&gt;::with_capacity (2 samples, 0.40%)</title><rect x="74.3487%" y="677" width="0.4008%" height="15" fill="rgb(210,75,36)" fg:x="371" fg:w="2"/><text x="74.5987%" y="687.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::with_capacity (2 samples, 0.40%)</title><rect x="74.3487%" y="661" width="0.4008%" height="15" fill="rgb(229,88,21)" fg:x="371" fg:w="2"/><text x="74.5987%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;[T]&gt;::new_uninit_slice (2 samples, 0.40%)</title><rect x="74.3487%" y="645" width="0.4008%" height="15" fill="rgb(252,204,47)" fg:x="371" fg:w="2"/><text x="74.5987%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.40%)</title><rect x="74.3487%" y="629" width="0.4008%" height="15" fill="rgb(208,77,27)" fg:x="371" fg:w="2"/><text x="74.5987%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.40%)</title><rect x="74.3487%" y="613" width="0.4008%" height="15" fill="rgb(221,76,26)" fg:x="371" fg:w="2"/><text x="74.5987%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.40%)</title><rect x="74.3487%" y="597" width="0.4008%" height="15" fill="rgb(225,139,18)" fg:x="371" fg:w="2"/><text x="74.5987%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.40%)</title><rect x="74.3487%" y="581" width="0.4008%" height="15" fill="rgb(230,137,11)" fg:x="371" fg:w="2"/><text x="74.5987%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.40%)</title><rect x="74.3487%" y="565" width="0.4008%" height="15" fill="rgb(212,28,1)" fg:x="371" fg:w="2"/><text x="74.5987%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.40%)</title><rect x="74.3487%" y="549" width="0.4008%" height="15" fill="rgb(248,164,17)" fg:x="371" fg:w="2"/><text x="74.5987%" y="559.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.40%)</title><rect x="74.3487%" y="533" width="0.4008%" height="15" fill="rgb(222,171,42)" fg:x="371" fg:w="2"/><text x="74.5987%" y="543.50"></text></g><g><title>_int_malloc (2 samples, 0.40%)</title><rect x="74.3487%" y="517" width="0.4008%" height="15" fill="rgb(243,84,45)" fg:x="371" fg:w="2"/><text x="74.5987%" y="527.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.40%)</title><rect x="74.3487%" y="501" width="0.4008%" height="15" fill="rgb(252,49,23)" fg:x="371" fg:w="2"/><text x="74.5987%" y="511.50"></text></g><g><title>exc_page_fault (2 samples, 0.40%)</title><rect x="74.3487%" y="485" width="0.4008%" height="15" fill="rgb(215,19,7)" fg:x="371" fg:w="2"/><text x="74.5987%" y="495.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.40%)</title><rect x="74.3487%" y="469" width="0.4008%" height="15" fill="rgb(238,81,41)" fg:x="371" fg:w="2"/><text x="74.5987%" y="479.50"></text></g><g><title>lock_vma_under_rcu (1 samples, 0.20%)</title><rect x="74.5491%" y="453" width="0.2004%" height="15" fill="rgb(210,199,37)" fg:x="372" fg:w="1"/><text x="74.7991%" y="463.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (1 samples, 0.20%)</title><rect x="74.7495%" y="677" width="0.2004%" height="15" fill="rgb(244,192,49)" fg:x="373" fg:w="1"/><text x="74.9995%" y="687.50"></text></g><g><title>std::io::default_read_to_string (1 samples, 0.20%)</title><rect x="74.7495%" y="661" width="0.2004%" height="15" fill="rgb(226,211,11)" fg:x="373" fg:w="1"/><text x="74.9995%" y="671.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.20%)</title><rect x="74.7495%" y="645" width="0.2004%" height="15" fill="rgb(236,162,54)" fg:x="373" fg:w="1"/><text x="74.9995%" y="655.50"></text></g><g><title>std::io::default_read_to_string::{{closure}} (1 samples, 0.20%)</title><rect x="74.7495%" y="629" width="0.2004%" height="15" fill="rgb(220,229,9)" fg:x="373" fg:w="1"/><text x="74.9995%" y="639.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.20%)</title><rect x="74.7495%" y="613" width="0.2004%" height="15" fill="rgb(250,87,22)" fg:x="373" fg:w="1"/><text x="74.9995%" y="623.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 0.20%)</title><rect x="74.7495%" y="597" width="0.2004%" height="15" fill="rgb(239,43,17)" fg:x="373" fg:w="1"/><text x="74.9995%" y="607.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (1 samples, 0.20%)</title><rect x="74.7495%" y="581" width="0.2004%" height="15" fill="rgb(231,177,25)" fg:x="373" fg:w="1"/><text x="74.9995%" y="591.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (1 samples, 0.20%)</title><rect x="74.7495%" y="565" width="0.2004%" height="15" fill="rgb(219,179,1)" fg:x="373" fg:w="1"/><text x="74.9995%" y="575.50"></text></g><g><title>__GI___libc_read (1 samples, 0.20%)</title><rect x="74.7495%" y="549" width="0.2004%" height="15" fill="rgb(238,219,53)" fg:x="373" fg:w="1"/><text x="74.9995%" y="559.50"></text></g><g><title>__GI___libc_read (1 samples, 0.20%)</title><rect x="74.7495%" y="533" width="0.2004%" height="15" fill="rgb(232,167,36)" fg:x="373" fg:w="1"/><text x="74.9995%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.20%)</title><rect x="74.7495%" y="517" width="0.2004%" height="15" fill="rgb(244,19,51)" fg:x="373" fg:w="1"/><text x="74.9995%" y="527.50"></text></g><g><title>do_syscall_64 (1 samples, 0.20%)</title><rect x="74.7495%" y="501" width="0.2004%" height="15" fill="rgb(224,6,22)" fg:x="373" fg:w="1"/><text x="74.9995%" y="511.50"></text></g><g><title>__x64_sys_read (1 samples, 0.20%)</title><rect x="74.7495%" y="485" width="0.2004%" height="15" fill="rgb(224,145,5)" fg:x="373" fg:w="1"/><text x="74.9995%" y="495.50"></text></g><g><title>vfs_read (1 samples, 0.20%)</title><rect x="74.7495%" y="469" width="0.2004%" height="15" fill="rgb(234,130,49)" fg:x="373" fg:w="1"/><text x="74.9995%" y="479.50"></text></g><g><title>proc_pid_cmdline_read (1 samples, 0.20%)</title><rect x="74.7495%" y="453" width="0.2004%" height="15" fill="rgb(254,6,2)" fg:x="373" fg:w="1"/><text x="74.9995%" y="463.50"></text></g><g><title>__check_object_size (1 samples, 0.20%)</title><rect x="74.7495%" y="437" width="0.2004%" height="15" fill="rgb(208,96,46)" fg:x="373" fg:w="1"/><text x="74.9995%" y="447.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.20%)</title><rect x="74.7495%" y="421" width="0.2004%" height="15" fill="rgb(239,3,39)" fg:x="373" fg:w="1"/><text x="74.9995%" y="431.50"></text></g><g><title>__GI___close (1 samples, 0.20%)</title><rect x="74.9499%" y="677" width="0.2004%" height="15" fill="rgb(233,210,1)" fg:x="374" fg:w="1"/><text x="75.1999%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.20%)</title><rect x="74.9499%" y="661" width="0.2004%" height="15" fill="rgb(244,137,37)" fg:x="374" fg:w="1"/><text x="75.1999%" y="671.50"></text></g><g><title>do_syscall_64 (1 samples, 0.20%)</title><rect x="74.9499%" y="645" width="0.2004%" height="15" fill="rgb(240,136,2)" fg:x="374" fg:w="1"/><text x="75.1999%" y="655.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.20%)</title><rect x="74.9499%" y="629" width="0.2004%" height="15" fill="rgb(239,18,37)" fg:x="374" fg:w="1"/><text x="75.1999%" y="639.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.20%)</title><rect x="74.9499%" y="613" width="0.2004%" height="15" fill="rgb(218,185,22)" fg:x="374" fg:w="1"/><text x="75.1999%" y="623.50"></text></g><g><title>task_work_run (1 samples, 0.20%)</title><rect x="74.9499%" y="597" width="0.2004%" height="15" fill="rgb(225,218,4)" fg:x="374" fg:w="1"/><text x="75.1999%" y="607.50"></text></g><g><title>__call_rcu_common (1 samples, 0.20%)</title><rect x="74.9499%" y="581" width="0.2004%" height="15" fill="rgb(230,182,32)" fg:x="374" fg:w="1"/><text x="75.1999%" y="591.50"></text></g><g><title>zmem::memory::ProcessMemoryStats::update (295 samples, 59.12%)</title><rect x="16.2325%" y="709" width="59.1182%" height="15" fill="rgb(242,56,43)" fg:x="81" fg:w="295"/><text x="16.4825%" y="719.50">zmem::memory::ProcessMemoryStats::update</text></g><g><title>zmem::utils::get_cmd (3 samples, 0.60%)</title><rect x="74.7495%" y="693" width="0.6012%" height="15" fill="rgb(233,99,24)" fg:x="373" fg:w="3"/><text x="74.9995%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (1 samples, 0.20%)</title><rect x="75.1503%" y="677" width="0.2004%" height="15" fill="rgb(234,209,42)" fg:x="375" fg:w="1"/><text x="75.4003%" y="687.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.20%)</title><rect x="75.1503%" y="661" width="0.2004%" height="15" fill="rgb(227,7,12)" fg:x="375" fg:w="1"/><text x="75.4003%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.20%)</title><rect x="75.1503%" y="645" width="0.2004%" height="15" fill="rgb(245,203,43)" fg:x="375" fg:w="1"/><text x="75.4003%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.20%)</title><rect x="75.1503%" y="629" width="0.2004%" height="15" fill="rgb(238,205,33)" fg:x="375" fg:w="1"/><text x="75.4003%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.20%)</title><rect x="75.1503%" y="613" width="0.2004%" height="15" fill="rgb(231,56,7)" fg:x="375" fg:w="1"/><text x="75.4003%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.20%)</title><rect x="75.1503%" y="597" width="0.2004%" height="15" fill="rgb(244,186,29)" fg:x="375" fg:w="1"/><text x="75.4003%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.20%)</title><rect x="75.1503%" y="581" width="0.2004%" height="15" fill="rgb(234,111,31)" fg:x="375" fg:w="1"/><text x="75.4003%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.20%)</title><rect x="75.1503%" y="565" width="0.2004%" height="15" fill="rgb(241,149,10)" fg:x="375" fg:w="1"/><text x="75.4003%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.20%)</title><rect x="75.1503%" y="549" width="0.2004%" height="15" fill="rgb(249,206,44)" fg:x="375" fg:w="1"/><text x="75.4003%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.20%)</title><rect x="75.1503%" y="533" width="0.2004%" height="15" fill="rgb(251,153,30)" fg:x="375" fg:w="1"/><text x="75.4003%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.20%)</title><rect x="75.1503%" y="517" width="0.2004%" height="15" fill="rgb(239,152,38)" fg:x="375" fg:w="1"/><text x="75.4003%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.20%)</title><rect x="75.1503%" y="501" width="0.2004%" height="15" fill="rgb(249,139,47)" fg:x="375" fg:w="1"/><text x="75.4003%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.20%)</title><rect x="75.1503%" y="485" width="0.2004%" height="15" fill="rgb(244,64,35)" fg:x="375" fg:w="1"/><text x="75.4003%" y="495.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.20%)</title><rect x="75.1503%" y="469" width="0.2004%" height="15" fill="rgb(216,46,15)" fg:x="375" fg:w="1"/><text x="75.4003%" y="479.50"></text></g><g><title>_int_realloc (1 samples, 0.20%)</title><rect x="75.1503%" y="453" width="0.2004%" height="15" fill="rgb(250,74,19)" fg:x="375" fg:w="1"/><text x="75.4003%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 0.20%)</title><rect x="75.1503%" y="437" width="0.2004%" height="15" fill="rgb(249,42,33)" fg:x="375" fg:w="1"/><text x="75.4003%" y="447.50"></text></g><g><title>std::fs::buffer_capacity_required (1 samples, 0.20%)</title><rect x="75.3507%" y="677" width="0.2004%" height="15" fill="rgb(242,149,17)" fg:x="376" fg:w="1"/><text x="75.6007%" y="687.50"></text></g><g><title>std::fs::File::metadata (1 samples, 0.20%)</title><rect x="75.3507%" y="661" width="0.2004%" height="15" fill="rgb(244,29,21)" fg:x="376" fg:w="1"/><text x="75.6007%" y="671.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (1 samples, 0.20%)</title><rect x="75.3507%" y="645" width="0.2004%" height="15" fill="rgb(220,130,37)" fg:x="376" fg:w="1"/><text x="75.6007%" y="655.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.20%)</title><rect x="75.3507%" y="629" width="0.2004%" height="15" fill="rgb(211,67,2)" fg:x="376" fg:w="1"/><text x="75.6007%" y="639.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.20%)</title><rect x="75.3507%" y="613" width="0.2004%" height="15" fill="rgb(235,68,52)" fg:x="376" fg:w="1"/><text x="75.6007%" y="623.50"></text></g><g><title>statx (1 samples, 0.20%)</title><rect x="75.3507%" y="597" width="0.2004%" height="15" fill="rgb(246,142,3)" fg:x="376" fg:w="1"/><text x="75.6007%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.20%)</title><rect x="75.3507%" y="581" width="0.2004%" height="15" fill="rgb(241,25,7)" fg:x="376" fg:w="1"/><text x="75.6007%" y="591.50"></text></g><g><title>do_syscall_64 (1 samples, 0.20%)</title><rect x="75.3507%" y="565" width="0.2004%" height="15" fill="rgb(242,119,39)" fg:x="376" fg:w="1"/><text x="75.6007%" y="575.50"></text></g><g><title>__access_remote_vm (2 samples, 0.40%)</title><rect x="75.5511%" y="453" width="0.4008%" height="15" fill="rgb(241,98,45)" fg:x="377" fg:w="2"/><text x="75.8011%" y="463.50"></text></g><g><title>get_user_pages_remote (2 samples, 0.40%)</title><rect x="75.5511%" y="437" width="0.4008%" height="15" fill="rgb(254,28,30)" fg:x="377" fg:w="2"/><text x="75.8011%" y="447.50"></text></g><g><title>__get_user_pages (2 samples, 0.40%)</title><rect x="75.5511%" y="421" width="0.4008%" height="15" fill="rgb(241,142,54)" fg:x="377" fg:w="2"/><text x="75.8011%" y="431.50"></text></g><g><title>find_extend_vma (2 samples, 0.40%)</title><rect x="75.5511%" y="405" width="0.4008%" height="15" fill="rgb(222,85,15)" fg:x="377" fg:w="2"/><text x="75.8011%" y="415.50"></text></g><g><title>mt_find (1 samples, 0.20%)</title><rect x="75.7515%" y="389" width="0.2004%" height="15" fill="rgb(210,85,47)" fg:x="378" fg:w="1"/><text x="76.0015%" y="399.50"></text></g><g><title>_copy_to_user (1 samples, 0.20%)</title><rect x="75.9519%" y="453" width="0.2004%" height="15" fill="rgb(224,206,25)" fg:x="379" fg:w="1"/><text x="76.2019%" y="463.50"></text></g><g><title>copy_user_generic_string (1 samples, 0.20%)</title><rect x="75.9519%" y="437" width="0.2004%" height="15" fill="rgb(243,201,19)" fg:x="379" fg:w="1"/><text x="76.2019%" y="447.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (300 samples, 60.12%)</title><rect x="16.2325%" y="789" width="60.1202%" height="15" fill="rgb(236,59,4)" fg:x="81" fg:w="300"/><text x="16.4825%" y="799.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (300 samples, 60.12%)</title><rect x="16.2325%" y="773" width="60.1202%" height="15" fill="rgb(254,179,45)" fg:x="81" fg:w="300"/><text x="16.4825%" y="783.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>zmem::process::Processes::update::{{closure}}::{{closure}}::{{closure}} (300 samples, 60.12%)</title><rect x="16.2325%" y="757" width="60.1202%" height="15" fill="rgb(226,14,10)" fg:x="81" fg:w="300"/><text x="16.4825%" y="767.50">zmem::process::Processes::update::{{closure}}::{{closure}}::{{closure}}</text></g><g><title>zmem::process::Process::new (300 samples, 60.12%)</title><rect x="16.2325%" y="741" width="60.1202%" height="15" fill="rgb(244,27,41)" fg:x="81" fg:w="300"/><text x="16.4825%" y="751.50">zmem::process::Process::new</text></g><g><title>zmem::process::Process::update (300 samples, 60.12%)</title><rect x="16.2325%" y="725" width="60.1202%" height="15" fill="rgb(235,35,32)" fg:x="81" fg:w="300"/><text x="16.4825%" y="735.50">zmem::process::Process::update</text></g><g><title>zmem::utils::get_cmd (5 samples, 1.00%)</title><rect x="75.3507%" y="709" width="1.0020%" height="15" fill="rgb(218,68,31)" fg:x="376" fg:w="5"/><text x="75.6007%" y="719.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (5 samples, 1.00%)</title><rect x="75.3507%" y="693" width="1.0020%" height="15" fill="rgb(207,120,37)" fg:x="376" fg:w="5"/><text x="75.6007%" y="703.50"></text></g><g><title>std::io::default_read_to_string (4 samples, 0.80%)</title><rect x="75.5511%" y="677" width="0.8016%" height="15" fill="rgb(227,98,0)" fg:x="377" fg:w="4"/><text x="75.8011%" y="687.50"></text></g><g><title>std::io::append_to_string (4 samples, 0.80%)</title><rect x="75.5511%" y="661" width="0.8016%" height="15" fill="rgb(207,7,3)" fg:x="377" fg:w="4"/><text x="75.8011%" y="671.50"></text></g><g><title>std::io::default_read_to_string::{{closure}} (4 samples, 0.80%)</title><rect x="75.5511%" y="645" width="0.8016%" height="15" fill="rgb(206,98,19)" fg:x="377" fg:w="4"/><text x="75.8011%" y="655.50"></text></g><g><title>std::io::default_read_to_end (4 samples, 0.80%)</title><rect x="75.5511%" y="629" width="0.8016%" height="15" fill="rgb(217,5,26)" fg:x="377" fg:w="4"/><text x="75.8011%" y="639.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (4 samples, 0.80%)</title><rect x="75.5511%" y="613" width="0.8016%" height="15" fill="rgb(235,190,38)" fg:x="377" fg:w="4"/><text x="75.8011%" y="623.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (4 samples, 0.80%)</title><rect x="75.5511%" y="597" width="0.8016%" height="15" fill="rgb(247,86,24)" fg:x="377" fg:w="4"/><text x="75.8011%" y="607.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (4 samples, 0.80%)</title><rect x="75.5511%" y="581" width="0.8016%" height="15" fill="rgb(205,101,16)" fg:x="377" fg:w="4"/><text x="75.8011%" y="591.50"></text></g><g><title>__GI___libc_read (4 samples, 0.80%)</title><rect x="75.5511%" y="565" width="0.8016%" height="15" fill="rgb(246,168,33)" fg:x="377" fg:w="4"/><text x="75.8011%" y="575.50"></text></g><g><title>__GI___libc_read (4 samples, 0.80%)</title><rect x="75.5511%" y="549" width="0.8016%" height="15" fill="rgb(231,114,1)" fg:x="377" fg:w="4"/><text x="75.8011%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.80%)</title><rect x="75.5511%" y="533" width="0.8016%" height="15" fill="rgb(207,184,53)" fg:x="377" fg:w="4"/><text x="75.8011%" y="543.50"></text></g><g><title>do_syscall_64 (4 samples, 0.80%)</title><rect x="75.5511%" y="517" width="0.8016%" height="15" fill="rgb(224,95,51)" fg:x="377" fg:w="4"/><text x="75.8011%" y="527.50"></text></g><g><title>__x64_sys_read (4 samples, 0.80%)</title><rect x="75.5511%" y="501" width="0.8016%" height="15" fill="rgb(212,188,45)" fg:x="377" fg:w="4"/><text x="75.8011%" y="511.50"></text></g><g><title>vfs_read (4 samples, 0.80%)</title><rect x="75.5511%" y="485" width="0.8016%" height="15" fill="rgb(223,154,38)" fg:x="377" fg:w="4"/><text x="75.8011%" y="495.50"></text></g><g><title>proc_pid_cmdline_read (4 samples, 0.80%)</title><rect x="75.5511%" y="469" width="0.8016%" height="15" fill="rgb(251,22,52)" fg:x="377" fg:w="4"/><text x="75.8011%" y="479.50"></text></g><g><title>get_task_mm (1 samples, 0.20%)</title><rect x="76.1523%" y="453" width="0.2004%" height="15" fill="rgb(229,209,22)" fg:x="380" fg:w="1"/><text x="76.4023%" y="463.50"></text></g><g><title>tokio::runtime::coop::budget (307 samples, 61.52%)</title><rect x="15.0301%" y="1013" width="61.5230%" height="15" fill="rgb(234,138,34)" fg:x="75" fg:w="307"/><text x="15.2801%" y="1023.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (307 samples, 61.52%)</title><rect x="15.0301%" y="997" width="61.5230%" height="15" fill="rgb(212,95,11)" fg:x="75" fg:w="307"/><text x="15.2801%" y="1007.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (307 samples, 61.52%)</title><rect x="15.0301%" y="981" width="61.5230%" height="15" fill="rgb(240,179,47)" fg:x="75" fg:w="307"/><text x="15.2801%" y="991.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (307 samples, 61.52%)</title><rect x="15.0301%" y="965" width="61.5230%" height="15" fill="rgb(240,163,11)" fg:x="75" fg:w="307"/><text x="15.2801%" y="975.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (307 samples, 61.52%)</title><rect x="15.0301%" y="949" width="61.5230%" height="15" fill="rgb(236,37,12)" fg:x="75" fg:w="307"/><text x="15.2801%" y="959.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (307 samples, 61.52%)</title><rect x="15.0301%" y="933" width="61.5230%" height="15" fill="rgb(232,164,16)" fg:x="75" fg:w="307"/><text x="15.2801%" y="943.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (301 samples, 60.32%)</title><rect x="16.2325%" y="917" width="60.3206%" height="15" fill="rgb(244,205,15)" fg:x="81" fg:w="301"/><text x="16.4825%" y="927.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (301 samples, 60.32%)</title><rect x="16.2325%" y="901" width="60.3206%" height="15" fill="rgb(223,117,47)" fg:x="81" fg:w="301"/><text x="16.4825%" y="911.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (301 samples, 60.32%)</title><rect x="16.2325%" y="885" width="60.3206%" height="15" fill="rgb(244,107,35)" fg:x="81" fg:w="301"/><text x="16.4825%" y="895.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (301 samples, 60.32%)</title><rect x="16.2325%" y="869" width="60.3206%" height="15" fill="rgb(205,140,8)" fg:x="81" fg:w="301"/><text x="16.4825%" y="879.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (301 samples, 60.32%)</title><rect x="16.2325%" y="853" width="60.3206%" height="15" fill="rgb(228,84,46)" fg:x="81" fg:w="301"/><text x="16.4825%" y="863.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (301 samples, 60.32%)</title><rect x="16.2325%" y="837" width="60.3206%" height="15" fill="rgb(254,188,9)" fg:x="81" fg:w="301"/><text x="16.4825%" y="847.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (301 samples, 60.32%)</title><rect x="16.2325%" y="821" width="60.3206%" height="15" fill="rgb(206,112,54)" fg:x="81" fg:w="301"/><text x="16.4825%" y="831.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (301 samples, 60.32%)</title><rect x="16.2325%" y="805" width="60.3206%" height="15" fill="rgb(216,84,49)" fg:x="81" fg:w="301"/><text x="16.4825%" y="815.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (1 samples, 0.20%)</title><rect x="76.3527%" y="789" width="0.2004%" height="15" fill="rgb(214,194,35)" fg:x="381" fg:w="1"/><text x="76.6027%" y="799.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (1 samples, 0.20%)</title><rect x="76.3527%" y="773" width="0.2004%" height="15" fill="rgb(249,28,3)" fg:x="381" fg:w="1"/><text x="76.6027%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (1 samples, 0.20%)</title><rect x="76.3527%" y="757" width="0.2004%" height="15" fill="rgb(222,56,52)" fg:x="381" fg:w="1"/><text x="76.6027%" y="767.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.20%)</title><rect x="76.3527%" y="741" width="0.2004%" height="15" fill="rgb(245,217,50)" fg:x="381" fg:w="1"/><text x="76.6027%" y="751.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (1 samples, 0.20%)</title><rect x="76.3527%" y="725" width="0.2004%" height="15" fill="rgb(213,201,24)" fg:x="381" fg:w="1"/><text x="76.6027%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (1 samples, 0.20%)</title><rect x="76.3527%" y="709" width="0.2004%" height="15" fill="rgb(248,116,28)" fg:x="381" fg:w="1"/><text x="76.6027%" y="719.50"></text></g><g><title>zmem::process::Process::new (1 samples, 0.20%)</title><rect x="76.3527%" y="693" width="0.2004%" height="15" fill="rgb(219,72,43)" fg:x="381" fg:w="1"/><text x="76.6027%" y="703.50"></text></g><g><title>zmem::process::Process::update (1 samples, 0.20%)</title><rect x="76.3527%" y="677" width="0.2004%" height="15" fill="rgb(209,138,14)" fg:x="381" fg:w="1"/><text x="76.6027%" y="687.50"></text></g><g><title>zmem::memory::ProcessMemoryStats::update (1 samples, 0.20%)</title><rect x="76.3527%" y="661" width="0.2004%" height="15" fill="rgb(222,18,33)" fg:x="381" fg:w="1"/><text x="76.6027%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;&gt; (1 samples, 0.20%)</title><rect x="76.3527%" y="645" width="0.2004%" height="15" fill="rgb(213,199,7)" fg:x="381" fg:w="1"/><text x="76.6027%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::buffered::bufreader::buffer::Buffer&gt; (1 samples, 0.20%)</title><rect x="76.3527%" y="629" width="0.2004%" height="15" fill="rgb(250,110,10)" fg:x="381" fg:w="1"/><text x="76.6027%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[core::mem::maybe_uninit::MaybeUninit&lt;u8&gt;]&gt;&gt; (1 samples, 0.20%)</title><rect x="76.3527%" y="613" width="0.2004%" height="15" fill="rgb(248,123,6)" fg:x="381" fg:w="1"/><text x="76.6027%" y="623.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.20%)</title><rect x="76.3527%" y="597" width="0.2004%" height="15" fill="rgb(206,91,31)" fg:x="381" fg:w="1"/><text x="76.6027%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.20%)</title><rect x="76.3527%" y="581" width="0.2004%" height="15" fill="rgb(211,154,13)" fg:x="381" fg:w="1"/><text x="76.6027%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.20%)</title><rect x="76.3527%" y="565" width="0.2004%" height="15" fill="rgb(225,148,7)" fg:x="381" fg:w="1"/><text x="76.6027%" y="575.50"></text></g><g><title>__GI___close (1 samples, 0.20%)</title><rect x="76.3527%" y="549" width="0.2004%" height="15" fill="rgb(220,160,43)" fg:x="381" fg:w="1"/><text x="76.6027%" y="559.50"></text></g><g><title>error_entry (1 samples, 0.20%)</title><rect x="76.3527%" y="533" width="0.2004%" height="15" fill="rgb(213,52,39)" fg:x="381" fg:w="1"/><text x="76.6027%" y="543.50"></text></g><g><title>get_futex_key (1 samples, 0.20%)</title><rect x="76.5531%" y="869" width="0.2004%" height="15" fill="rgb(243,137,7)" fg:x="382" fg:w="1"/><text x="76.8031%" y="879.50"></text></g><g><title>_find_next_bit (1 samples, 0.20%)</title><rect x="76.7535%" y="821" width="0.2004%" height="15" fill="rgb(230,79,13)" fg:x="383" fg:w="1"/><text x="77.0035%" y="831.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.40%)</title><rect x="76.7535%" y="837" width="0.4008%" height="15" fill="rgb(247,105,23)" fg:x="383" fg:w="2"/><text x="77.0035%" y="847.50"></text></g><g><title>update_cfs_rq_h_load (1 samples, 0.20%)</title><rect x="76.9539%" y="821" width="0.2004%" height="15" fill="rgb(223,179,41)" fg:x="384" fg:w="1"/><text x="77.2039%" y="831.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (4 samples, 0.80%)</title><rect x="76.5531%" y="997" width="0.8016%" height="15" fill="rgb(218,9,34)" fg:x="382" fg:w="4"/><text x="76.8031%" y="1007.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (4 samples, 0.80%)</title><rect x="76.5531%" y="981" width="0.8016%" height="15" fill="rgb(222,106,8)" fg:x="382" fg:w="4"/><text x="76.8031%" y="991.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (4 samples, 0.80%)</title><rect x="76.5531%" y="965" width="0.8016%" height="15" fill="rgb(211,220,0)" fg:x="382" fg:w="4"/><text x="76.8031%" y="975.50"></text></g><g><title>syscall (4 samples, 0.80%)</title><rect x="76.5531%" y="949" width="0.8016%" height="15" fill="rgb(229,52,16)" fg:x="382" fg:w="4"/><text x="76.8031%" y="959.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.80%)</title><rect x="76.5531%" y="933" width="0.8016%" height="15" fill="rgb(212,155,18)" fg:x="382" fg:w="4"/><text x="76.8031%" y="943.50"></text></g><g><title>do_syscall_64 (4 samples, 0.80%)</title><rect x="76.5531%" y="917" width="0.8016%" height="15" fill="rgb(242,21,14)" fg:x="382" fg:w="4"/><text x="76.8031%" y="927.50"></text></g><g><title>__x64_sys_futex (4 samples, 0.80%)</title><rect x="76.5531%" y="901" width="0.8016%" height="15" fill="rgb(222,19,48)" fg:x="382" fg:w="4"/><text x="76.8031%" y="911.50"></text></g><g><title>futex_wake (4 samples, 0.80%)</title><rect x="76.5531%" y="885" width="0.8016%" height="15" fill="rgb(232,45,27)" fg:x="382" fg:w="4"/><text x="76.8031%" y="895.50"></text></g><g><title>wake_up_q (3 samples, 0.60%)</title><rect x="76.7535%" y="869" width="0.6012%" height="15" fill="rgb(249,103,42)" fg:x="383" fg:w="3"/><text x="77.0035%" y="879.50"></text></g><g><title>try_to_wake_up (3 samples, 0.60%)</title><rect x="76.7535%" y="853" width="0.6012%" height="15" fill="rgb(246,81,33)" fg:x="383" fg:w="3"/><text x="77.0035%" y="863.50"></text></g><g><title>update_rq_clock (1 samples, 0.20%)</title><rect x="77.1543%" y="837" width="0.2004%" height="15" fill="rgb(252,33,42)" fg:x="385" fg:w="1"/><text x="77.4043%" y="847.50"></text></g><g><title>psi_account_irqtime (1 samples, 0.20%)</title><rect x="77.1543%" y="821" width="0.2004%" height="15" fill="rgb(209,212,41)" fg:x="385" fg:w="1"/><text x="77.4043%" y="831.50"></text></g><g><title>std::panic::catch_unwind (363 samples, 72.75%)</title><rect x="4.8096%" y="1477" width="72.7455%" height="15" fill="rgb(207,154,6)" fg:x="24" fg:w="363"/><text x="5.0596%" y="1487.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (363 samples, 72.75%)</title><rect x="4.8096%" y="1461" width="72.7455%" height="15" fill="rgb(223,64,47)" fg:x="24" fg:w="363"/><text x="5.0596%" y="1471.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (363 samples, 72.75%)</title><rect x="4.8096%" y="1445" width="72.7455%" height="15" fill="rgb(211,161,38)" fg:x="24" fg:w="363"/><text x="5.0596%" y="1455.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (363 samples, 72.75%)</title><rect x="4.8096%" y="1429" width="72.7455%" height="15" fill="rgb(219,138,40)" fg:x="24" fg:w="363"/><text x="5.0596%" y="1439.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (363 samples, 72.75%)</title><rect x="4.8096%" y="1413" width="72.7455%" height="15" fill="rgb(241,228,46)" fg:x="24" fg:w="363"/><text x="5.0596%" y="1423.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (363 samples, 72.75%)</title><rect x="4.8096%" y="1397" width="72.7455%" height="15" fill="rgb(223,209,38)" fg:x="24" fg:w="363"/><text x="5.0596%" y="1407.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (363 samples, 72.75%)</title><rect x="4.8096%" y="1381" width="72.7455%" height="15" fill="rgb(236,164,45)" fg:x="24" fg:w="363"/><text x="5.0596%" y="1391.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (362 samples, 72.55%)</title><rect x="5.0100%" y="1365" width="72.5451%" height="15" fill="rgb(231,15,5)" fg:x="25" fg:w="362"/><text x="5.2600%" y="1375.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (354 samples, 70.94%)</title><rect x="6.6132%" y="1349" width="70.9419%" height="15" fill="rgb(252,35,15)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1359.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (354 samples, 70.94%)</title><rect x="6.6132%" y="1333" width="70.9419%" height="15" fill="rgb(248,181,18)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1343.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (354 samples, 70.94%)</title><rect x="6.6132%" y="1317" width="70.9419%" height="15" fill="rgb(233,39,42)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1327.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (354 samples, 70.94%)</title><rect x="6.6132%" y="1301" width="70.9419%" height="15" fill="rgb(238,110,33)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1311.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (354 samples, 70.94%)</title><rect x="6.6132%" y="1285" width="70.9419%" height="15" fill="rgb(233,195,10)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1295.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (354 samples, 70.94%)</title><rect x="6.6132%" y="1269" width="70.9419%" height="15" fill="rgb(254,105,3)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1279.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (354 samples, 70.94%)</title><rect x="6.6132%" y="1253" width="70.9419%" height="15" fill="rgb(221,225,9)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1263.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (354 samples, 70.94%)</title><rect x="6.6132%" y="1237" width="70.9419%" height="15" fill="rgb(224,227,45)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1247.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (354 samples, 70.94%)</title><rect x="6.6132%" y="1221" width="70.9419%" height="15" fill="rgb(229,198,43)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1231.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (354 samples, 70.94%)</title><rect x="6.6132%" y="1205" width="70.9419%" height="15" fill="rgb(206,209,35)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1215.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (354 samples, 70.94%)</title><rect x="6.6132%" y="1189" width="70.9419%" height="15" fill="rgb(245,195,53)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1199.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (354 samples, 70.94%)</title><rect x="6.6132%" y="1173" width="70.9419%" height="15" fill="rgb(240,92,26)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1183.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (354 samples, 70.94%)</title><rect x="6.6132%" y="1157" width="70.9419%" height="15" fill="rgb(207,40,23)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1167.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (354 samples, 70.94%)</title><rect x="6.6132%" y="1141" width="70.9419%" height="15" fill="rgb(223,111,35)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1151.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (354 samples, 70.94%)</title><rect x="6.6132%" y="1125" width="70.9419%" height="15" fill="rgb(229,147,28)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1135.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (354 samples, 70.94%)</title><rect x="6.6132%" y="1109" width="70.9419%" height="15" fill="rgb(211,29,28)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1119.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (354 samples, 70.94%)</title><rect x="6.6132%" y="1093" width="70.9419%" height="15" fill="rgb(228,72,33)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1103.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (354 samples, 70.94%)</title><rect x="6.6132%" y="1077" width="70.9419%" height="15" fill="rgb(205,214,31)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1087.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (354 samples, 70.94%)</title><rect x="6.6132%" y="1061" width="70.9419%" height="15" fill="rgb(224,111,15)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1071.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (354 samples, 70.94%)</title><rect x="6.6132%" y="1045" width="70.9419%" height="15" fill="rgb(253,21,26)" fg:x="33" fg:w="354"/><text x="6.8632%" y="1055.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (312 samples, 62.53%)</title><rect x="15.0301%" y="1029" width="62.5251%" height="15" fill="rgb(245,139,43)" fg:x="75" fg:w="312"/><text x="15.2801%" y="1039.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (5 samples, 1.00%)</title><rect x="76.5531%" y="1013" width="1.0020%" height="15" fill="rgb(252,170,7)" fg:x="382" fg:w="5"/><text x="76.8031%" y="1023.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (1 samples, 0.20%)</title><rect x="77.3547%" y="997" width="0.2004%" height="15" fill="rgb(231,118,14)" fg:x="386" fg:w="1"/><text x="77.6047%" y="1007.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (1 samples, 0.20%)</title><rect x="77.3547%" y="981" width="0.2004%" height="15" fill="rgb(238,83,0)" fg:x="386" fg:w="1"/><text x="77.6047%" y="991.50"></text></g><g><title>tokio::runtime::io::Handle::unpark (1 samples, 0.20%)</title><rect x="77.3547%" y="965" width="0.2004%" height="15" fill="rgb(221,39,39)" fg:x="386" fg:w="1"/><text x="77.6047%" y="975.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (1 samples, 0.20%)</title><rect x="77.3547%" y="949" width="0.2004%" height="15" fill="rgb(222,119,46)" fg:x="386" fg:w="1"/><text x="77.6047%" y="959.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.20%)</title><rect x="77.3547%" y="933" width="0.2004%" height="15" fill="rgb(222,165,49)" fg:x="386" fg:w="1"/><text x="77.6047%" y="943.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.20%)</title><rect x="77.3547%" y="917" width="0.2004%" height="15" fill="rgb(219,113,52)" fg:x="386" fg:w="1"/><text x="77.6047%" y="927.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.20%)</title><rect x="77.3547%" y="901" width="0.2004%" height="15" fill="rgb(214,7,15)" fg:x="386" fg:w="1"/><text x="77.6047%" y="911.50"></text></g><g><title>__GI___libc_write (1 samples, 0.20%)</title><rect x="77.3547%" y="885" width="0.2004%" height="15" fill="rgb(235,32,4)" fg:x="386" fg:w="1"/><text x="77.6047%" y="895.50"></text></g><g><title>__GI___libc_write (1 samples, 0.20%)</title><rect x="77.3547%" y="869" width="0.2004%" height="15" fill="rgb(238,90,54)" fg:x="386" fg:w="1"/><text x="77.6047%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.20%)</title><rect x="77.3547%" y="853" width="0.2004%" height="15" fill="rgb(213,208,19)" fg:x="386" fg:w="1"/><text x="77.6047%" y="863.50"></text></g><g><title>do_syscall_64 (1 samples, 0.20%)</title><rect x="77.3547%" y="837" width="0.2004%" height="15" fill="rgb(233,156,4)" fg:x="386" fg:w="1"/><text x="77.6047%" y="847.50"></text></g><g><title>__x64_sys_write (1 samples, 0.20%)</title><rect x="77.3547%" y="821" width="0.2004%" height="15" fill="rgb(207,194,5)" fg:x="386" fg:w="1"/><text x="77.6047%" y="831.50"></text></g><g><title>vfs_write (1 samples, 0.20%)</title><rect x="77.3547%" y="805" width="0.2004%" height="15" fill="rgb(206,111,30)" fg:x="386" fg:w="1"/><text x="77.6047%" y="815.50"></text></g><g><title>eventfd_write (1 samples, 0.20%)</title><rect x="77.3547%" y="789" width="0.2004%" height="15" fill="rgb(243,70,54)" fg:x="386" fg:w="1"/><text x="77.6047%" y="799.50"></text></g><g><title>__wake_up_locked_key (1 samples, 0.20%)</title><rect x="77.3547%" y="773" width="0.2004%" height="15" fill="rgb(242,28,8)" fg:x="386" fg:w="1"/><text x="77.6047%" y="783.50"></text></g><g><title>ep_poll_callback (1 samples, 0.20%)</title><rect x="77.3547%" y="757" width="0.2004%" height="15" fill="rgb(219,106,18)" fg:x="386" fg:w="1"/><text x="77.6047%" y="767.50"></text></g><g><title>__wake_up (1 samples, 0.20%)</title><rect x="77.3547%" y="741" width="0.2004%" height="15" fill="rgb(244,222,10)" fg:x="386" fg:w="1"/><text x="77.6047%" y="751.50"></text></g><g><title>__wake_up_common (1 samples, 0.20%)</title><rect x="77.3547%" y="725" width="0.2004%" height="15" fill="rgb(236,179,52)" fg:x="386" fg:w="1"/><text x="77.6047%" y="735.50"></text></g><g><title>ep_autoremove_wake_function (1 samples, 0.20%)</title><rect x="77.3547%" y="709" width="0.2004%" height="15" fill="rgb(213,23,39)" fg:x="386" fg:w="1"/><text x="77.6047%" y="719.50"></text></g><g><title>try_to_wake_up (1 samples, 0.20%)</title><rect x="77.3547%" y="693" width="0.2004%" height="15" fill="rgb(238,48,10)" fg:x="386" fg:w="1"/><text x="77.6047%" y="703.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.20%)</title><rect x="77.3547%" y="677" width="0.2004%" height="15" fill="rgb(251,196,23)" fg:x="386" fg:w="1"/><text x="77.6047%" y="687.50"></text></g><g><title>available_idle_cpu (1 samples, 0.20%)</title><rect x="77.3547%" y="661" width="0.2004%" height="15" fill="rgb(250,152,24)" fg:x="386" fg:w="1"/><text x="77.6047%" y="671.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.20%)</title><rect x="77.5551%" y="1317" width="0.2004%" height="15" fill="rgb(209,150,17)" fg:x="387" fg:w="1"/><text x="77.8051%" y="1327.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.20%)</title><rect x="77.5551%" y="1301" width="0.2004%" height="15" fill="rgb(234,202,34)" fg:x="387" fg:w="1"/><text x="77.8051%" y="1311.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.20%)</title><rect x="77.5551%" y="1285" width="0.2004%" height="15" fill="rgb(253,148,53)" fg:x="387" fg:w="1"/><text x="77.8051%" y="1295.50"></text></g><g><title>do_syscall_64 (1 samples, 0.20%)</title><rect x="77.5551%" y="1269" width="0.2004%" height="15" fill="rgb(218,129,16)" fg:x="387" fg:w="1"/><text x="77.8051%" y="1279.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.20%)</title><rect x="77.5551%" y="1253" width="0.2004%" height="15" fill="rgb(216,85,19)" fg:x="387" fg:w="1"/><text x="77.8051%" y="1263.50"></text></g><g><title>up_write (1 samples, 0.20%)</title><rect x="77.5551%" y="1237" width="0.2004%" height="15" fill="rgb(235,228,7)" fg:x="387" fg:w="1"/><text x="77.8051%" y="1247.50"></text></g><g><title>rwsem_mark_wake (1 samples, 0.20%)</title><rect x="77.5551%" y="1221" width="0.2004%" height="15" fill="rgb(245,175,0)" fg:x="387" fg:w="1"/><text x="77.8051%" y="1231.50"></text></g><g><title>lru_add_drain (1 samples, 0.20%)</title><rect x="77.7555%" y="1205" width="0.2004%" height="15" fill="rgb(208,168,36)" fg:x="388" fg:w="1"/><text x="78.0055%" y="1215.50"></text></g><g><title>lru_add_drain_cpu (1 samples, 0.20%)</title><rect x="77.7555%" y="1189" width="0.2004%" height="15" fill="rgb(246,171,24)" fg:x="388" fg:w="1"/><text x="78.0055%" y="1199.50"></text></g><g><title>lru_add_fn (1 samples, 0.20%)</title><rect x="77.7555%" y="1173" width="0.2004%" height="15" fill="rgb(215,142,24)" fg:x="388" fg:w="1"/><text x="78.0055%" y="1183.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.20%)</title><rect x="77.7555%" y="1157" width="0.2004%" height="15" fill="rgb(250,187,7)" fg:x="388" fg:w="1"/><text x="78.0055%" y="1167.50"></text></g><g><title>__GI_munmap (2 samples, 0.40%)</title><rect x="77.7555%" y="1317" width="0.4008%" height="15" fill="rgb(228,66,33)" fg:x="388" fg:w="2"/><text x="78.0055%" y="1327.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.40%)</title><rect x="77.7555%" y="1301" width="0.4008%" height="15" fill="rgb(234,215,21)" fg:x="388" fg:w="2"/><text x="78.0055%" y="1311.50"></text></g><g><title>do_syscall_64 (2 samples, 0.40%)</title><rect x="77.7555%" y="1285" width="0.4008%" height="15" fill="rgb(222,191,20)" fg:x="388" fg:w="2"/><text x="78.0055%" y="1295.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.40%)</title><rect x="77.7555%" y="1269" width="0.4008%" height="15" fill="rgb(245,79,54)" fg:x="388" fg:w="2"/><text x="78.0055%" y="1279.50"></text></g><g><title>__vm_munmap (2 samples, 0.40%)</title><rect x="77.7555%" y="1253" width="0.4008%" height="15" fill="rgb(240,10,37)" fg:x="388" fg:w="2"/><text x="78.0055%" y="1263.50"></text></g><g><title>do_vmi_munmap (2 samples, 0.40%)</title><rect x="77.7555%" y="1237" width="0.4008%" height="15" fill="rgb(214,192,32)" fg:x="388" fg:w="2"/><text x="78.0055%" y="1247.50"></text></g><g><title>do_vmi_align_munmap (2 samples, 0.40%)</title><rect x="77.7555%" y="1221" width="0.4008%" height="15" fill="rgb(209,36,54)" fg:x="388" fg:w="2"/><text x="78.0055%" y="1231.50"></text></g><g><title>unmap_vmas (1 samples, 0.20%)</title><rect x="77.9559%" y="1205" width="0.2004%" height="15" fill="rgb(220,10,11)" fg:x="389" fg:w="1"/><text x="78.2059%" y="1215.50"></text></g><g><title>mas_find (1 samples, 0.20%)</title><rect x="77.9559%" y="1189" width="0.2004%" height="15" fill="rgb(221,106,17)" fg:x="389" fg:w="1"/><text x="78.2059%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (367 samples, 73.55%)</title><rect x="4.8096%" y="1541" width="73.5471%" height="15" fill="rgb(251,142,44)" fg:x="24" fg:w="367"/><text x="5.0596%" y="1551.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (367 samples, 73.55%)</title><rect x="4.8096%" y="1525" width="73.5471%" height="15" fill="rgb(238,13,15)" fg:x="24" fg:w="367"/><text x="5.0596%" y="1535.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (367 samples, 73.55%)</title><rect x="4.8096%" y="1509" width="73.5471%" height="15" fill="rgb(208,107,27)" fg:x="24" fg:w="367"/><text x="5.0596%" y="1519.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (367 samples, 73.55%)</title><rect x="4.8096%" y="1493" width="73.5471%" height="15" fill="rgb(205,136,37)" fg:x="24" fg:w="367"/><text x="5.0596%" y="1503.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (4 samples, 0.80%)</title><rect x="77.5551%" y="1477" width="0.8016%" height="15" fill="rgb(250,205,27)" fg:x="387" fg:w="4"/><text x="77.8051%" y="1487.50"></text></g><g><title>__pthread_getattr_np (4 samples, 0.80%)</title><rect x="77.5551%" y="1461" width="0.8016%" height="15" fill="rgb(210,80,43)" fg:x="387" fg:w="4"/><text x="77.8051%" y="1471.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.80%)</title><rect x="77.5551%" y="1445" width="0.8016%" height="15" fill="rgb(247,160,36)" fg:x="387" fg:w="4"/><text x="77.8051%" y="1455.50"></text></g><g><title>tcache_init (4 samples, 0.80%)</title><rect x="77.5551%" y="1429" width="0.8016%" height="15" fill="rgb(234,13,49)" fg:x="387" fg:w="4"/><text x="77.8051%" y="1439.50"></text></g><g><title>tcache_init (4 samples, 0.80%)</title><rect x="77.5551%" y="1413" width="0.8016%" height="15" fill="rgb(234,122,0)" fg:x="387" fg:w="4"/><text x="77.8051%" y="1423.50"></text></g><g><title>arena_get2 (4 samples, 0.80%)</title><rect x="77.5551%" y="1397" width="0.8016%" height="15" fill="rgb(207,146,38)" fg:x="387" fg:w="4"/><text x="77.8051%" y="1407.50"></text></g><g><title>arena_get2 (4 samples, 0.80%)</title><rect x="77.5551%" y="1381" width="0.8016%" height="15" fill="rgb(207,177,25)" fg:x="387" fg:w="4"/><text x="77.8051%" y="1391.50"></text></g><g><title>_int_new_arena (4 samples, 0.80%)</title><rect x="77.5551%" y="1365" width="0.8016%" height="15" fill="rgb(211,178,42)" fg:x="387" fg:w="4"/><text x="77.8051%" y="1375.50"></text></g><g><title>new_heap (4 samples, 0.80%)</title><rect x="77.5551%" y="1349" width="0.8016%" height="15" fill="rgb(230,69,54)" fg:x="387" fg:w="4"/><text x="77.8051%" y="1359.50"></text></g><g><title>alloc_new_heap (4 samples, 0.80%)</title><rect x="77.5551%" y="1333" width="0.8016%" height="15" fill="rgb(214,135,41)" fg:x="387" fg:w="4"/><text x="77.8051%" y="1343.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.20%)</title><rect x="78.1563%" y="1317" width="0.2004%" height="15" fill="rgb(237,67,25)" fg:x="390" fg:w="1"/><text x="78.4063%" y="1327.50"></text></g><g><title>exc_page_fault (1 samples, 0.20%)</title><rect x="78.1563%" y="1301" width="0.2004%" height="15" fill="rgb(222,189,50)" fg:x="390" fg:w="1"/><text x="78.4063%" y="1311.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.20%)</title><rect x="78.1563%" y="1285" width="0.2004%" height="15" fill="rgb(245,148,34)" fg:x="390" fg:w="1"/><text x="78.4063%" y="1295.50"></text></g><g><title>handle_mm_fault (1 samples, 0.20%)</title><rect x="78.1563%" y="1269" width="0.2004%" height="15" fill="rgb(222,29,6)" fg:x="390" fg:w="1"/><text x="78.4063%" y="1279.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.20%)</title><rect x="78.1563%" y="1253" width="0.2004%" height="15" fill="rgb(221,189,43)" fg:x="390" fg:w="1"/><text x="78.4063%" y="1263.50"></text></g><g><title>do_vmi_align_munmap (1 samples, 0.20%)</title><rect x="78.3567%" y="1397" width="0.2004%" height="15" fill="rgb(207,36,27)" fg:x="391" fg:w="1"/><text x="78.6067%" y="1407.50"></text></g><g><title>do_vmi_munmap (2 samples, 0.40%)</title><rect x="78.3567%" y="1413" width="0.4008%" height="15" fill="rgb(217,90,24)" fg:x="391" fg:w="2"/><text x="78.6067%" y="1423.50"></text></g><g><title>mas_find (1 samples, 0.20%)</title><rect x="78.5571%" y="1397" width="0.2004%" height="15" fill="rgb(224,66,35)" fg:x="392" fg:w="1"/><text x="78.8071%" y="1407.50"></text></g><g><title>mas_walk (1 samples, 0.20%)</title><rect x="78.5571%" y="1381" width="0.2004%" height="15" fill="rgb(221,13,50)" fg:x="392" fg:w="1"/><text x="78.8071%" y="1391.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.20%)</title><rect x="78.7575%" y="1381" width="0.2004%" height="15" fill="rgb(236,68,49)" fg:x="393" fg:w="1"/><text x="79.0075%" y="1391.50"></text></g><g><title>osq_lock (1 samples, 0.20%)</title><rect x="78.9579%" y="1381" width="0.2004%" height="15" fill="rgb(229,146,28)" fg:x="394" fg:w="1"/><text x="79.2079%" y="1391.50"></text></g><g><title>rwsem_spin_on_owner (1 samples, 0.20%)</title><rect x="79.1583%" y="1381" width="0.2004%" height="15" fill="rgb(225,31,38)" fg:x="395" fg:w="1"/><text x="79.4083%" y="1391.50"></text></g><g><title>clone3 (390 samples, 78.16%)</title><rect x="1.6032%" y="1589" width="78.1563%" height="15" fill="rgb(250,208,3)" fg:x="8" fg:w="390"/><text x="1.8532%" y="1599.50">clone3</text></g><g><title>start_thread (390 samples, 78.16%)</title><rect x="1.6032%" y="1573" width="78.1563%" height="15" fill="rgb(246,54,23)" fg:x="8" fg:w="390"/><text x="1.8532%" y="1583.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (374 samples, 74.95%)</title><rect x="4.8096%" y="1557" width="74.9499%" height="15" fill="rgb(243,76,11)" fg:x="24" fg:w="374"/><text x="5.0596%" y="1567.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (7 samples, 1.40%)</title><rect x="78.3567%" y="1541" width="1.4028%" height="15" fill="rgb(245,21,50)" fg:x="391" fg:w="7"/><text x="78.6067%" y="1551.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (7 samples, 1.40%)</title><rect x="78.3567%" y="1525" width="1.4028%" height="15" fill="rgb(228,9,43)" fg:x="391" fg:w="7"/><text x="78.6067%" y="1535.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (7 samples, 1.40%)</title><rect x="78.3567%" y="1509" width="1.4028%" height="15" fill="rgb(208,100,47)" fg:x="391" fg:w="7"/><text x="78.6067%" y="1519.50"></text></g><g><title>__GI_munmap (7 samples, 1.40%)</title><rect x="78.3567%" y="1493" width="1.4028%" height="15" fill="rgb(232,26,8)" fg:x="391" fg:w="7"/><text x="78.6067%" y="1503.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 1.40%)</title><rect x="78.3567%" y="1477" width="1.4028%" height="15" fill="rgb(216,166,38)" fg:x="391" fg:w="7"/><text x="78.6067%" y="1487.50"></text></g><g><title>do_syscall_64 (7 samples, 1.40%)</title><rect x="78.3567%" y="1461" width="1.4028%" height="15" fill="rgb(251,202,51)" fg:x="391" fg:w="7"/><text x="78.6067%" y="1471.50"></text></g><g><title>__x64_sys_munmap (7 samples, 1.40%)</title><rect x="78.3567%" y="1445" width="1.4028%" height="15" fill="rgb(254,216,34)" fg:x="391" fg:w="7"/><text x="78.6067%" y="1455.50"></text></g><g><title>__vm_munmap (7 samples, 1.40%)</title><rect x="78.3567%" y="1429" width="1.4028%" height="15" fill="rgb(251,32,27)" fg:x="391" fg:w="7"/><text x="78.6067%" y="1439.50"></text></g><g><title>down_write_killable (5 samples, 1.00%)</title><rect x="78.7575%" y="1413" width="1.0020%" height="15" fill="rgb(208,127,28)" fg:x="393" fg:w="5"/><text x="79.0075%" y="1423.50"></text></g><g><title>rwsem_down_write_slowpath (5 samples, 1.00%)</title><rect x="78.7575%" y="1397" width="1.0020%" height="15" fill="rgb(224,137,22)" fg:x="393" fg:w="5"/><text x="79.0075%" y="1407.50"></text></g><g><title>schedule_preempt_disabled (2 samples, 0.40%)</title><rect x="79.3587%" y="1381" width="0.4008%" height="15" fill="rgb(254,70,32)" fg:x="396" fg:w="2"/><text x="79.6087%" y="1391.50"></text></g><g><title>__schedule (2 samples, 0.40%)</title><rect x="79.3587%" y="1365" width="0.4008%" height="15" fill="rgb(229,75,37)" fg:x="396" fg:w="2"/><text x="79.6087%" y="1375.50"></text></g><g><title>finish_task_switch.isra.0 (2 samples, 0.40%)</title><rect x="79.3587%" y="1349" width="0.4008%" height="15" fill="rgb(252,64,23)" fg:x="396" fg:w="2"/><text x="79.6087%" y="1359.50"></text></g><g><title>[vmlinux] (1 samples, 0.20%)</title><rect x="79.7595%" y="1557" width="0.2004%" height="15" fill="rgb(232,162,48)" fg:x="398" fg:w="1"/><text x="80.0095%" y="1567.50"></text></g><g><title>do_exit (1 samples, 0.20%)</title><rect x="79.7595%" y="1541" width="0.2004%" height="15" fill="rgb(246,160,12)" fg:x="398" fg:w="1"/><text x="80.0095%" y="1551.50"></text></g><g><title>exit_thread (1 samples, 0.20%)</title><rect x="79.7595%" y="1525" width="0.2004%" height="15" fill="rgb(247,166,0)" fg:x="398" fg:w="1"/><text x="80.0095%" y="1535.50"></text></g><g><title>tokio-runtime-w (396 samples, 79.36%)</title><rect x="0.8016%" y="1605" width="79.3587%" height="15" fill="rgb(249,219,21)" fg:x="4" fg:w="396"/><text x="1.0516%" y="1615.50">tokio-runtime-w</text></g><g><title>entry_SYSCALL_64 (2 samples, 0.40%)</title><rect x="79.7595%" y="1589" width="0.4008%" height="15" fill="rgb(205,209,3)" fg:x="398" fg:w="2"/><text x="80.0095%" y="1599.50"></text></g><g><title>do_syscall_64 (2 samples, 0.40%)</title><rect x="79.7595%" y="1573" width="0.4008%" height="15" fill="rgb(243,44,1)" fg:x="398" fg:w="2"/><text x="80.0095%" y="1583.50"></text></g><g><title>__x64_sys_madvise (1 samples, 0.20%)</title><rect x="79.9599%" y="1557" width="0.2004%" height="15" fill="rgb(206,159,16)" fg:x="399" fg:w="1"/><text x="80.2099%" y="1567.50"></text></g><g><title>do_madvise (1 samples, 0.20%)</title><rect x="79.9599%" y="1541" width="0.2004%" height="15" fill="rgb(244,77,30)" fg:x="399" fg:w="1"/><text x="80.2099%" y="1551.50"></text></g><g><title>zap_page_range_single (1 samples, 0.20%)</title><rect x="79.9599%" y="1525" width="0.2004%" height="15" fill="rgb(218,69,12)" fg:x="399" fg:w="1"/><text x="80.2099%" y="1535.50"></text></g><g><title>unmap_page_range (1 samples, 0.20%)</title><rect x="79.9599%" y="1509" width="0.2004%" height="15" fill="rgb(212,87,7)" fg:x="399" fg:w="1"/><text x="80.2099%" y="1519.50"></text></g><g><title>__split_huge_pmd (1 samples, 0.20%)</title><rect x="79.9599%" y="1493" width="0.2004%" height="15" fill="rgb(245,114,25)" fg:x="399" fg:w="1"/><text x="80.2099%" y="1503.50"></text></g><g><title>page_add_anon_rmap (1 samples, 0.20%)</title><rect x="79.9599%" y="1477" width="0.2004%" height="15" fill="rgb(210,61,42)" fg:x="399" fg:w="1"/><text x="80.2099%" y="1487.50"></text></g><g><title>__x86_indirect_thunk_array (3 samples, 0.60%)</title><rect x="80.3607%" y="1557" width="0.6012%" height="15" fill="rgb(211,52,33)" fg:x="401" fg:w="3"/><text x="80.6107%" y="1567.50"></text></g><g><title>schedule_tail (5 samples, 1.00%)</title><rect x="80.9619%" y="1541" width="1.0020%" height="15" fill="rgb(234,58,33)" fg:x="404" fg:w="5"/><text x="81.2119%" y="1551.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 1.00%)</title><rect x="80.9619%" y="1525" width="1.0020%" height="15" fill="rgb(220,115,36)" fg:x="404" fg:w="5"/><text x="81.2119%" y="1535.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 1.00%)</title><rect x="80.9619%" y="1509" width="1.0020%" height="15" fill="rgb(243,153,54)" fg:x="404" fg:w="5"/><text x="81.2119%" y="1519.50"></text></g><g><title>ctx_sched_in (5 samples, 1.00%)</title><rect x="80.9619%" y="1493" width="1.0020%" height="15" fill="rgb(251,47,18)" fg:x="404" fg:w="5"/><text x="81.2119%" y="1503.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (5 samples, 1.00%)</title><rect x="80.9619%" y="1477" width="1.0020%" height="15" fill="rgb(242,102,42)" fg:x="404" fg:w="5"/><text x="81.2119%" y="1487.50"></text></g><g><title>merge_sched_in (5 samples, 1.00%)</title><rect x="80.9619%" y="1461" width="1.0020%" height="15" fill="rgb(234,31,38)" fg:x="404" fg:w="5"/><text x="81.2119%" y="1471.50"></text></g><g><title>event_sched_in (4 samples, 0.80%)</title><rect x="81.1623%" y="1445" width="0.8016%" height="15" fill="rgb(221,117,51)" fg:x="405" fg:w="4"/><text x="81.4123%" y="1455.50"></text></g><g><title>[[heap]] (10 samples, 2.00%)</title><rect x="80.1603%" y="1589" width="2.0040%" height="15" fill="rgb(212,20,18)" fg:x="400" fg:w="10"/><text x="80.4103%" y="1599.50">[..</text></g><g><title>clone3 (10 samples, 2.00%)</title><rect x="80.1603%" y="1573" width="2.0040%" height="15" fill="rgb(245,133,36)" fg:x="400" fg:w="10"/><text x="80.4103%" y="1583.50">c..</text></g><g><title>ret_from_fork (6 samples, 1.20%)</title><rect x="80.9619%" y="1557" width="1.2024%" height="15" fill="rgb(212,6,19)" fg:x="404" fg:w="6"/><text x="81.2119%" y="1567.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.20%)</title><rect x="81.9639%" y="1541" width="0.2004%" height="15" fill="rgb(218,1,36)" fg:x="409" fg:w="1"/><text x="82.2139%" y="1551.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.20%)</title><rect x="81.9639%" y="1525" width="0.2004%" height="15" fill="rgb(246,84,54)" fg:x="409" fg:w="1"/><text x="82.2139%" y="1535.50"></text></g><g><title>switch_fpu_return (1 samples, 0.20%)</title><rect x="81.9639%" y="1509" width="0.2004%" height="15" fill="rgb(242,110,6)" fg:x="409" fg:w="1"/><text x="82.2139%" y="1519.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.20%)</title><rect x="81.9639%" y="1493" width="0.2004%" height="15" fill="rgb(214,47,5)" fg:x="409" fg:w="1"/><text x="82.2139%" y="1503.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.20%)</title><rect x="82.1643%" y="1573" width="0.2004%" height="15" fill="rgb(218,159,25)" fg:x="410" fg:w="1"/><text x="82.4143%" y="1583.50"></text></g><g><title>[unknown] (2 samples, 0.40%)</title><rect x="82.1643%" y="1589" width="0.4008%" height="15" fill="rgb(215,211,28)" fg:x="410" fg:w="2"/><text x="82.4143%" y="1599.50"></text></g><g><title>do_lookup_x (1 samples, 0.20%)</title><rect x="82.3647%" y="1573" width="0.2004%" height="15" fill="rgb(238,59,32)" fg:x="411" fg:w="1"/><text x="82.6147%" y="1583.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.20%)</title><rect x="82.5651%" y="1589" width="0.2004%" height="15" fill="rgb(226,82,3)" fg:x="412" fg:w="1"/><text x="82.8151%" y="1599.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.20%)</title><rect x="82.9659%" y="885" width="0.2004%" height="15" fill="rgb(240,164,32)" fg:x="414" fg:w="1"/><text x="83.2159%" y="895.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.40%)</title><rect x="82.9659%" y="949" width="0.4008%" height="15" fill="rgb(232,46,7)" fg:x="414" fg:w="2"/><text x="83.2159%" y="959.50"></text></g><g><title>futex_wait (2 samples, 0.40%)</title><rect x="82.9659%" y="933" width="0.4008%" height="15" fill="rgb(229,129,53)" fg:x="414" fg:w="2"/><text x="83.2159%" y="943.50"></text></g><g><title>schedule (2 samples, 0.40%)</title><rect x="82.9659%" y="917" width="0.4008%" height="15" fill="rgb(234,188,29)" fg:x="414" fg:w="2"/><text x="83.2159%" y="927.50"></text></g><g><title>__schedule (2 samples, 0.40%)</title><rect x="82.9659%" y="901" width="0.4008%" height="15" fill="rgb(246,141,4)" fg:x="414" fg:w="2"/><text x="83.2159%" y="911.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.20%)</title><rect x="83.1663%" y="885" width="0.2004%" height="15" fill="rgb(229,23,39)" fg:x="415" fg:w="1"/><text x="83.4163%" y="895.50"></text></g><g><title>newidle_balance (1 samples, 0.20%)</title><rect x="83.1663%" y="869" width="0.2004%" height="15" fill="rgb(206,12,3)" fg:x="415" fg:w="1"/><text x="83.4163%" y="879.50"></text></g><g><title>update_blocked_averages (1 samples, 0.20%)</title><rect x="83.1663%" y="853" width="0.2004%" height="15" fill="rgb(252,226,20)" fg:x="415" fg:w="1"/><text x="83.4163%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::runtime::Runtime&gt; (5 samples, 1.00%)</title><rect x="82.7655%" y="1317" width="1.0020%" height="15" fill="rgb(216,123,35)" fg:x="413" fg:w="5"/><text x="83.0155%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::blocking::pool::BlockingPool&gt; (5 samples, 1.00%)</title><rect x="82.7655%" y="1301" width="1.0020%" height="15" fill="rgb(212,68,40)" fg:x="413" fg:w="5"/><text x="83.0155%" y="1311.50"></text></g><g><title>tokio::runtime::blocking::pool::BlockingPool::shutdown (5 samples, 1.00%)</title><rect x="82.7655%" y="1285" width="1.0020%" height="15" fill="rgb(254,125,32)" fg:x="413" fg:w="5"/><text x="83.0155%" y="1295.50"></text></g><g><title>tokio::runtime::blocking::shutdown::Receiver::wait (5 samples, 1.00%)</title><rect x="82.7655%" y="1269" width="1.0020%" height="15" fill="rgb(253,97,22)" fg:x="413" fg:w="5"/><text x="83.0155%" y="1279.50"></text></g><g><title>tokio::runtime::context::BlockingRegionGuard::block_on (5 samples, 1.00%)</title><rect x="82.7655%" y="1253" width="1.0020%" height="15" fill="rgb(241,101,14)" fg:x="413" fg:w="5"/><text x="83.0155%" y="1263.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (5 samples, 1.00%)</title><rect x="82.7655%" y="1237" width="1.0020%" height="15" fill="rgb(238,103,29)" fg:x="413" fg:w="5"/><text x="83.0155%" y="1247.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park (5 samples, 1.00%)</title><rect x="82.7655%" y="1221" width="1.0020%" height="15" fill="rgb(233,195,47)" fg:x="413" fg:w="5"/><text x="83.0155%" y="1231.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::with_current (5 samples, 1.00%)</title><rect x="82.7655%" y="1205" width="1.0020%" height="15" fill="rgb(246,218,30)" fg:x="413" fg:w="5"/><text x="83.0155%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 1.00%)</title><rect x="82.7655%" y="1189" width="1.0020%" height="15" fill="rgb(219,145,47)" fg:x="413" fg:w="5"/><text x="83.0155%" y="1199.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::with_current::{{closure}} (5 samples, 1.00%)</title><rect x="82.7655%" y="1173" width="1.0020%" height="15" fill="rgb(243,12,26)" fg:x="413" fg:w="5"/><text x="83.0155%" y="1183.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park::{{closure}} (5 samples, 1.00%)</title><rect x="82.7655%" y="1157" width="1.0020%" height="15" fill="rgb(214,87,16)" fg:x="413" fg:w="5"/><text x="83.0155%" y="1167.50"></text></g><g><title>tokio::runtime::park::Inner::park (5 samples, 1.00%)</title><rect x="82.7655%" y="1141" width="1.0020%" height="15" fill="rgb(208,99,42)" fg:x="413" fg:w="5"/><text x="83.0155%" y="1151.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (4 samples, 0.80%)</title><rect x="82.9659%" y="1125" width="0.8016%" height="15" fill="rgb(253,99,2)" fg:x="414" fg:w="4"/><text x="83.2159%" y="1135.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (4 samples, 0.80%)</title><rect x="82.9659%" y="1109" width="0.8016%" height="15" fill="rgb(220,168,23)" fg:x="414" fg:w="4"/><text x="83.2159%" y="1119.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (4 samples, 0.80%)</title><rect x="82.9659%" y="1093" width="0.8016%" height="15" fill="rgb(242,38,24)" fg:x="414" fg:w="4"/><text x="83.2159%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::park (4 samples, 0.80%)</title><rect x="82.9659%" y="1077" width="0.8016%" height="15" fill="rgb(225,182,9)" fg:x="414" fg:w="4"/><text x="83.2159%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (4 samples, 0.80%)</title><rect x="82.9659%" y="1061" width="0.8016%" height="15" fill="rgb(243,178,37)" fg:x="414" fg:w="4"/><text x="83.2159%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (4 samples, 0.80%)</title><rect x="82.9659%" y="1045" width="0.8016%" height="15" fill="rgb(232,139,19)" fg:x="414" fg:w="4"/><text x="83.2159%" y="1055.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (4 samples, 0.80%)</title><rect x="82.9659%" y="1029" width="0.8016%" height="15" fill="rgb(225,201,24)" fg:x="414" fg:w="4"/><text x="83.2159%" y="1039.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (4 samples, 0.80%)</title><rect x="82.9659%" y="1013" width="0.8016%" height="15" fill="rgb(221,47,46)" fg:x="414" fg:w="4"/><text x="83.2159%" y="1023.50"></text></g><g><title>syscall (4 samples, 0.80%)</title><rect x="82.9659%" y="997" width="0.8016%" height="15" fill="rgb(249,23,13)" fg:x="414" fg:w="4"/><text x="83.2159%" y="1007.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.80%)</title><rect x="82.9659%" y="981" width="0.8016%" height="15" fill="rgb(219,9,5)" fg:x="414" fg:w="4"/><text x="83.2159%" y="991.50"></text></g><g><title>do_syscall_64 (4 samples, 0.80%)</title><rect x="82.9659%" y="965" width="0.8016%" height="15" fill="rgb(254,171,16)" fg:x="414" fg:w="4"/><text x="83.2159%" y="975.50"></text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.40%)</title><rect x="83.3667%" y="949" width="0.4008%" height="15" fill="rgb(230,171,20)" fg:x="416" fg:w="2"/><text x="83.6167%" y="959.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.20%)</title><rect x="83.5671%" y="933" width="0.2004%" height="15" fill="rgb(210,71,41)" fg:x="417" fg:w="1"/><text x="83.8171%" y="943.50"></text></g><g><title>tokio::runtime::builder::Builder::build (4 samples, 0.80%)</title><rect x="83.7675%" y="1317" width="0.8016%" height="15" fill="rgb(206,173,20)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1327.50"></text></g><g><title>tokio::runtime::builder::Builder::build_threaded_runtime (4 samples, 0.80%)</title><rect x="83.7675%" y="1301" width="0.8016%" height="15" fill="rgb(233,88,34)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch (4 samples, 0.80%)</title><rect x="83.7675%" y="1285" width="0.8016%" height="15" fill="rgb(223,209,46)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1295.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (4 samples, 0.80%)</title><rect x="83.7675%" y="1269" width="0.8016%" height="15" fill="rgb(250,43,18)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1279.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (4 samples, 0.80%)</title><rect x="83.7675%" y="1253" width="0.8016%" height="15" fill="rgb(208,13,10)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1263.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (4 samples, 0.80%)</title><rect x="83.7675%" y="1237" width="0.8016%" height="15" fill="rgb(212,200,36)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1247.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (4 samples, 0.80%)</title><rect x="83.7675%" y="1221" width="0.8016%" height="15" fill="rgb(225,90,30)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1231.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (4 samples, 0.80%)</title><rect x="83.7675%" y="1205" width="0.8016%" height="15" fill="rgb(236,182,39)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.80%)</title><rect x="83.7675%" y="1189" width="0.8016%" height="15" fill="rgb(212,144,35)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1199.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.80%)</title><rect x="83.7675%" y="1173" width="0.8016%" height="15" fill="rgb(228,63,44)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.80%)</title><rect x="83.7675%" y="1157" width="0.8016%" height="15" fill="rgb(228,109,6)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1167.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (4 samples, 0.80%)</title><rect x="83.7675%" y="1141" width="0.8016%" height="15" fill="rgb(238,117,24)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::park (4 samples, 0.80%)</title><rect x="83.7675%" y="1125" width="0.8016%" height="15" fill="rgb(242,26,26)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (4 samples, 0.80%)</title><rect x="83.7675%" y="1109" width="0.8016%" height="15" fill="rgb(221,92,48)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (4 samples, 0.80%)</title><rect x="83.7675%" y="1093" width="0.8016%" height="15" fill="rgb(209,209,32)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1103.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (4 samples, 0.80%)</title><rect x="83.7675%" y="1077" width="0.8016%" height="15" fill="rgb(221,70,22)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1087.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (4 samples, 0.80%)</title><rect x="83.7675%" y="1061" width="0.8016%" height="15" fill="rgb(248,145,5)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1071.50"></text></g><g><title>syscall (4 samples, 0.80%)</title><rect x="83.7675%" y="1045" width="0.8016%" height="15" fill="rgb(226,116,26)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1055.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.80%)</title><rect x="83.7675%" y="1029" width="0.8016%" height="15" fill="rgb(244,5,17)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1039.50"></text></g><g><title>do_syscall_64 (4 samples, 0.80%)</title><rect x="83.7675%" y="1013" width="0.8016%" height="15" fill="rgb(252,159,33)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1023.50"></text></g><g><title>__x64_sys_futex (4 samples, 0.80%)</title><rect x="83.7675%" y="997" width="0.8016%" height="15" fill="rgb(206,71,0)" fg:x="418" fg:w="4"/><text x="84.0175%" y="1007.50"></text></g><g><title>futex_wait (4 samples, 0.80%)</title><rect x="83.7675%" y="981" width="0.8016%" height="15" fill="rgb(233,118,54)" fg:x="418" fg:w="4"/><text x="84.0175%" y="991.50"></text></g><g><title>schedule (4 samples, 0.80%)</title><rect x="83.7675%" y="965" width="0.8016%" height="15" fill="rgb(234,83,48)" fg:x="418" fg:w="4"/><text x="84.0175%" y="975.50"></text></g><g><title>__schedule (4 samples, 0.80%)</title><rect x="83.7675%" y="949" width="0.8016%" height="15" fill="rgb(228,3,54)" fg:x="418" fg:w="4"/><text x="84.0175%" y="959.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.80%)</title><rect x="83.7675%" y="933" width="0.8016%" height="15" fill="rgb(226,155,13)" fg:x="418" fg:w="4"/><text x="84.0175%" y="943.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.80%)</title><rect x="83.7675%" y="917" width="0.8016%" height="15" fill="rgb(241,28,37)" fg:x="418" fg:w="4"/><text x="84.0175%" y="927.50"></text></g><g><title>ctx_sched_in (4 samples, 0.80%)</title><rect x="83.7675%" y="901" width="0.8016%" height="15" fill="rgb(233,93,10)" fg:x="418" fg:w="4"/><text x="84.0175%" y="911.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (4 samples, 0.80%)</title><rect x="83.7675%" y="885" width="0.8016%" height="15" fill="rgb(225,113,19)" fg:x="418" fg:w="4"/><text x="84.0175%" y="895.50"></text></g><g><title>merge_sched_in (3 samples, 0.60%)</title><rect x="83.9679%" y="869" width="0.6012%" height="15" fill="rgb(241,2,18)" fg:x="419" fg:w="3"/><text x="84.2179%" y="879.50"></text></g><g><title>event_sched_in (3 samples, 0.60%)</title><rect x="83.9679%" y="853" width="0.6012%" height="15" fill="rgb(228,207,21)" fg:x="419" fg:w="3"/><text x="84.2179%" y="863.50"></text></g><g><title>perf_ibs_add (3 samples, 0.60%)</title><rect x="83.9679%" y="837" width="0.6012%" height="15" fill="rgb(213,211,35)" fg:x="419" fg:w="3"/><text x="84.2179%" y="847.50"></text></g><g><title>perf_event_update_userpage (3 samples, 0.60%)</title><rect x="83.9679%" y="821" width="0.6012%" height="15" fill="rgb(209,83,10)" fg:x="419" fg:w="3"/><text x="84.2179%" y="831.50"></text></g><g><title>zmem::process::Processes::display (1 samples, 0.20%)</title><rect x="84.5691%" y="1189" width="0.2004%" height="15" fill="rgb(209,164,1)" fg:x="422" fg:w="1"/><text x="84.8191%" y="1199.50"></text></g><g><title>zmem::memory::ProcessMemoryStats::display (1 samples, 0.20%)</title><rect x="84.5691%" y="1173" width="0.2004%" height="15" fill="rgb(213,184,43)" fg:x="422" fg:w="1"/><text x="84.8191%" y="1183.50"></text></g><g><title>zmem::memory::ProcessMemoryStats::display::{{closure}} (1 samples, 0.20%)</title><rect x="84.5691%" y="1157" width="0.2004%" height="15" fill="rgb(231,61,34)" fg:x="422" fg:w="1"/><text x="84.8191%" y="1167.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.20%)</title><rect x="84.5691%" y="1141" width="0.2004%" height="15" fill="rgb(235,75,3)" fg:x="422" fg:w="1"/><text x="84.8191%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.20%)</title><rect x="84.5691%" y="1125" width="0.2004%" height="15" fill="rgb(220,106,47)" fg:x="422" fg:w="1"/><text x="84.8191%" y="1135.50"></text></g><g><title>alloc::fmt::format::{{closure}} (1 samples, 0.20%)</title><rect x="84.5691%" y="1109" width="0.2004%" height="15" fill="rgb(210,196,33)" fg:x="422" fg:w="1"/><text x="84.8191%" y="1119.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.20%)</title><rect x="84.5691%" y="1093" width="0.2004%" height="15" fill="rgb(229,154,42)" fg:x="422" fg:w="1"/><text x="84.8191%" y="1103.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.20%)</title><rect x="84.5691%" y="1077" width="0.2004%" height="15" fill="rgb(228,114,26)" fg:x="422" fg:w="1"/><text x="84.8191%" y="1087.50"></text></g><g><title>core::fmt::write (1 samples, 0.20%)</title><rect x="84.5691%" y="1061" width="0.2004%" height="15" fill="rgb(208,144,1)" fg:x="422" fg:w="1"/><text x="84.8191%" y="1071.50"></text></g><g><title>core::fmt::run (1 samples, 0.20%)</title><rect x="84.5691%" y="1045" width="0.2004%" height="15" fill="rgb(239,112,37)" fg:x="422" fg:w="1"/><text x="84.8191%" y="1055.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.20%)</title><rect x="84.5691%" y="1029" width="0.2004%" height="15" fill="rgb(210,96,50)" fg:x="422" fg:w="1"/><text x="84.8191%" y="1039.50"></text></g><g><title>core::fmt::Formatter::padding (1 samples, 0.20%)</title><rect x="84.5691%" y="1013" width="0.2004%" height="15" fill="rgb(222,178,2)" fg:x="422" fg:w="1"/><text x="84.8191%" y="1023.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.20%)</title><rect x="84.5691%" y="997" width="0.2004%" height="15" fill="rgb(226,74,18)" fg:x="422" fg:w="1"/><text x="84.8191%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.20%)</title><rect x="84.5691%" y="981" width="0.2004%" height="15" fill="rgb(225,67,54)" fg:x="422" fg:w="1"/><text x="84.8191%" y="991.50"></text></g><g><title>&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.20%)</title><rect x="84.7695%" y="1173" width="0.2004%" height="15" fill="rgb(251,92,32)" fg:x="423" fg:w="1"/><text x="85.0195%" y="1183.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (1 samples, 0.20%)</title><rect x="84.7695%" y="1157" width="0.2004%" height="15" fill="rgb(228,149,22)" fg:x="423" fg:w="1"/><text x="85.0195%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.20%)</title><rect x="84.7695%" y="1141" width="0.2004%" height="15" fill="rgb(243,54,13)" fg:x="423" fg:w="1"/><text x="85.0195%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.20%)</title><rect x="84.7695%" y="1125" width="0.2004%" height="15" fill="rgb(243,180,28)" fg:x="423" fg:w="1"/><text x="85.0195%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.20%)</title><rect x="84.7695%" y="1109" width="0.2004%" height="15" fill="rgb(208,167,24)" fg:x="423" fg:w="1"/><text x="85.0195%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.20%)</title><rect x="84.7695%" y="1093" width="0.2004%" height="15" fill="rgb(245,73,45)" fg:x="423" fg:w="1"/><text x="85.0195%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.20%)</title><rect x="84.7695%" y="1077" width="0.2004%" height="15" fill="rgb(237,203,48)" fg:x="423" fg:w="1"/><text x="85.0195%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.20%)</title><rect x="84.7695%" y="1061" width="0.2004%" height="15" fill="rgb(211,197,16)" fg:x="423" fg:w="1"/><text x="85.0195%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.20%)</title><rect x="84.7695%" y="1045" width="0.2004%" height="15" fill="rgb(243,99,51)" fg:x="423" fg:w="1"/><text x="85.0195%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.20%)</title><rect x="84.7695%" y="1029" width="0.2004%" height="15" fill="rgb(215,123,29)" fg:x="423" fg:w="1"/><text x="85.0195%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.20%)</title><rect x="84.7695%" y="1013" width="0.2004%" height="15" fill="rgb(239,186,37)" fg:x="423" fg:w="1"/><text x="85.0195%" y="1023.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.20%)</title><rect x="84.7695%" y="997" width="0.2004%" height="15" fill="rgb(252,136,39)" fg:x="423" fg:w="1"/><text x="85.0195%" y="1007.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.20%)</title><rect x="84.7695%" y="981" width="0.2004%" height="15" fill="rgb(223,213,32)" fg:x="423" fg:w="1"/><text x="85.0195%" y="991.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.20%)</title><rect x="84.7695%" y="965" width="0.2004%" height="15" fill="rgb(233,115,5)" fg:x="423" fg:w="1"/><text x="85.0195%" y="975.50"></text></g><g><title>_int_realloc (1 samples, 0.20%)</title><rect x="84.7695%" y="949" width="0.2004%" height="15" fill="rgb(207,226,44)" fg:x="423" fg:w="1"/><text x="85.0195%" y="959.50"></text></g><g><title>_int_malloc (1 samples, 0.20%)</title><rect x="84.7695%" y="933" width="0.2004%" height="15" fill="rgb(208,126,0)" fg:x="423" fg:w="1"/><text x="85.0195%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.20%)</title><rect x="84.9699%" y="1173" width="0.2004%" height="15" fill="rgb(244,66,21)" fg:x="424" fg:w="1"/><text x="85.2199%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="84.9699%" y="1157" width="0.2004%" height="15" fill="rgb(222,97,12)" fg:x="424" fg:w="1"/><text x="85.2199%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="84.9699%" y="1141" width="0.2004%" height="15" fill="rgb(219,213,19)" fg:x="424" fg:w="1"/><text x="85.2199%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="84.9699%" y="1125" width="0.2004%" height="15" fill="rgb(252,169,30)" fg:x="424" fg:w="1"/><text x="85.2199%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.20%)</title><rect x="84.9699%" y="1109" width="0.2004%" height="15" fill="rgb(206,32,51)" fg:x="424" fg:w="1"/><text x="85.2199%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.20%)</title><rect x="84.9699%" y="1093" width="0.2004%" height="15" fill="rgb(250,172,42)" fg:x="424" fg:w="1"/><text x="85.2199%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="84.9699%" y="1077" width="0.2004%" height="15" fill="rgb(209,34,43)" fg:x="424" fg:w="1"/><text x="85.2199%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.20%)</title><rect x="84.9699%" y="1061" width="0.2004%" height="15" fill="rgb(223,11,35)" fg:x="424" fg:w="1"/><text x="85.2199%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.20%)</title><rect x="84.9699%" y="1045" width="0.2004%" height="15" fill="rgb(251,219,26)" fg:x="424" fg:w="1"/><text x="85.2199%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.20%)</title><rect x="84.9699%" y="1029" width="0.2004%" height="15" fill="rgb(231,119,3)" fg:x="424" fg:w="1"/><text x="85.2199%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.20%)</title><rect x="84.9699%" y="1013" width="0.2004%" height="15" fill="rgb(216,97,11)" fg:x="424" fg:w="1"/><text x="85.2199%" y="1023.50"></text></g><g><title>zmem::process::Processes::update::{{closure}}::{{closure}} (1 samples, 0.20%)</title><rect x="84.9699%" y="997" width="0.2004%" height="15" fill="rgb(223,59,9)" fg:x="424" fg:w="1"/><text x="85.2199%" y="1007.50"></text></g><g><title>zmem::utils::get_cmd (1 samples, 0.20%)</title><rect x="84.9699%" y="981" width="0.2004%" height="15" fill="rgb(233,93,31)" fg:x="424" fg:w="1"/><text x="85.2199%" y="991.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (1 samples, 0.20%)</title><rect x="84.9699%" y="965" width="0.2004%" height="15" fill="rgb(239,81,33)" fg:x="424" fg:w="1"/><text x="85.2199%" y="975.50"></text></g><g><title>std::io::default_read_to_string (1 samples, 0.20%)</title><rect x="84.9699%" y="949" width="0.2004%" height="15" fill="rgb(213,120,34)" fg:x="424" fg:w="1"/><text x="85.2199%" y="959.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.20%)</title><rect x="84.9699%" y="933" width="0.2004%" height="15" fill="rgb(243,49,53)" fg:x="424" fg:w="1"/><text x="85.2199%" y="943.50"></text></g><g><title>std::io::default_read_to_string::{{closure}} (1 samples, 0.20%)</title><rect x="84.9699%" y="917" width="0.2004%" height="15" fill="rgb(247,216,33)" fg:x="424" fg:w="1"/><text x="85.2199%" y="927.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.20%)</title><rect x="84.9699%" y="901" width="0.2004%" height="15" fill="rgb(226,26,14)" fg:x="424" fg:w="1"/><text x="85.2199%" y="911.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 0.20%)</title><rect x="84.9699%" y="885" width="0.2004%" height="15" fill="rgb(215,49,53)" fg:x="424" fg:w="1"/><text x="85.2199%" y="895.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (1 samples, 0.20%)</title><rect x="84.9699%" y="869" width="0.2004%" height="15" fill="rgb(245,162,40)" fg:x="424" fg:w="1"/><text x="85.2199%" y="879.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (1 samples, 0.20%)</title><rect x="84.9699%" y="853" width="0.2004%" height="15" fill="rgb(229,68,17)" fg:x="424" fg:w="1"/><text x="85.2199%" y="863.50"></text></g><g><title>__GI___libc_read (1 samples, 0.20%)</title><rect x="84.9699%" y="837" width="0.2004%" height="15" fill="rgb(213,182,10)" fg:x="424" fg:w="1"/><text x="85.2199%" y="847.50"></text></g><g><title>__GI___libc_read (1 samples, 0.20%)</title><rect x="84.9699%" y="821" width="0.2004%" height="15" fill="rgb(245,125,30)" fg:x="424" fg:w="1"/><text x="85.2199%" y="831.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.20%)</title><rect x="84.9699%" y="805" width="0.2004%" height="15" fill="rgb(232,202,2)" fg:x="424" fg:w="1"/><text x="85.2199%" y="815.50"></text></g><g><title>do_syscall_64 (1 samples, 0.20%)</title><rect x="84.9699%" y="789" width="0.2004%" height="15" fill="rgb(237,140,51)" fg:x="424" fg:w="1"/><text x="85.2199%" y="799.50"></text></g><g><title>__x64_sys_read (1 samples, 0.20%)</title><rect x="84.9699%" y="773" width="0.2004%" height="15" fill="rgb(236,157,25)" fg:x="424" fg:w="1"/><text x="85.2199%" y="783.50"></text></g><g><title>vfs_read (1 samples, 0.20%)</title><rect x="84.9699%" y="757" width="0.2004%" height="15" fill="rgb(219,209,0)" fg:x="424" fg:w="1"/><text x="85.2199%" y="767.50"></text></g><g><title>proc_pid_cmdline_read (1 samples, 0.20%)</title><rect x="84.9699%" y="741" width="0.2004%" height="15" fill="rgb(240,116,54)" fg:x="424" fg:w="1"/><text x="85.2199%" y="751.50"></text></g><g><title>strnlen (1 samples, 0.20%)</title><rect x="84.9699%" y="725" width="0.2004%" height="15" fill="rgb(216,10,36)" fg:x="424" fg:w="1"/><text x="85.2199%" y="735.50"></text></g><g><title>tokio::runtime::coop::budget (4 samples, 0.80%)</title><rect x="84.5691%" y="1253" width="0.8016%" height="15" fill="rgb(222,72,44)" fg:x="422" fg:w="4"/><text x="84.8191%" y="1263.50"></text></g><g><title>tokio::runtime::coop::with_budget (4 samples, 0.80%)</title><rect x="84.5691%" y="1237" width="0.8016%" height="15" fill="rgb(232,159,9)" fg:x="422" fg:w="4"/><text x="84.8191%" y="1247.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::{{closure}} (4 samples, 0.80%)</title><rect x="84.5691%" y="1221" width="0.8016%" height="15" fill="rgb(210,39,32)" fg:x="422" fg:w="4"/><text x="84.8191%" y="1231.50"></text></g><g><title>zmem::main::{{closure}} (4 samples, 0.80%)</title><rect x="84.5691%" y="1205" width="0.8016%" height="15" fill="rgb(216,194,45)" fg:x="422" fg:w="4"/><text x="84.8191%" y="1215.50"></text></g><g><title>zmem::process::Processes::update::{{closure}} (3 samples, 0.60%)</title><rect x="84.7695%" y="1189" width="0.6012%" height="15" fill="rgb(218,18,35)" fg:x="423" fg:w="3"/><text x="85.0195%" y="1199.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1 samples, 0.20%)</title><rect x="85.1703%" y="1173" width="0.2004%" height="15" fill="rgb(207,83,51)" fg:x="425" fg:w="1"/><text x="85.4203%" y="1183.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.20%)</title><rect x="85.1703%" y="1157" width="0.2004%" height="15" fill="rgb(225,63,43)" fg:x="425" fg:w="1"/><text x="85.4203%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.20%)</title><rect x="85.1703%" y="1141" width="0.2004%" height="15" fill="rgb(207,57,36)" fg:x="425" fg:w="1"/><text x="85.4203%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.20%)</title><rect x="85.1703%" y="1125" width="0.2004%" height="15" fill="rgb(216,99,33)" fg:x="425" fg:w="1"/><text x="85.4203%" y="1135.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.20%)</title><rect x="85.1703%" y="1109" width="0.2004%" height="15" fill="rgb(225,42,16)" fg:x="425" fg:w="1"/><text x="85.4203%" y="1119.50"></text></g><g><title>futex_unqueue (1 samples, 0.20%)</title><rect x="85.3707%" y="1029" width="0.2004%" height="15" fill="rgb(220,201,45)" fg:x="426" fg:w="1"/><text x="85.6207%" y="1039.50"></text></g><g><title>merge_sched_in (4 samples, 0.80%)</title><rect x="85.9719%" y="933" width="0.8016%" height="15" fill="rgb(225,33,4)" fg:x="429" fg:w="4"/><text x="86.2219%" y="943.50"></text></g><g><title>event_sched_in (3 samples, 0.60%)</title><rect x="86.1723%" y="917" width="0.6012%" height="15" fill="rgb(224,33,50)" fg:x="430" fg:w="3"/><text x="86.4223%" y="927.50"></text></g><g><title>perf_ibs_add (2 samples, 0.40%)</title><rect x="86.3727%" y="901" width="0.4008%" height="15" fill="rgb(246,198,51)" fg:x="431" fg:w="2"/><text x="86.6227%" y="911.50"></text></g><g><title>perf_event_update_userpage (2 samples, 0.40%)</title><rect x="86.3727%" y="885" width="0.4008%" height="15" fill="rgb(205,22,4)" fg:x="431" fg:w="2"/><text x="86.6227%" y="895.50"></text></g><g><title>__x64_sys_futex (9 samples, 1.80%)</title><rect x="85.3707%" y="1061" width="1.8036%" height="15" fill="rgb(206,3,8)" fg:x="426" fg:w="9"/><text x="85.6207%" y="1071.50">_..</text></g><g><title>futex_wait (9 samples, 1.80%)</title><rect x="85.3707%" y="1045" width="1.8036%" height="15" fill="rgb(251,23,15)" fg:x="426" fg:w="9"/><text x="85.6207%" y="1055.50">f..</text></g><g><title>schedule (8 samples, 1.60%)</title><rect x="85.5711%" y="1029" width="1.6032%" height="15" fill="rgb(252,88,28)" fg:x="427" fg:w="8"/><text x="85.8211%" y="1039.50"></text></g><g><title>__schedule (8 samples, 1.60%)</title><rect x="85.5711%" y="1013" width="1.6032%" height="15" fill="rgb(212,127,14)" fg:x="427" fg:w="8"/><text x="85.8211%" y="1023.50"></text></g><g><title>finish_task_switch.isra.0 (8 samples, 1.60%)</title><rect x="85.5711%" y="997" width="1.6032%" height="15" fill="rgb(247,145,37)" fg:x="427" fg:w="8"/><text x="85.8211%" y="1007.50"></text></g><g><title>__perf_event_task_sched_in (8 samples, 1.60%)</title><rect x="85.5711%" y="981" width="1.6032%" height="15" fill="rgb(209,117,53)" fg:x="427" fg:w="8"/><text x="85.8211%" y="991.50"></text></g><g><title>ctx_sched_in (6 samples, 1.20%)</title><rect x="85.9719%" y="965" width="1.2024%" height="15" fill="rgb(212,90,42)" fg:x="429" fg:w="6"/><text x="86.2219%" y="975.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (6 samples, 1.20%)</title><rect x="85.9719%" y="949" width="1.2024%" height="15" fill="rgb(218,164,37)" fg:x="429" fg:w="6"/><text x="86.2219%" y="959.50"></text></g><g><title>rb_next (2 samples, 0.40%)</title><rect x="86.7735%" y="933" width="0.4008%" height="15" fill="rgb(246,65,34)" fg:x="433" fg:w="2"/><text x="87.0235%" y="943.50"></text></g><g><title>_start (23 samples, 4.61%)</title><rect x="82.7655%" y="1589" width="4.6092%" height="15" fill="rgb(231,100,33)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1599.50">_start</text></g><g><title>__libc_start_main_impl (23 samples, 4.61%)</title><rect x="82.7655%" y="1573" width="4.6092%" height="15" fill="rgb(228,126,14)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1583.50">__lib..</text></g><g><title>__libc_start_call_main (23 samples, 4.61%)</title><rect x="82.7655%" y="1557" width="4.6092%" height="15" fill="rgb(215,173,21)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1567.50">__lib..</text></g><g><title>main (23 samples, 4.61%)</title><rect x="82.7655%" y="1541" width="4.6092%" height="15" fill="rgb(210,6,40)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1551.50">main</text></g><g><title>std::rt::lang_start_internal (23 samples, 4.61%)</title><rect x="82.7655%" y="1525" width="4.6092%" height="15" fill="rgb(212,48,18)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1535.50">std::..</text></g><g><title>std::panic::catch_unwind (23 samples, 4.61%)</title><rect x="82.7655%" y="1509" width="4.6092%" height="15" fill="rgb(230,214,11)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1519.50">std::..</text></g><g><title>std::panicking::try (23 samples, 4.61%)</title><rect x="82.7655%" y="1493" width="4.6092%" height="15" fill="rgb(254,105,39)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1503.50">std::..</text></g><g><title>std::panicking::try::do_call (23 samples, 4.61%)</title><rect x="82.7655%" y="1477" width="4.6092%" height="15" fill="rgb(245,158,5)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1487.50">std::..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (23 samples, 4.61%)</title><rect x="82.7655%" y="1461" width="4.6092%" height="15" fill="rgb(249,208,11)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1471.50">std::..</text></g><g><title>std::panic::catch_unwind (23 samples, 4.61%)</title><rect x="82.7655%" y="1445" width="4.6092%" height="15" fill="rgb(210,39,28)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1455.50">std::..</text></g><g><title>std::panicking::try (23 samples, 4.61%)</title><rect x="82.7655%" y="1429" width="4.6092%" height="15" fill="rgb(211,56,53)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1439.50">std::..</text></g><g><title>std::panicking::try::do_call (23 samples, 4.61%)</title><rect x="82.7655%" y="1413" width="4.6092%" height="15" fill="rgb(226,201,30)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1423.50">std::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (23 samples, 4.61%)</title><rect x="82.7655%" y="1397" width="4.6092%" height="15" fill="rgb(239,101,34)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1407.50">core:..</text></g><g><title>std::rt::lang_start::{{closure}} (23 samples, 4.61%)</title><rect x="82.7655%" y="1381" width="4.6092%" height="15" fill="rgb(226,209,5)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1391.50">std::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (23 samples, 4.61%)</title><rect x="82.7655%" y="1365" width="4.6092%" height="15" fill="rgb(250,105,47)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1375.50">std::..</text></g><g><title>core::ops::function::FnOnce::call_once (23 samples, 4.61%)</title><rect x="82.7655%" y="1349" width="4.6092%" height="15" fill="rgb(230,72,3)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1359.50">core:..</text></g><g><title>zmem::main (23 samples, 4.61%)</title><rect x="82.7655%" y="1333" width="4.6092%" height="15" fill="rgb(232,218,39)" fg:x="413" fg:w="23"/><text x="83.0155%" y="1343.50">zmem:..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (14 samples, 2.81%)</title><rect x="84.5691%" y="1317" width="2.8056%" height="15" fill="rgb(248,166,6)" fg:x="422" fg:w="14"/><text x="84.8191%" y="1327.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (14 samples, 2.81%)</title><rect x="84.5691%" y="1301" width="2.8056%" height="15" fill="rgb(247,89,20)" fg:x="422" fg:w="14"/><text x="84.8191%" y="1311.50">to..</text></g><g><title>tokio::runtime::context::BlockingRegionGuard::block_on (14 samples, 2.81%)</title><rect x="84.5691%" y="1285" width="2.8056%" height="15" fill="rgb(248,130,54)" fg:x="422" fg:w="14"/><text x="84.8191%" y="1295.50">to..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (14 samples, 2.81%)</title><rect x="84.5691%" y="1269" width="2.8056%" height="15" fill="rgb(234,196,4)" fg:x="422" fg:w="14"/><text x="84.8191%" y="1279.50">to..</text></g><g><title>tokio::runtime::park::Inner::park (10 samples, 2.00%)</title><rect x="85.3707%" y="1253" width="2.0040%" height="15" fill="rgb(250,143,31)" fg:x="426" fg:w="10"/><text x="85.6207%" y="1263.50">t..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (10 samples, 2.00%)</title><rect x="85.3707%" y="1237" width="2.0040%" height="15" fill="rgb(211,110,34)" fg:x="426" fg:w="10"/><text x="85.6207%" y="1247.50">t..</text></g><g><title>parking_lot::condvar::Condvar::wait (10 samples, 2.00%)</title><rect x="85.3707%" y="1221" width="2.0040%" height="15" fill="rgb(215,124,48)" fg:x="426" fg:w="10"/><text x="85.6207%" y="1231.50">p..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (10 samples, 2.00%)</title><rect x="85.3707%" y="1205" width="2.0040%" height="15" fill="rgb(216,46,13)" fg:x="426" fg:w="10"/><text x="85.6207%" y="1215.50">p..</text></g><g><title>parking_lot_core::parking_lot::park (10 samples, 2.00%)</title><rect x="85.3707%" y="1189" width="2.0040%" height="15" fill="rgb(205,184,25)" fg:x="426" fg:w="10"/><text x="85.6207%" y="1199.50">p..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (10 samples, 2.00%)</title><rect x="85.3707%" y="1173" width="2.0040%" height="15" fill="rgb(228,1,10)" fg:x="426" fg:w="10"/><text x="85.6207%" y="1183.50">p..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (10 samples, 2.00%)</title><rect x="85.3707%" y="1157" width="2.0040%" height="15" fill="rgb(213,116,27)" fg:x="426" fg:w="10"/><text x="85.6207%" y="1167.50">p..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (10 samples, 2.00%)</title><rect x="85.3707%" y="1141" width="2.0040%" height="15" fill="rgb(241,95,50)" fg:x="426" fg:w="10"/><text x="85.6207%" y="1151.50">&lt;..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (10 samples, 2.00%)</title><rect x="85.3707%" y="1125" width="2.0040%" height="15" fill="rgb(238,48,32)" fg:x="426" fg:w="10"/><text x="85.6207%" y="1135.50">p..</text></g><g><title>syscall (10 samples, 2.00%)</title><rect x="85.3707%" y="1109" width="2.0040%" height="15" fill="rgb(235,113,49)" fg:x="426" fg:w="10"/><text x="85.6207%" y="1119.50">s..</text></g><g><title>entry_SYSCALL_64 (10 samples, 2.00%)</title><rect x="85.3707%" y="1093" width="2.0040%" height="15" fill="rgb(205,127,43)" fg:x="426" fg:w="10"/><text x="85.6207%" y="1103.50">e..</text></g><g><title>do_syscall_64 (10 samples, 2.00%)</title><rect x="85.3707%" y="1077" width="2.0040%" height="15" fill="rgb(250,162,2)" fg:x="426" fg:w="10"/><text x="85.6207%" y="1087.50">d..</text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.20%)</title><rect x="87.1743%" y="1061" width="0.2004%" height="15" fill="rgb(220,13,41)" fg:x="435" fg:w="1"/><text x="87.4243%" y="1071.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.20%)</title><rect x="87.1743%" y="1045" width="0.2004%" height="15" fill="rgb(249,221,25)" fg:x="435" fg:w="1"/><text x="87.4243%" y="1055.50"></text></g><g><title>switch_fpu_return (1 samples, 0.20%)</title><rect x="87.1743%" y="1029" width="0.2004%" height="15" fill="rgb(215,208,19)" fg:x="435" fg:w="1"/><text x="87.4243%" y="1039.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.20%)</title><rect x="87.1743%" y="1013" width="0.2004%" height="15" fill="rgb(236,175,2)" fg:x="435" fg:w="1"/><text x="87.4243%" y="1023.50"></text></g><g><title>anon.07768d1f9596b9d6394df347a8aabd48.69.llvm.5333431085457799078 (1 samples, 0.20%)</title><rect x="87.3747%" y="1589" width="0.2004%" height="15" fill="rgb(241,52,2)" fg:x="436" fg:w="1"/><text x="87.6247%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (1 samples, 0.20%)</title><rect x="87.3747%" y="1573" width="0.2004%" height="15" fill="rgb(248,140,14)" fg:x="436" fg:w="1"/><text x="87.6247%" y="1583.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.20%)</title><rect x="87.3747%" y="1557" width="0.2004%" height="15" fill="rgb(253,22,42)" fg:x="436" fg:w="1"/><text x="87.6247%" y="1567.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1 samples, 0.20%)</title><rect x="87.3747%" y="1541" width="0.2004%" height="15" fill="rgb(234,61,47)" fg:x="436" fg:w="1"/><text x="87.6247%" y="1551.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.20%)</title><rect x="87.3747%" y="1525" width="0.2004%" height="15" fill="rgb(208,226,15)" fg:x="436" fg:w="1"/><text x="87.6247%" y="1535.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.20%)</title><rect x="87.3747%" y="1509" width="0.2004%" height="15" fill="rgb(217,221,4)" fg:x="436" fg:w="1"/><text x="87.6247%" y="1519.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.20%)</title><rect x="87.3747%" y="1493" width="0.2004%" height="15" fill="rgb(212,174,34)" fg:x="436" fg:w="1"/><text x="87.6247%" y="1503.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (1 samples, 0.20%)</title><rect x="87.3747%" y="1477" width="0.2004%" height="15" fill="rgb(253,83,4)" fg:x="436" fg:w="1"/><text x="87.6247%" y="1487.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread (1 samples, 0.20%)</title><rect x="87.3747%" y="1461" width="0.2004%" height="15" fill="rgb(250,195,49)" fg:x="436" fg:w="1"/><text x="87.6247%" y="1471.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.20%)</title><rect x="87.3747%" y="1445" width="0.2004%" height="15" fill="rgb(241,192,25)" fg:x="436" fg:w="1"/><text x="87.6247%" y="1455.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.40%)</title><rect x="87.5752%" y="1589" width="0.4008%" height="15" fill="rgb(208,124,10)" fg:x="437" fg:w="2"/><text x="87.8252%" y="1599.50"></text></g><g><title>exc_page_fault (1 samples, 0.20%)</title><rect x="87.7756%" y="1573" width="0.2004%" height="15" fill="rgb(222,33,0)" fg:x="438" fg:w="1"/><text x="88.0256%" y="1583.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.20%)</title><rect x="87.7756%" y="1557" width="0.2004%" height="15" fill="rgb(234,209,28)" fg:x="438" fg:w="1"/><text x="88.0256%" y="1567.50"></text></g><g><title>handle_mm_fault (1 samples, 0.20%)</title><rect x="87.7756%" y="1541" width="0.2004%" height="15" fill="rgb(224,11,23)" fg:x="438" fg:w="1"/><text x="88.0256%" y="1551.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.20%)</title><rect x="87.9760%" y="1573" width="0.2004%" height="15" fill="rgb(232,99,1)" fg:x="439" fg:w="1"/><text x="88.2260%" y="1583.50"></text></g><g><title>do_syscall_64 (1 samples, 0.20%)</title><rect x="87.9760%" y="1557" width="0.2004%" height="15" fill="rgb(237,95,45)" fg:x="439" fg:w="1"/><text x="88.2260%" y="1567.50"></text></g><g><title>__x64_sys_clone3 (1 samples, 0.20%)</title><rect x="87.9760%" y="1541" width="0.2004%" height="15" fill="rgb(208,109,11)" fg:x="439" fg:w="1"/><text x="88.2260%" y="1551.50"></text></g><g><title>kernel_clone (1 samples, 0.20%)</title><rect x="87.9760%" y="1525" width="0.2004%" height="15" fill="rgb(216,190,48)" fg:x="439" fg:w="1"/><text x="88.2260%" y="1535.50"></text></g><g><title>copy_process (1 samples, 0.20%)</title><rect x="87.9760%" y="1509" width="0.2004%" height="15" fill="rgb(251,171,36)" fg:x="439" fg:w="1"/><text x="88.2260%" y="1519.50"></text></g><g><title>perf_event_init_task (1 samples, 0.20%)</title><rect x="87.9760%" y="1493" width="0.2004%" height="15" fill="rgb(230,62,22)" fg:x="439" fg:w="1"/><text x="88.2260%" y="1503.50"></text></g><g><title>inherit_task_group.isra.0 (1 samples, 0.20%)</title><rect x="87.9760%" y="1477" width="0.2004%" height="15" fill="rgb(225,114,35)" fg:x="439" fg:w="1"/><text x="88.2260%" y="1487.50"></text></g><g><title>inherit_event.constprop.0 (1 samples, 0.20%)</title><rect x="87.9760%" y="1461" width="0.2004%" height="15" fill="rgb(215,118,42)" fg:x="439" fg:w="1"/><text x="88.2260%" y="1471.50"></text></g><g><title>perf_event_alloc (1 samples, 0.20%)</title><rect x="87.9760%" y="1445" width="0.2004%" height="15" fill="rgb(243,119,21)" fg:x="439" fg:w="1"/><text x="88.2260%" y="1455.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.20%)</title><rect x="87.9760%" y="1429" width="0.2004%" height="15" fill="rgb(252,177,53)" fg:x="439" fg:w="1"/><text x="88.2260%" y="1439.50"></text></g><g><title>__set_current_blocked (1 samples, 0.20%)</title><rect x="88.1764%" y="1509" width="0.2004%" height="15" fill="rgb(237,209,29)" fg:x="440" fg:w="1"/><text x="88.4264%" y="1519.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.40%)</title><rect x="88.1764%" y="1557" width="0.4008%" height="15" fill="rgb(212,65,23)" fg:x="440" fg:w="2"/><text x="88.4264%" y="1567.50"></text></g><g><title>do_syscall_64 (2 samples, 0.40%)</title><rect x="88.1764%" y="1541" width="0.4008%" height="15" fill="rgb(230,222,46)" fg:x="440" fg:w="2"/><text x="88.4264%" y="1551.50"></text></g><g><title>__x64_sys_rt_sigprocmask (2 samples, 0.40%)</title><rect x="88.1764%" y="1525" width="0.4008%" height="15" fill="rgb(215,135,32)" fg:x="440" fg:w="2"/><text x="88.4264%" y="1535.50"></text></g><g><title>_copy_from_user (1 samples, 0.20%)</title><rect x="88.3768%" y="1509" width="0.2004%" height="15" fill="rgb(246,101,22)" fg:x="441" fg:w="1"/><text x="88.6268%" y="1519.50"></text></g><g><title>copy_user_generic_string (1 samples, 0.20%)</title><rect x="88.3768%" y="1493" width="0.2004%" height="15" fill="rgb(206,107,13)" fg:x="441" fg:w="1"/><text x="88.6268%" y="1503.50"></text></g><g><title>__vm_enough_memory (1 samples, 0.20%)</title><rect x="88.5772%" y="1365" width="0.2004%" height="15" fill="rgb(250,100,44)" fg:x="442" fg:w="1"/><text x="88.8272%" y="1375.50"></text></g><g><title>do_mmap (2 samples, 0.40%)</title><rect x="88.5772%" y="1397" width="0.4008%" height="15" fill="rgb(231,147,38)" fg:x="442" fg:w="2"/><text x="88.8272%" y="1407.50"></text></g><g><title>mmap_region (2 samples, 0.40%)</title><rect x="88.5772%" y="1381" width="0.4008%" height="15" fill="rgb(229,8,40)" fg:x="442" fg:w="2"/><text x="88.8272%" y="1391.50"></text></g><g><title>vm_area_alloc (1 samples, 0.20%)</title><rect x="88.7776%" y="1365" width="0.2004%" height="15" fill="rgb(221,135,30)" fg:x="443" fg:w="1"/><text x="89.0276%" y="1375.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.20%)</title><rect x="88.7776%" y="1349" width="0.2004%" height="15" fill="rgb(249,193,18)" fg:x="443" fg:w="1"/><text x="89.0276%" y="1359.50"></text></g><g><title>slab_post_alloc_hook.constprop.0 (1 samples, 0.20%)</title><rect x="88.7776%" y="1333" width="0.2004%" height="15" fill="rgb(209,133,39)" fg:x="443" fg:w="1"/><text x="89.0276%" y="1343.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.20%)</title><rect x="88.7776%" y="1317" width="0.2004%" height="15" fill="rgb(232,100,14)" fg:x="443" fg:w="1"/><text x="89.0276%" y="1327.50"></text></g><g><title>rwsem_spin_on_owner (1 samples, 0.20%)</title><rect x="88.9780%" y="1365" width="0.2004%" height="15" fill="rgb(224,185,1)" fg:x="444" fg:w="1"/><text x="89.2280%" y="1375.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 1.00%)</title><rect x="89.1784%" y="1333" width="1.0020%" height="15" fill="rgb(223,139,8)" fg:x="445" fg:w="5"/><text x="89.4284%" y="1343.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.80%)</title><rect x="89.3788%" y="1317" width="0.8016%" height="15" fill="rgb(232,213,38)" fg:x="446" fg:w="4"/><text x="89.6288%" y="1327.50"></text></g><g><title>ctx_sched_in (4 samples, 0.80%)</title><rect x="89.3788%" y="1301" width="0.8016%" height="15" fill="rgb(207,94,22)" fg:x="446" fg:w="4"/><text x="89.6288%" y="1311.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (4 samples, 0.80%)</title><rect x="89.3788%" y="1285" width="0.8016%" height="15" fill="rgb(219,183,54)" fg:x="446" fg:w="4"/><text x="89.6288%" y="1295.50"></text></g><g><title>merge_sched_in (4 samples, 0.80%)</title><rect x="89.3788%" y="1269" width="0.8016%" height="15" fill="rgb(216,185,54)" fg:x="446" fg:w="4"/><text x="89.6288%" y="1279.50"></text></g><g><title>event_sched_in (4 samples, 0.80%)</title><rect x="89.3788%" y="1253" width="0.8016%" height="15" fill="rgb(254,217,39)" fg:x="446" fg:w="4"/><text x="89.6288%" y="1263.50"></text></g><g><title>perf_ibs_add (4 samples, 0.80%)</title><rect x="89.3788%" y="1237" width="0.8016%" height="15" fill="rgb(240,178,23)" fg:x="446" fg:w="4"/><text x="89.6288%" y="1247.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.20%)</title><rect x="90.1804%" y="1333" width="0.2004%" height="15" fill="rgb(218,11,47)" fg:x="450" fg:w="1"/><text x="90.4304%" y="1343.50"></text></g><g><title>__update_idle_core (1 samples, 0.20%)</title><rect x="90.1804%" y="1317" width="0.2004%" height="15" fill="rgb(218,51,51)" fg:x="450" fg:w="1"/><text x="90.4304%" y="1327.50"></text></g><g><title>__GI___mmap64 (10 samples, 2.00%)</title><rect x="88.5772%" y="1477" width="2.0040%" height="15" fill="rgb(238,126,27)" fg:x="442" fg:w="10"/><text x="88.8272%" y="1487.50">_..</text></g><g><title>__GI___mmap64 (10 samples, 2.00%)</title><rect x="88.5772%" y="1461" width="2.0040%" height="15" fill="rgb(249,202,22)" fg:x="442" fg:w="10"/><text x="88.8272%" y="1471.50">_..</text></g><g><title>entry_SYSCALL_64 (10 samples, 2.00%)</title><rect x="88.5772%" y="1445" width="2.0040%" height="15" fill="rgb(254,195,49)" fg:x="442" fg:w="10"/><text x="88.8272%" y="1455.50">e..</text></g><g><title>do_syscall_64 (10 samples, 2.00%)</title><rect x="88.5772%" y="1429" width="2.0040%" height="15" fill="rgb(208,123,14)" fg:x="442" fg:w="10"/><text x="88.8272%" y="1439.50">d..</text></g><g><title>vm_mmap_pgoff (10 samples, 2.00%)</title><rect x="88.5772%" y="1413" width="2.0040%" height="15" fill="rgb(224,200,8)" fg:x="442" fg:w="10"/><text x="88.8272%" y="1423.50">v..</text></g><g><title>down_write_killable (8 samples, 1.60%)</title><rect x="88.9780%" y="1397" width="1.6032%" height="15" fill="rgb(217,61,36)" fg:x="444" fg:w="8"/><text x="89.2280%" y="1407.50"></text></g><g><title>rwsem_down_write_slowpath (8 samples, 1.60%)</title><rect x="88.9780%" y="1381" width="1.6032%" height="15" fill="rgb(206,35,45)" fg:x="444" fg:w="8"/><text x="89.2280%" y="1391.50"></text></g><g><title>schedule_preempt_disabled (7 samples, 1.40%)</title><rect x="89.1784%" y="1365" width="1.4028%" height="15" fill="rgb(217,65,33)" fg:x="445" fg:w="7"/><text x="89.4284%" y="1375.50"></text></g><g><title>__schedule (7 samples, 1.40%)</title><rect x="89.1784%" y="1349" width="1.4028%" height="15" fill="rgb(222,158,48)" fg:x="445" fg:w="7"/><text x="89.4284%" y="1359.50"></text></g><g><title>update_rq_clock (1 samples, 0.20%)</title><rect x="90.3808%" y="1333" width="0.2004%" height="15" fill="rgb(254,2,54)" fg:x="451" fg:w="1"/><text x="90.6308%" y="1343.50"></text></g><g><title>__GI_mprotect (1 samples, 0.20%)</title><rect x="90.5812%" y="1477" width="0.2004%" height="15" fill="rgb(250,143,38)" fg:x="452" fg:w="1"/><text x="90.8312%" y="1487.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.20%)</title><rect x="90.5812%" y="1461" width="0.2004%" height="15" fill="rgb(248,25,0)" fg:x="452" fg:w="1"/><text x="90.8312%" y="1471.50"></text></g><g><title>do_syscall_64 (1 samples, 0.20%)</title><rect x="90.5812%" y="1445" width="0.2004%" height="15" fill="rgb(206,152,27)" fg:x="452" fg:w="1"/><text x="90.8312%" y="1455.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.20%)</title><rect x="90.5812%" y="1429" width="0.2004%" height="15" fill="rgb(240,77,30)" fg:x="452" fg:w="1"/><text x="90.8312%" y="1439.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.20%)</title><rect x="90.5812%" y="1413" width="0.2004%" height="15" fill="rgb(231,5,3)" fg:x="452" fg:w="1"/><text x="90.8312%" y="1423.50"></text></g><g><title>mprotect_fixup (1 samples, 0.20%)</title><rect x="90.5812%" y="1397" width="0.2004%" height="15" fill="rgb(207,226,32)" fg:x="452" fg:w="1"/><text x="90.8312%" y="1407.50"></text></g><g><title>perf_event_mmap (1 samples, 0.20%)</title><rect x="90.5812%" y="1381" width="0.2004%" height="15" fill="rgb(222,207,47)" fg:x="452" fg:w="1"/><text x="90.8312%" y="1391.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.20%)</title><rect x="90.5812%" y="1365" width="0.2004%" height="15" fill="rgb(229,115,45)" fg:x="452" fg:w="1"/><text x="90.8312%" y="1375.50"></text></g><g><title>__perf_event__output_id_sample (1 samples, 0.20%)</title><rect x="90.5812%" y="1349" width="0.2004%" height="15" fill="rgb(224,191,6)" fg:x="452" fg:w="1"/><text x="90.8312%" y="1359.50"></text></g><g><title>perf_output_copy (1 samples, 0.20%)</title><rect x="90.5812%" y="1333" width="0.2004%" height="15" fill="rgb(230,227,24)" fg:x="452" fg:w="1"/><text x="90.8312%" y="1343.50"></text></g><g><title>memcpy (1 samples, 0.20%)</title><rect x="90.5812%" y="1317" width="0.2004%" height="15" fill="rgb(228,80,19)" fg:x="452" fg:w="1"/><text x="90.8312%" y="1327.50"></text></g><g><title>clone3 (15 samples, 3.01%)</title><rect x="87.9760%" y="1589" width="3.0060%" height="15" fill="rgb(247,229,0)" fg:x="439" fg:w="15"/><text x="88.2260%" y="1599.50">clo..</text></g><g><title>start_thread (14 samples, 2.81%)</title><rect x="88.1764%" y="1573" width="2.8056%" height="15" fill="rgb(237,194,15)" fg:x="440" fg:w="14"/><text x="88.4264%" y="1583.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 2.40%)</title><rect x="88.5772%" y="1557" width="2.4048%" height="15" fill="rgb(219,203,20)" fg:x="442" fg:w="12"/><text x="88.8272%" y="1567.50">st..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (12 samples, 2.40%)</title><rect x="88.5772%" y="1541" width="2.4048%" height="15" fill="rgb(234,128,8)" fg:x="442" fg:w="12"/><text x="88.8272%" y="1551.50">st..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (12 samples, 2.40%)</title><rect x="88.5772%" y="1525" width="2.4048%" height="15" fill="rgb(248,202,8)" fg:x="442" fg:w="12"/><text x="88.8272%" y="1535.50">st..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (12 samples, 2.40%)</title><rect x="88.5772%" y="1509" width="2.4048%" height="15" fill="rgb(206,104,37)" fg:x="442" fg:w="12"/><text x="88.8272%" y="1519.50">st..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (12 samples, 2.40%)</title><rect x="88.5772%" y="1493" width="2.4048%" height="15" fill="rgb(223,8,27)" fg:x="442" fg:w="12"/><text x="88.8272%" y="1503.50">st..</text></g><g><title>std::sys::unix::os::page_size (1 samples, 0.20%)</title><rect x="90.7816%" y="1477" width="0.2004%" height="15" fill="rgb(216,217,28)" fg:x="453" fg:w="1"/><text x="91.0316%" y="1487.50"></text></g><g><title>__GI___sysconf (1 samples, 0.20%)</title><rect x="90.7816%" y="1461" width="0.2004%" height="15" fill="rgb(249,199,1)" fg:x="453" fg:w="1"/><text x="91.0316%" y="1471.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.20%)</title><rect x="90.9820%" y="1557" width="0.2004%" height="15" fill="rgb(240,85,17)" fg:x="454" fg:w="1"/><text x="91.2320%" y="1567.50"></text></g><g><title>bprm_execve (1 samples, 0.20%)</title><rect x="90.9820%" y="1541" width="0.2004%" height="15" fill="rgb(206,108,45)" fg:x="454" fg:w="1"/><text x="91.2320%" y="1551.50"></text></g><g><title>load_elf_binary (1 samples, 0.20%)</title><rect x="90.9820%" y="1525" width="0.2004%" height="15" fill="rgb(245,210,41)" fg:x="454" fg:w="1"/><text x="91.2320%" y="1535.50"></text></g><g><title>begin_new_exec (1 samples, 0.20%)</title><rect x="90.9820%" y="1509" width="0.2004%" height="15" fill="rgb(206,13,37)" fg:x="454" fg:w="1"/><text x="91.2320%" y="1519.50"></text></g><g><title>commit_creds (1 samples, 0.20%)</title><rect x="90.9820%" y="1493" width="0.2004%" height="15" fill="rgb(250,61,18)" fg:x="454" fg:w="1"/><text x="91.2320%" y="1503.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.20%)</title><rect x="91.1824%" y="1557" width="0.2004%" height="15" fill="rgb(235,172,48)" fg:x="455" fg:w="1"/><text x="91.4324%" y="1567.50"></text></g><g><title>getname_flags.part.0 (1 samples, 0.20%)</title><rect x="91.1824%" y="1541" width="0.2004%" height="15" fill="rgb(249,201,17)" fg:x="455" fg:w="1"/><text x="91.4324%" y="1551.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.20%)</title><rect x="91.1824%" y="1525" width="0.2004%" height="15" fill="rgb(219,208,6)" fg:x="455" fg:w="1"/><text x="91.4324%" y="1535.50"></text></g><g><title>slab_post_alloc_hook.constprop.0 (1 samples, 0.20%)</title><rect x="91.1824%" y="1509" width="0.2004%" height="15" fill="rgb(248,31,23)" fg:x="455" fg:w="1"/><text x="91.4324%" y="1519.50"></text></g><g><title>memset (1 samples, 0.20%)</title><rect x="91.1824%" y="1493" width="0.2004%" height="15" fill="rgb(245,15,42)" fg:x="455" fg:w="1"/><text x="91.4324%" y="1503.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.60%)</title><rect x="90.9820%" y="1589" width="0.6012%" height="15" fill="rgb(222,217,39)" fg:x="454" fg:w="3"/><text x="91.2320%" y="1599.50"></text></g><g><title>do_syscall_64 (3 samples, 0.60%)</title><rect x="90.9820%" y="1573" width="0.6012%" height="15" fill="rgb(210,219,27)" fg:x="454" fg:w="3"/><text x="91.2320%" y="1583.50"></text></g><g><title>__x64_sys_rt_sigprocmask (1 samples, 0.20%)</title><rect x="91.3828%" y="1557" width="0.2004%" height="15" fill="rgb(252,166,36)" fg:x="456" fg:w="1"/><text x="91.6328%" y="1567.50"></text></g><g><title>__set_current_blocked (1 samples, 0.20%)</title><rect x="91.3828%" y="1541" width="0.2004%" height="15" fill="rgb(245,132,34)" fg:x="456" fg:w="1"/><text x="91.6328%" y="1551.50"></text></g><g><title>calculate_sigpending (3 samples, 0.60%)</title><rect x="91.5832%" y="1573" width="0.6012%" height="15" fill="rgb(236,54,3)" fg:x="457" fg:w="3"/><text x="91.8332%" y="1583.50"></text></g><g><title>_raw_spin_lock_irq (3 samples, 0.60%)</title><rect x="91.5832%" y="1557" width="0.6012%" height="15" fill="rgb(241,173,43)" fg:x="457" fg:w="3"/><text x="91.8332%" y="1567.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.20%)</title><rect x="92.1844%" y="1525" width="0.2004%" height="15" fill="rgb(215,190,9)" fg:x="460" fg:w="1"/><text x="92.4344%" y="1535.50"></text></g><g><title>perf_event_update_userpage (3 samples, 0.60%)</title><rect x="96.3928%" y="1445" width="0.6012%" height="15" fill="rgb(242,101,16)" fg:x="481" fg:w="3"/><text x="96.6428%" y="1455.50"></text></g><g><title>native_write_msr (3 samples, 0.60%)</title><rect x="96.9940%" y="1429" width="0.6012%" height="15" fill="rgb(223,190,21)" fg:x="484" fg:w="3"/><text x="97.2440%" y="1439.50"></text></g><g><title>merge_sched_in (17 samples, 3.41%)</title><rect x="94.3888%" y="1493" width="3.4068%" height="15" fill="rgb(215,228,25)" fg:x="471" fg:w="17"/><text x="94.6388%" y="1503.50">mer..</text></g><g><title>event_sched_in (12 samples, 2.40%)</title><rect x="95.3908%" y="1477" width="2.4048%" height="15" fill="rgb(225,36,22)" fg:x="476" fg:w="12"/><text x="95.6408%" y="1487.50">ev..</text></g><g><title>perf_ibs_add (10 samples, 2.00%)</title><rect x="95.7916%" y="1461" width="2.0040%" height="15" fill="rgb(251,106,46)" fg:x="478" fg:w="10"/><text x="96.0416%" y="1471.50">p..</text></g><g><title>perf_ibs_start (4 samples, 0.80%)</title><rect x="96.9940%" y="1445" width="0.8016%" height="15" fill="rgb(208,90,1)" fg:x="484" fg:w="4"/><text x="97.2440%" y="1455.50"></text></g><g><title>zen_untrain_ret (1 samples, 0.20%)</title><rect x="97.5952%" y="1429" width="0.2004%" height="15" fill="rgb(243,10,4)" fg:x="487" fg:w="1"/><text x="97.8452%" y="1439.50"></text></g><g><title>rb_next (3 samples, 0.60%)</title><rect x="97.7956%" y="1493" width="0.6012%" height="15" fill="rgb(212,137,27)" fg:x="488" fg:w="3"/><text x="98.0456%" y="1503.50"></text></g><g><title>__perf_event_task_sched_in (32 samples, 6.41%)</title><rect x="92.1844%" y="1541" width="6.4128%" height="15" fill="rgb(231,220,49)" fg:x="460" fg:w="32"/><text x="92.4344%" y="1551.50">__perf_e..</text></g><g><title>ctx_sched_in (31 samples, 6.21%)</title><rect x="92.3848%" y="1525" width="6.2124%" height="15" fill="rgb(237,96,20)" fg:x="461" fg:w="31"/><text x="92.6348%" y="1535.50">ctx_sche..</text></g><g><title>visit_groups_merge.constprop.0.isra.0 (30 samples, 6.01%)</title><rect x="92.5852%" y="1509" width="6.0120%" height="15" fill="rgb(239,229,30)" fg:x="462" fg:w="30"/><text x="92.8352%" y="1519.50">visit_gr..</text></g><g><title>zen_untrain_ret (1 samples, 0.20%)</title><rect x="98.3968%" y="1493" width="0.2004%" height="15" fill="rgb(219,65,33)" fg:x="491" fg:w="1"/><text x="98.6468%" y="1503.50"></text></g><g><title>schedule_tail (33 samples, 6.61%)</title><rect x="92.1844%" y="1573" width="6.6132%" height="15" fill="rgb(243,134,7)" fg:x="460" fg:w="33"/><text x="92.4344%" y="1583.50">schedule_..</text></g><g><title>finish_task_switch.isra.0 (33 samples, 6.61%)</title><rect x="92.1844%" y="1557" width="6.6132%" height="15" fill="rgb(216,177,54)" fg:x="460" fg:w="33"/><text x="92.4344%" y="1567.50">finish_ta..</text></g><g><title>asm_sysvec_irq_work (1 samples, 0.20%)</title><rect x="98.5972%" y="1541" width="0.2004%" height="15" fill="rgb(211,160,20)" fg:x="492" fg:w="1"/><text x="98.8472%" y="1551.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.20%)</title><rect x="98.5972%" y="1525" width="0.2004%" height="15" fill="rgb(239,85,39)" fg:x="492" fg:w="1"/><text x="98.8472%" y="1535.50"></text></g><g><title>__sysvec_irq_work (1 samples, 0.20%)</title><rect x="98.5972%" y="1509" width="0.2004%" height="15" fill="rgb(232,125,22)" fg:x="492" fg:w="1"/><text x="98.8472%" y="1519.50"></text></g><g><title>irq_work_run (1 samples, 0.20%)</title><rect x="98.5972%" y="1493" width="0.2004%" height="15" fill="rgb(244,57,34)" fg:x="492" fg:w="1"/><text x="98.8472%" y="1503.50"></text></g><g><title>irq_work_run_list (1 samples, 0.20%)</title><rect x="98.5972%" y="1477" width="0.2004%" height="15" fill="rgb(214,203,32)" fg:x="492" fg:w="1"/><text x="98.8472%" y="1487.50"></text></g><g><title>perf_pending_irq (1 samples, 0.20%)</title><rect x="98.5972%" y="1461" width="0.2004%" height="15" fill="rgb(207,58,43)" fg:x="492" fg:w="1"/><text x="98.8472%" y="1471.50"></text></g><g><title>__wake_up (1 samples, 0.20%)</title><rect x="98.5972%" y="1445" width="0.2004%" height="15" fill="rgb(215,193,15)" fg:x="492" fg:w="1"/><text x="98.8472%" y="1455.50"></text></g><g><title>__wake_up_common (1 samples, 0.20%)</title><rect x="98.5972%" y="1429" width="0.2004%" height="15" fill="rgb(232,15,44)" fg:x="492" fg:w="1"/><text x="98.8472%" y="1439.50"></text></g><g><title>pollwake (1 samples, 0.20%)</title><rect x="98.5972%" y="1413" width="0.2004%" height="15" fill="rgb(212,3,48)" fg:x="492" fg:w="1"/><text x="98.8472%" y="1423.50"></text></g><g><title>try_to_wake_up (1 samples, 0.20%)</title><rect x="98.5972%" y="1397" width="0.2004%" height="15" fill="rgb(218,128,7)" fg:x="492" fg:w="1"/><text x="98.8472%" y="1407.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.20%)</title><rect x="98.5972%" y="1381" width="0.2004%" height="15" fill="rgb(226,216,39)" fg:x="492" fg:w="1"/><text x="98.8472%" y="1391.50"></text></g><g><title>all (499 samples, 100%)</title><rect x="0.0000%" y="1621" width="100.0000%" height="15" fill="rgb(243,47,51)" fg:x="0" fg:w="499"/><text x="0.2500%" y="1631.50"></text></g><g><title>zmem (99 samples, 19.84%)</title><rect x="80.1603%" y="1605" width="19.8397%" height="15" fill="rgb(241,183,40)" fg:x="400" fg:w="99"/><text x="80.4103%" y="1615.50">zmem</text></g><g><title>ret_from_fork (42 samples, 8.42%)</title><rect x="91.5832%" y="1589" width="8.4168%" height="15" fill="rgb(231,217,32)" fg:x="457" fg:w="42"/><text x="91.8332%" y="1599.50">ret_from_fork</text></g><g><title>syscall_exit_to_user_mode (6 samples, 1.20%)</title><rect x="98.7976%" y="1573" width="1.2024%" height="15" fill="rgb(229,61,38)" fg:x="493" fg:w="6"/><text x="99.0476%" y="1583.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 1.20%)</title><rect x="98.7976%" y="1557" width="1.2024%" height="15" fill="rgb(225,210,5)" fg:x="493" fg:w="6"/><text x="99.0476%" y="1567.50"></text></g><g><title>switch_fpu_return (4 samples, 0.80%)</title><rect x="99.1984%" y="1541" width="0.8016%" height="15" fill="rgb(231,79,45)" fg:x="495" fg:w="4"/><text x="99.4484%" y="1551.50"></text></g><g><title>restore_fpregs_from_fpstate (3 samples, 0.60%)</title><rect x="99.3988%" y="1525" width="0.6012%" height="15" fill="rgb(224,100,7)" fg:x="496" fg:w="3"/><text x="99.6488%" y="1535.50"></text></g></svg></svg>